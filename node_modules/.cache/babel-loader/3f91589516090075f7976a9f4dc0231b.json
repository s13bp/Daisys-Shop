{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInjectedConnector = void 0;\n\nvar react_1 = require(\"react\");\n\nvar use_contractkit_1 = require(\"../use-contractkit\");\n\nvar connectors_1 = require(\"./connectors\");\n\nfunction useInjectedConnector(onSubmit, isMetaMask) {\n  var _this = this;\n\n  var _a = (0, use_contractkit_1.useContractKitInternal)(),\n      network = _a.network,\n      feeCurrency = _a.feeCurrency,\n      initConnector = _a.initConnector,\n      error = _a.initError,\n      dapp = _a.dapp,\n      kit = _a.kit;\n\n  (0, react_1.useEffect)(function () {\n    var stale;\n    void function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var connector, e_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              connector = isMetaMask ? new connectors_1.MetaMaskConnector(network, feeCurrency) : new connectors_1.InjectedConnector(network, feeCurrency);\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , initConnector(connector)];\n\n            case 2:\n              _a.sent();\n\n              if (!stale) {\n                onSubmit(connector);\n              }\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              e_1 = _a.sent();\n              console.error(e_1);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }();\n    return function () {\n      stale = true;\n    };\n  }, [initConnector, network, onSubmit, isMetaMask, feeCurrency]);\n  var getTokens = (0, react_1.useCallback)(function () {\n    return __awaiter(_this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , kit.celoTokens.getWrappers()];\n      });\n    });\n  }, [kit]);\n  return {\n    error: error,\n    dapp: dapp,\n    network: network,\n    getTokens: getTokens\n  };\n}\n\nexports.useInjectedConnector = useInjectedConnector;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAEA;;AAEA,SAAgBA,oBAAhB,CACEC,QADF,EAEEC,UAFF,EAEqB;AAFrB;;AAIQ,WAOF,+CAPE;AAAA,MACJC,OAAO,aADH;AAAA,MAEJC,WAAW,iBAFP;AAAA,MAGJC,aAAa,mBAHT;AAAA,MAIOC,KAAK,eAJZ;AAAA,MAKJC,IAAI,UALA;AAAA,MAMJC,GAAG,SANC;;AASN,yBAAU;AACR,QAAIC,KAAJ;AACA,SAAM;AAAA;;;;;AACEC,uBAAS,GAAGR,UAAU,GACxB,IAAIS,8BAAJ,CAAsBR,OAAtB,EAA+BC,WAA/B,CADwB,GAExB,IAAIO,8BAAJ,CAAsBR,OAAtB,EAA+BC,WAA/B,CAFE;;;;;;AAKJ;AAAA;AAAA,gBAAMC,aAAa,CAACK,SAAD,CAAnB;;;AAAAE;;AACA,kBAAI,CAACH,KAAL,EAAY;AACVR,wBAAQ,CAACS,SAAD,CAAR;AACD;;;;;;;;AAEDG,qBAAO,CAACP,KAAR,CAAcQ,GAAd;;;;;;;;;;;OAXE;AAaL,KAbI,EAAL;AAeA,WAAO;AACLL,WAAK,GAAG,IAAR;AACD,KAFD;AAGD,GApBD,EAoBG,CAACJ,aAAD,EAAgBF,OAAhB,EAAyBF,QAAzB,EAAmCC,UAAnC,EAA+CE,WAA/C,CApBH;AAsBA,MAAMW,SAAS,GAAG,yBAAY;AAAA;;AAC5B;AAAA;AAAA,UAAOP,GAAG,CAACQ,UAAJ,CAAeC,WAAf,EAAP;;KAD4B;AAE7B,GAFiB,EAEf,CAACT,GAAD,CAFe,CAAlB;AAIA,SAAO;AAAEF,SAAK,OAAP;AAASC,QAAI,MAAb;AAAeJ,WAAO,SAAtB;AAAwBY,aAAS;AAAjC,GAAP;AACD;;AAxCDG","names":["useInjectedConnector","onSubmit","isMetaMask","network","feeCurrency","initConnector","error","dapp","kit","stale","connector","connectors_1","_a","console","e_1","getTokens","celoTokens","getWrappers","exports"],"sourceRoot":"","sources":["../../src/connectors/useMetaMaskConnector.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}