{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LedgerSigner = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\n\nvar errors_1 = require(\"@ledgerhq/errors\");\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\n\nvar ledger_utils_1 = require(\"./ledger-utils\");\n\nvar ledger_wallet_1 = require(\"./ledger-wallet\");\n\nvar tokens_1 = require(\"./tokens\");\n\nvar debug = (0, debug_1.default)('kit:wallet:ledger');\nvar CELO_APP_ACCEPTS_CONTRACT_DATA_FROM_VERSION = '1.0.2';\n/**\n * Signs the EVM transaction with a Ledger device\n */\n\nvar LedgerSigner =\n/** @class */\nfunction () {\n  function LedgerSigner(ledger, derivationPath, ledgerAddressValidation, appConfiguration) {\n    if (appConfiguration === void 0) {\n      appConfiguration = {\n        arbitraryDataEnabled: 0,\n        version: '0.0.0'\n      };\n    }\n\n    this.validated = false;\n    this.ledger = ledger;\n    this.derivationPath = derivationPath;\n    this.ledgerAddressValidation = ledgerAddressValidation;\n    this.appConfiguration = appConfiguration;\n  }\n\n  LedgerSigner.prototype.getNativeKey = function () {\n    return this.derivationPath;\n  };\n\n  LedgerSigner.prototype.signTransaction = function (addToV, encodedTx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var validatedDerivationPath, signature, rv, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.getValidatedDerivationPath()];\n\n          case 1:\n            validatedDerivationPath = _a.sent();\n            return [4\n            /*yield*/\n            , this.checkForKnownToken(encodedTx)];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.ledger.signTransaction(validatedDerivationPath, (0, address_1.trimLeading0x)(encodedTx.rlpEncode) // the ledger requires the rlpEncode without the leading 0x\n            ) // EIP155 support. check/recalc signature v value.\n            ];\n\n          case 3:\n            signature = _a.sent();\n            rv = parseInt(signature.v, 16); // tslint:disable-next-line: no-bitwise\n\n            if (rv !== addToV && (rv & addToV) !== rv) {\n              addToV += 1; // add signature v bit.\n            }\n\n            signature.v = addToV.toString(10);\n            return [2\n            /*return*/\n            , {\n              v: signature.v,\n              r: ethUtil.toBuffer((0, address_1.ensureLeading0x)(signature.r)),\n              s: ethUtil.toBuffer((0, address_1.ensureLeading0x)(signature.s))\n            }];\n\n          case 4:\n            error_1 = _a.sent();\n\n            if (error_1 instanceof errors_1.TransportStatusError) {\n              // The Ledger fails if it doesn't know the feeCurrency\n              if (error_1.statusCode === 27264 && error_1.statusText === 'INCORRECT_DATA') {\n                debug('Possible invalid feeCurrency field');\n                throw new Error('ledger-signer@signTransaction: Incorrect Data. Verify that the feeCurrency is a valid one');\n              } else {\n                (0, ledger_utils_1.transportErrorFriendlyMessage)(error_1);\n              }\n            }\n\n            throw error_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LedgerSigner.prototype.signPersonalMessage = function (data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signature, _a, _b, error_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 3,, 4]);\n\n            _b = (_a = this.ledger).signPersonalMessage;\n            return [4\n            /*yield*/\n            , this.getValidatedDerivationPath()];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _b.apply(_a, [_c.sent(), (0, address_1.trimLeading0x)(data)])];\n\n          case 2:\n            signature = _c.sent();\n            return [2\n            /*return*/\n            , {\n              v: signature.v,\n              r: ethUtil.toBuffer((0, address_1.ensureLeading0x)(signature.r)),\n              s: ethUtil.toBuffer((0, address_1.ensureLeading0x)(signature.s))\n            }];\n\n          case 3:\n            error_2 = _c.sent();\n\n            if (error_2 instanceof errors_1.TransportStatusError) {\n              (0, ledger_utils_1.transportErrorFriendlyMessage)(error_2);\n            }\n\n            throw error_2;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LedgerSigner.prototype.signTypedData = function (typedData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var domainSeparator, hashStructMessage, sig, _a, _b, error_3;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 3,, 4]);\n\n            domainSeparator = (0, sign_typed_data_utils_1.structHash)('EIP712Domain', typedData.domain, typedData.types);\n            hashStructMessage = (0, sign_typed_data_utils_1.structHash)(typedData.primaryType, typedData.message, typedData.types);\n            _b = (_a = this.ledger).signEIP712HashedMessage;\n            return [4\n            /*yield*/\n            , this.getValidatedDerivationPath()];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _b.apply(_a, [_c.sent(), domainSeparator, hashStructMessage])];\n\n          case 2:\n            sig = _c.sent();\n            return [2\n            /*return*/\n            , {\n              v: parseInt(sig.v, 10),\n              r: ethUtil.toBuffer((0, address_1.ensureLeading0x)(sig.r)),\n              s: ethUtil.toBuffer((0, address_1.ensureLeading0x)(sig.s))\n            }];\n\n          case 3:\n            error_3 = _c.sent();\n\n            if (error_3 instanceof errors_1.TransportStatusError) {\n              (0, ledger_utils_1.transportErrorFriendlyMessage)(error_3);\n            }\n\n            throw error_3;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LedgerSigner.prototype.getValidatedDerivationPath = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.validationRequired()) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.ledger.getAddress(this.derivationPath, true)];\n\n          case 1:\n            _a.sent();\n\n            this.validated = true;\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this.derivationPath];\n        }\n      });\n    });\n  };\n\n  LedgerSigner.prototype.validationRequired = function () {\n    switch (this.ledgerAddressValidation) {\n      case ledger_wallet_1.AddressValidation.never:\n        {\n          return false;\n        }\n\n      case ledger_wallet_1.AddressValidation.everyTransaction:\n        {\n          return true;\n        }\n\n      case ledger_wallet_1.AddressValidation.firstTransactionPerAddress:\n        {\n          return !this.validated;\n        }\n\n      case ledger_wallet_1.AddressValidation.initializationOnly:\n        {\n          // Already initialized, so no need to validate in this state\n          return false;\n        }\n\n      default:\n        {\n          throw new Error('ledger-signer@validationRequired: invalid ledgerValidation value');\n        }\n    }\n  };\n  /**\n   * Display ERC20 info on ledger if contract is well known\n   * @param rlpEncoded Encoded transaction\n   */\n\n\n  LedgerSigner.prototype.checkForKnownToken = function (rlpEncoded) {\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenInfo, feeTokenInfo;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!((0, tokens_1.compareLedgerAppVersions)(this.appConfiguration.version, CELO_APP_ACCEPTS_CONTRACT_DATA_FROM_VERSION) >= 0)) return [3\n            /*break*/\n            , 4];\n            tokenInfo = (0, tokens_1.tokenInfoByAddressAndChainId)(rlpEncoded.transaction.to, rlpEncoded.transaction.chainId);\n            if (!tokenInfo) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.ledger.provideERC20TokenInformation(tokenInfo)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            if (!(rlpEncoded.transaction.feeCurrency && rlpEncoded.transaction.feeCurrency !== '0x')) return [3\n            /*break*/\n            , 4];\n            feeTokenInfo = (0, tokens_1.tokenInfoByAddressAndChainId)(rlpEncoded.transaction.feeCurrency, rlpEncoded.transaction.chainId);\n            if (!feeTokenInfo) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.ledger.provideERC20TokenInformation(feeTokenInfo)];\n\n          case 3:\n            _a.sent();\n\n            _a.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LedgerSigner.prototype.decrypt = function (_ciphertext) {\n    throw new Error('Decryption operation is not supported on this signer'); // To make the compiler happy\n\n    return Promise.resolve(_ciphertext);\n  };\n\n  LedgerSigner.prototype.computeSharedSecret = function (_publicKey) {\n    throw new Error('Not implemented');\n    return Promise.resolve(Buffer.from([]));\n  };\n\n  return LedgerSigner;\n}();\n\nexports.LedgerSigner = LedgerSigner;","map":{"version":3,"mappings":"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","names":["debug","CELO_APP_ACCEPTS_CONTRACT_DATA_FROM_VERSION","ledger","derivationPath","ledgerAddressValidation","appConfiguration","arbitraryDataEnabled","version","LedgerSigner","addToV","encodedTx","getValidatedDerivationPath","validatedDerivationPath","_a","checkForKnownToken","signTransaction","rlpEncode","signature","rv","parseInt","v","toString","r","ethUtil","toBuffer","s","error_1","errors_1","statusCode","statusText","Error","data","_b","signPersonalMessage","_c","error_2","typedData","domainSeparator","domain","types","hashStructMessage","primaryType","message","signEIP712HashedMessage","sig","error_3","validationRequired","getAddress","validated","ledger_wallet_1","never","everyTransaction","firstTransactionPerAddress","initializationOnly","rlpEncoded","tokenInfo","transaction","to","chainId","provideERC20TokenInformation","feeCurrency","feeTokenInfo","_ciphertext","Promise","resolve","_publicKey","Buffer","from","exports"],"sourceRoot":"","sources":["../src/ledger-signer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}