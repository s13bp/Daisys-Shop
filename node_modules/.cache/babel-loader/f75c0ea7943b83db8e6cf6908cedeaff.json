{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LockedGoldWrapper = void 0;\n\nvar collections_1 = require(\"@celo/base/lib/collections\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar BaseWrapper_1 = require(\"../wrappers/BaseWrapper\");\n\nvar bigNumberComparator = function (a, b) {\n  return a.lt(b);\n};\n\nfunction linkedListChanges(groups, changed) {\n  return (0, collections_1.linkedListChanges)(groups, changed, bigNumberComparator);\n}\n/**\n * Contract for handling deposits needed for voting.\n */\n\n\nvar LockedGoldWrapper =\n/** @class */\nfunction (_super) {\n  __extends(LockedGoldWrapper, _super);\n\n  function LockedGoldWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Withdraws a gold that has been unlocked after the unlocking period has passed.\n     * @param index The index of the pending withdrawal to withdraw.\n     */\n\n\n    _this.withdraw = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.withdraw);\n    /**\n     * Locks gold to be used for voting.\n     * The gold to be locked, must be specified as the `tx.value`\n     */\n\n    _this.lock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.lock);\n    /**\n     * Unlocks gold that becomes withdrawable after the unlocking period.\n     * @param value The amount of gold to unlock.\n     */\n\n    _this.unlock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.unlock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString));\n    /**\n     * Relocks gold that has been unlocked but not withdrawn.\n     * @param index The index of the pending withdrawal to relock from.\n     * @param value The value to relock from the specified pending withdrawal.\n     */\n\n    _this._relock = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.relock, (0, BaseWrapper_1.tupleParser)(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString));\n    /**\n     * Returns the total amount of locked gold for an account.\n     * @param account The account.\n     * @return The total amount of locked gold for an account.\n     */\n\n    _this.getAccountTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total amount of locked gold in the system. Note that this does not include\n     *   gold that has been unlocked but not yet withdrawn.\n     * @returns The total amount of locked gold in the system.\n     */\n\n    _this.getTotalLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getTotalLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total amount of non-voting locked gold for an account.\n     * @param account The account.\n     * @return The total amount of non-voting locked gold for an account.\n     */\n\n    _this.getAccountNonvotingLockedGold = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getAccountNonvotingLockedGold, undefined, BaseWrapper_1.valueToBigNumber);\n    return _this;\n  }\n\n  LockedGoldWrapper.prototype.getPendingWithdrawalsTotalValue = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pendingWithdrawals, values, reducer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account) // Ensure there are enough pending withdrawals to relock.\n            ];\n\n          case 1:\n            pendingWithdrawals = _a.sent();\n            values = pendingWithdrawals.map(function (pw) {\n              return pw.value;\n            });\n\n            reducer = function (total, pw) {\n              return pw.plus(total);\n            };\n\n            return [2\n            /*return*/\n            , values.reduce(reducer, new bignumber_js_1.default(0))];\n        }\n      });\n    });\n  };\n  /**\n   * Relocks gold that has been unlocked but not withdrawn.\n   * @param value The value to relock from pending withdrawals.\n   */\n\n\n  LockedGoldWrapper.prototype.relock = function (account, value) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pendingWithdrawals, totalValue, throwIfNotSorted, remainingToRelock, relockPw;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account) // Ensure there are enough pending withdrawals to relock.\n            ];\n\n          case 1:\n            pendingWithdrawals = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawalsTotalValue(account)];\n\n          case 2:\n            totalValue = _a.sent();\n\n            if (totalValue.isLessThan(value)) {\n              throw new Error(\"Not enough pending withdrawals to relock \" + value);\n            }\n\n            throwIfNotSorted = function (pw, i) {\n              if (i > 0 && !pw.time.isGreaterThanOrEqualTo(pendingWithdrawals[i - 1].time)) {\n                throw new Error('Pending withdrawals not sorted by timestamp');\n              }\n            };\n\n            pendingWithdrawals.forEach(throwIfNotSorted);\n            remainingToRelock = new bignumber_js_1.default(value);\n\n            relockPw = function (acc, pw, i) {\n              var valueToRelock = bignumber_js_1.default.minimum(pw.value, remainingToRelock);\n\n              if (!valueToRelock.isZero()) {\n                remainingToRelock = remainingToRelock.minus(valueToRelock);\n                acc.push(_this._relock(i, valueToRelock));\n              }\n\n              return acc;\n            };\n\n            return [2\n            /*return*/\n            , pendingWithdrawals.reduceRight(relockPw, [])];\n        }\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  LockedGoldWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = {};\n            _a = BaseWrapper_1.valueToBigNumber;\n            return [4\n            /*yield*/\n            , this.contract.methods.unlockingPeriod().call()];\n\n          case 1:\n            _b.unlockingPeriod = _a.apply(void 0, [_c.sent()]);\n            return [4\n            /*yield*/\n            , this.getTotalLockedGold()];\n\n          case 2:\n            return [2\n            /*return*/\n            , (_b.totalLockedGold = _c.sent(), _b)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the lockedgold contract\n   * @return LockedGoldConfig object\n   */\n\n\n  LockedGoldWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _a.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, config), {\n              unlockingPeriod: (0, BaseWrapper_1.secondsToDurationString)(config.unlockingPeriod)\n            })];\n        }\n      });\n    });\n  };\n\n  LockedGoldWrapper.prototype.getAccountSummary = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nonvoting, total, validators, requirement, pendingWithdrawals;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAccountNonvotingLockedGold(account)];\n\n          case 1:\n            nonvoting = _a.sent();\n            return [4\n            /*yield*/\n            , this.getAccountTotalLockedGold(account)];\n\n          case 2:\n            total = _a.sent();\n            return [4\n            /*yield*/\n            , this.kit.contracts.getValidators()];\n\n          case 3:\n            validators = _a.sent();\n            return [4\n            /*yield*/\n            , validators.getAccountLockedGoldRequirement(account)];\n\n          case 4:\n            requirement = _a.sent();\n            return [4\n            /*yield*/\n            , this.getPendingWithdrawals(account)];\n\n          case 5:\n            pendingWithdrawals = _a.sent();\n            return [2\n            /*return*/\n            , {\n              lockedGold: {\n                total: total,\n                nonvoting: nonvoting,\n                requirement: requirement\n              },\n              pendingWithdrawals: pendingWithdrawals\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the pending withdrawals from unlocked gold for an account.\n   * @param account The address of the account.\n   * @return The value and timestamp for each pending withdrawal.\n   */\n\n\n  LockedGoldWrapper.prototype.getPendingWithdrawals = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var withdrawals;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.getPendingWithdrawals(account).call()];\n\n          case 1:\n            withdrawals = _a.sent();\n            return [2\n            /*return*/\n            , (0, collections_1.zip)(function (time, value) {\n              return {\n                time: (0, BaseWrapper_1.valueToBigNumber)(time),\n                value: (0, BaseWrapper_1.valueToBigNumber)(value)\n              };\n            }, withdrawals[1], withdrawals[0])];\n        }\n      });\n    });\n  };\n  /**\n   * Retrieves AccountSlashed for epochNumber.\n   * @param epochNumber The epoch to retrieve AccountSlashed at.\n   */\n\n\n  LockedGoldWrapper.prototype.getAccountsSlashed = function (epochNumber) {\n    return __awaiter(this, void 0, void 0, function () {\n      var events, _a, _b;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = this.getPastEvents;\n            _b = ['AccountSlashed'];\n            _c = {};\n            return [4\n            /*yield*/\n            , this.kit.getFirstBlockNumberForEpoch(epochNumber)];\n\n          case 1:\n            _c.fromBlock = _d.sent();\n            return [4\n            /*yield*/\n            , this.kit.getLastBlockNumberForEpoch(epochNumber)];\n\n          case 2:\n            return [4\n            /*yield*/\n            , _a.apply(this, _b.concat([(_c.toBlock = _d.sent(), _c)]))];\n\n          case 3:\n            events = _d.sent();\n            return [2\n            /*return*/\n            , events.map(function (e) {\n              return {\n                epochNumber: epochNumber,\n                slashed: e.returnValues.slashed,\n                penalty: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.penalty),\n                reporter: e.returnValues.reporter,\n                reward: (0, BaseWrapper_1.valueToBigNumber)(e.returnValues.reward)\n              };\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Computes parameters for slashing `penalty` from `account`.\n   * @param account The account to slash.\n   * @param penalty The amount to slash as penalty.\n   * @return List of (group, voting gold) to decrement from `account`.\n   */\n\n\n  LockedGoldWrapper.prototype.computeInitialParametersForSlashing = function (account, penalty) {\n    return __awaiter(this, void 0, void 0, function () {\n      var election, eligible, groups;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.kit.contracts.getElection()];\n\n          case 1:\n            election = _a.sent();\n            return [4\n            /*yield*/\n            , election.getEligibleValidatorGroupsVotes()];\n\n          case 2:\n            eligible = _a.sent();\n            groups = eligible.map(function (x) {\n              return {\n                address: x.address,\n                value: x.votes\n              };\n            });\n            return [2\n            /*return*/\n            , this.computeParametersForSlashing(account, penalty, groups)];\n        }\n      });\n    });\n  };\n\n  LockedGoldWrapper.prototype.computeParametersForSlashing = function (account, penalty, groups) {\n    return __awaiter(this, void 0, void 0, function () {\n      var changed, changes;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.computeDecrementsForSlashing(account, penalty, groups)];\n\n          case 1:\n            changed = _a.sent();\n            changes = linkedListChanges(groups, changed);\n            return [2\n            /*return*/\n            , __assign(__assign({}, changes), {\n              indices: changed.map(function (a) {\n                return a.index;\n              })\n            })];\n        }\n      });\n    });\n  }; // Returns how much voting gold will be decremented from the groups voted by an account\n  // Implementation follows protocol/test/common/integration slashingOfGroups()\n\n\n  LockedGoldWrapper.prototype.computeDecrementsForSlashing = function (account, penalty, allGroups) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var nonVoting, difference, election, groups, res, _loop_1, i, state_1;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAccountNonvotingLockedGold(account)];\n\n          case 1:\n            nonVoting = _b.sent();\n\n            if (penalty.isLessThan(nonVoting)) {\n              return [2\n              /*return*/\n              , []];\n            }\n\n            difference = penalty.minus(nonVoting);\n            return [4\n            /*yield*/\n            , this.kit.contracts.getElection()];\n\n          case 2:\n            election = _b.sent();\n            return [4\n            /*yield*/\n            , election.getGroupsVotedForByAccount(account)];\n\n          case 3:\n            groups = _b.sent();\n            res = [];\n\n            _loop_1 = function (i) {\n              var group, totalVotes, votes, slashedVotes;\n              return __generator(this, function (_c) {\n                switch (_c.label) {\n                  case 0:\n                    group = groups[i];\n                    totalVotes = (_a = allGroups.find(function (a) {\n                      return a.address === group;\n                    })) === null || _a === void 0 ? void 0 : _a.value;\n\n                    if (!totalVotes) {\n                      throw new Error(\"Cannot find group \" + group);\n                    }\n\n                    return [4\n                    /*yield*/\n                    , election.getTotalVotesForGroupByAccount(group, account)];\n\n                  case 1:\n                    votes = _c.sent();\n                    slashedVotes = votes.lt(difference) ? votes : difference;\n                    res.push({\n                      address: group,\n                      value: totalVotes.minus(slashedVotes),\n                      index: i\n                    });\n                    difference = difference.minus(slashedVotes);\n\n                    if (difference.eq(new bignumber_js_1.default(0))) {\n                      return [2\n                      /*return*/\n                      , \"break\"];\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            };\n\n            i = groups.length - 1;\n            _b.label = 4;\n\n          case 4:\n            if (!(i >= 0)) return [3\n            /*break*/\n            , 7];\n            return [5\n            /*yield**/\n            , _loop_1(i)];\n\n          case 5:\n            state_1 = _b.sent();\n            if (state_1 === \"break\") return [3\n            /*break*/\n            , 7];\n            _b.label = 6;\n\n          case 6:\n            i--;\n            return [3\n            /*break*/\n            , 4];\n\n          case 7:\n            return [2\n            /*return*/\n            , res];\n        }\n      });\n    });\n  };\n\n  return LockedGoldWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.LockedGoldWrapper = LockedGoldWrapper;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;AAEA;;AAWA,IAAMA,mBAAmB,GAA0B,UAACC,CAAD,EAAeC,CAAf,EAA2B;AAAK,UAAC,CAACC,EAAF,CAAKD,CAAL;AAAO,CAA1F;;AACA,SAASE,iBAAT,CACEC,MADF,EAEEC,OAFF,EAE4B;AAE1B,SAAO,qCAAsBD,MAAtB,EAA8BC,OAA9B,EAAuCN,mBAAvC,CAAP;AACD;AAoCD;;;;;AAGA;AAAA;AAAA;AAAuCO;;AAAvC;AAAA;AACE;;;;;;AAIAC,qBAA2D,6BACzDA,KAAI,CAACC,GADoD,EAEzDD,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBC,QAFmC,CAA3D;AAKA;;;;;AAIAJ,iBAAO,6BAAUA,KAAI,CAACC,GAAf,EAAoBD,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBE,IAA1C,CAAP;AAEA;;;;;AAIAL,mBAAkE,6BAChEA,KAAI,CAACC,GAD2D,EAEhED,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBG,MAF0C,EAGhE,+BAAYC,2BAAZ,CAHgE,CAAlE;AAqDA;;;;;;AAKAP,oBAAkF,6BAChFA,KAAI,CAACC,GAD2E,EAEhFD,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBK,MAF0D,EAGhF,+BAAYD,2BAAZ,EAA2BA,2BAA3B,CAHgF,CAAlF;AAMA;;;;;;AAKAP,sCAA4B,6BAC1BA,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBM,yBADI,EAE1BC,SAF0B,EAG1BH,8BAH0B,CAA5B;AAMA;;;;;;AAKAP,+BAAqB,6BACnBA,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBQ,kBADH,EAEnBD,SAFmB,EAGnBH,8BAHmB,CAArB;AAMA;;;;;;AAKAP,0CAAgC,6BAC9BA,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBS,6BADQ,EAE9BF,SAF8B,EAG9BH,8BAH8B,CAAhC;;AA0ID;;AA/NOM,gEAAN,UAAsCC,OAAtC,EAAsD;;;;;;AACzB;AAAA;AAAA,cAAM,KAAKC,qBAAL,CAA2BD,OAA3B,CAAN,CAC3B;AAD2B;;;AAArBE,8BAAkB,GAAGC,SAArB;AAEAC,kBAAM,GAAGF,kBAAkB,CAACG,GAAnB,CAAuB,UAACC,EAAD,EAAsB;AAAK,uBAAE,CAACC,KAAH;AAAQ,aAA1D,CAAT;;AACAC,mBAAO,GAAG,UAACC,KAAD,EAAmBH,EAAnB,EAAgC;AAAK,uBAAE,CAACI,IAAH,CAAQD,KAAR;AAAc,aAA7D;;AACN;AAAA;AAAA,cAAOL,MAAM,CAACO,MAAP,CAAcH,OAAd,EAAuB,IAAII,sBAAJ,CAAc,CAAd,CAAvB,CAAP;;;;AACD,GANK;AAQN;;;;;;AAIMb,uCAAN,UACEC,OADF,EAEEO,KAFF,EAEwB;;;;;;;;;AAEK;AAAA;AAAA,cAAM,KAAKN,qBAAL,CAA2BD,OAA3B,CAAN,CAC3B;AAD2B;;;AAArBE,8BAAkB,GAAGC,SAArB;AAEa;AAAA;AAAA,cAAM,KAAKU,+BAAL,CAAqCb,OAArC,CAAN;;;AAAbc,sBAAU,GAAGX,SAAb;;AACN,gBAAIW,UAAU,CAACC,UAAX,CAAsBR,KAAtB,CAAJ,EAAkC;AAChC,oBAAM,IAAIS,KAAJ,CAAU,8CAA4CT,KAAtD,CAAN;AACD;;AAGKU,4BAAgB,GAAG,UAACX,EAAD,EAAwBY,CAAxB,EAAiC;AACxD,kBAAIA,CAAC,GAAG,CAAJ,IAAS,CAACZ,EAAE,CAACa,IAAH,CAAQC,sBAAR,CAA+BlB,kBAAkB,CAACgB,CAAC,GAAG,CAAL,CAAlB,CAA0BC,IAAzD,CAAd,EAA8E;AAC5E,sBAAM,IAAIH,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF,aAJK;;AAKNd,8BAAkB,CAACmB,OAAnB,CAA2BJ,gBAA3B;AAEIK,6BAAiB,GAAG,IAAIV,sBAAJ,CAAcL,KAAd,CAApB;;AACEgB,oBAAQ,GAAG,UACfC,GADe,EAEflB,EAFe,EAGfY,CAHe,EAGN;AAET,kBAAMO,aAAa,GAAGb,uBAAUc,OAAV,CAAkBpB,EAAE,CAACC,KAArB,EAA4Be,iBAA5B,CAAtB;;AACA,kBAAI,CAACG,aAAa,CAACE,MAAd,EAAL,EAA6B;AAC3BL,iCAAiB,GAAGA,iBAAiB,CAACM,KAAlB,CAAwBH,aAAxB,CAApB;AACAD,mBAAG,CAACK,IAAJ,CAAS3C,KAAI,CAAC4C,OAAL,CAAaZ,CAAb,EAAgBO,aAAhB,CAAT;AACD;;AACD,qBAAOD,GAAP;AACD,aAXK;;AAYN;AAAA;AAAA,cAAOtB,kBAAkB,CAAC6B,WAAnB,CAA+BR,QAA/B,EAAyC,EAAzC,CAAP;;;;AACD,GAjCK;AA+EN;;;;;AAGMxB,0CAAN;;;;;;;;;;AAEqBI;AAAiB;AAAA;AAAA,cAAM,KAAKf,QAAL,CAAcC,OAAd,CAAsB2C,eAAtB,GAAwCC,IAAxC,EAAN;;;AAAlCC,iCAAiB/B,kBAAiBgC,SAAjB,EAAjB;AACiB;AAAA;AAAA,cAAM,KAAKtC,kBAAL,EAAN;;;AAFnB;AAAA;AAAA,eAEEqC,qBAAiBC,SAAjB,IAFF;;;;AAID,GALK;AAON;;;;;;AAIMpC,uDAAN;;;;;;AACiB;AAAA;AAAA,cAAM,KAAKqC,SAAL,EAAN;;;AAATC,kBAAM,GAAGlC,SAAT;AACN;AAAA;AAAA,oCACKkC,MADL,GACW;AACTL,6BAAe,EAAE,2CAAwBK,MAAM,CAACL,eAA/B;AADR,aADX;;;;AAID,GANK;;AAQAjC,kDAAN,UAAwBC,OAAxB,EAAuC;;;;;;AACnB;AAAA;AAAA,cAAM,KAAKF,6BAAL,CAAmCE,OAAnC,CAAN;;;AAAZsC,qBAAS,GAAGnC,SAAZ;AACQ;AAAA;AAAA,cAAM,KAAKR,yBAAL,CAA+BK,OAA/B,CAAN;;;AAARS,iBAAK,GAAGN,SAAR;AACa;AAAA;AAAA,cAAM,KAAKhB,GAAL,CAASoD,SAAT,CAAmBC,aAAnB,EAAN;;;AAAbC,sBAAU,GAAGtC,SAAb;AACc;AAAA;AAAA,cAAMsC,UAAU,CAACC,+BAAX,CAA2C1C,OAA3C,CAAN;;;AAAd2C,uBAAW,GAAGxC,SAAd;AACqB;AAAA;AAAA,cAAM,KAAKF,qBAAL,CAA2BD,OAA3B,CAAN;;;AAArBE,8BAAkB,GAAGC,SAArB;AACN;AAAA;AAAA,cAAO;AACLyC,wBAAU,EAAE;AACVnC,qBAAK,OADK;AAEV6B,yBAAS,WAFC;AAGVK,2BAAW;AAHD,eADP;AAMLzC,gCAAkB;AANb,aAAP;;;;AAQD,GAdK;AAgBN;;;;;;;AAKMH,sDAAN,UAA4BC,OAA5B,EAA2C;;;;;;AACrB;AAAA;AAAA,cAAM,KAAKZ,QAAL,CAAcC,OAAd,CAAsBY,qBAAtB,CAA4CD,OAA5C,EAAqDiC,IAArD,EAAN;;;AAAdY,uBAAW,GAAG1C,SAAd;AACN;AAAA;AAAA,cAAO,uBACL,UAACgB,IAAD,EAAOZ,KAAP,EAAY;AAAwB,qBAAC;AACnCY,oBAAI,EAAE,oCAAiBA,IAAjB,CAD6B;AAEnCZ,qBAAK,EAAE,oCAAiBA,KAAjB;AAF4B,eAAD;AAGlC,aAJG,EAKLsC,WAAW,CAAC,CAAD,CALN,EAMLA,WAAW,CAAC,CAAD,CANN,CAAP;;;;AAQD,GAVK;AAYN;;;;;;AAIM9C,mDAAN,UAAyB+C,WAAzB,EAA4C;;;;;;;;;AACrB3C,sBAAK4C,aAAL;kBAAmB;;AAC3B;AAAA;AAAA,cAAM,KAAK5D,GAAL,CAAS6D,2BAAT,CAAqCF,WAArC,CAAN;;;AAAXX,2BAAWc,SAAX;AACS;AAAA;AAAA,cAAM,KAAK9D,GAAL,CAAS+D,0BAAT,CAAoCJ,WAApC,CAAN;;;AAFI;AAAA;AAAA,cAAM3C,eAAI+B,YAEvBC,aAASc,SAAT,IAFuB,GAAJ,CAAN;;;AAATE,kBAAM,GAAGF,SAAT;AAIN;AAAA;AAAA,cAAOE,MAAM,CAAC9C,GAAP,CACL,UAAC+C,CAAD,EAAY;AAAqB,qBAAC;AAChCN,2BAAW,aADqB;AAEhCO,uBAAO,EAAED,CAAC,CAACE,YAAF,CAAeD,OAFQ;AAGhCE,uBAAO,EAAE,oCAAiBH,CAAC,CAACE,YAAF,CAAeC,OAAhC,CAHuB;AAIhCC,wBAAQ,EAAEJ,CAAC,CAACE,YAAF,CAAeE,QAJO;AAKhCC,sBAAM,EAAE,oCAAiBL,CAAC,CAACE,YAAF,CAAeG,MAAhC;AALwB,eAAD;AAM/B,aAPG,CAAP;;;;AASD,GAdK;AAgBN;;;;;;;;AAMM1D,oEAAN,UAA0CC,OAA1C,EAA2DuD,OAA3D,EAA6E;;;;;;AAC1D;AAAA;AAAA,cAAM,KAAKpE,GAAL,CAASoD,SAAT,CAAmBmB,WAAnB,EAAN;;;AAAXC,oBAAQ,GAAGxD,SAAX;AACW;AAAA;AAAA,cAAMwD,QAAQ,CAACC,+BAAT,EAAN;;;AAAXC,oBAAQ,GAAG1D,SAAX;AACApB,kBAAM,GAAsB8E,QAAQ,CAACxD,GAAT,CAAa,UAACyD,CAAD,EAAE;AAAK,qBAAC;AAAEC,uBAAO,EAAED,CAAC,CAACC,OAAb;AAAsBxD,qBAAK,EAAEuD,CAAC,CAACE;AAA/B,eAAD;AAAwC,aAA5D,CAA5B;AACN;AAAA;AAAA,cAAO,KAAKC,4BAAL,CAAkCjE,OAAlC,EAA2CuD,OAA3C,EAAoDxE,MAApD,CAAP;;;;AACD,GALK;;AAOAgB,6DAAN,UACEC,OADF,EAEEuD,OAFF,EAGExE,MAHF,EAG2B;;;;;;AAET;AAAA;AAAA,cAAM,KAAKmF,4BAAL,CAAkClE,OAAlC,EAA2CuD,OAA3C,EAAoDxE,MAApD,CAAN;;;AAAVC,mBAAO,GAAGmB,SAAV;AACAgE,mBAAO,GAAGrF,iBAAiB,CAACC,MAAD,EAASC,OAAT,CAA3B;AACN;AAAA;AAAA,oCAAYmF,OAAZ,GAAmB;AAAEC,qBAAO,EAAEpF,OAAO,CAACqB,GAAR,CAAY,UAAC1B,CAAD,EAAE;AAAK,wBAAC,CAAC0F,KAAF;AAAO,eAA1B;AAAX,aAAnB;;;;AACD,GARK,CA7MR,CAuNE;AACA;;;AACctE,6DAAd,UACEC,OADF,EAEEuD,OAFF,EAGEe,SAHF,EAG8B;;;;;;;;;AAGV;AAAA;AAAA,cAAM,KAAKxE,6BAAL,CAAmCE,OAAnC,CAAN;;;AAAZuE,qBAAS,GAAGrC,SAAZ;;AACN,gBAAIqB,OAAO,CAACxC,UAAR,CAAmBwD,SAAnB,CAAJ,EAAmC;AACjC;AAAA;AAAA,gBAAO,EAAP;AACD;;AACGC,sBAAU,GAAGjB,OAAO,CAAC3B,KAAR,CAAc2C,SAAd,CAAb;AAEa;AAAA;AAAA,cAAM,KAAKpF,GAAL,CAASoD,SAAT,CAAmBmB,WAAnB,EAAN;;;AAAXC,oBAAQ,GAAGzB,SAAX;AACS;AAAA;AAAA,cAAMyB,QAAQ,CAACc,0BAAT,CAAoCzE,OAApC,CAAN;;;AAATjB,kBAAM,GAAGmD,SAAT;AACAwC,eAAG,GAAG,EAAN;;gCAEGxD,GAAC;;;;;AACFyD,yBAAK,GAAG5F,MAAM,CAACmC,CAAD,CAAd;AACA0D,8BAAU,GAAG,eAAS,CAACC,IAAV,CAAe,UAAClG,CAAD,EAAE;AAAK,8BAAC,CAACoF,OAAF,KAAcY,KAAd;AAAmB,qBAAzC,OAA0C,IAA1C,IAA0CxE,aAA1C,GAA0C,MAA1C,GAA0CA,GAAEI,KAAzD;;AACN,wBAAI,CAACqE,UAAL,EAAiB;AACf,4BAAM,IAAI5D,KAAJ,CAAU,uBAAqB2D,KAA/B,CAAN;AACD;;AACa;AAAA;AAAA,sBAAMhB,QAAQ,CAACmB,8BAAT,CAAwCH,KAAxC,EAA+C3E,OAA/C,CAAN;;;AAARgE,yBAAK,GAAG7B,SAAR;AACA4C,gCAAY,GAAGf,KAAK,CAACnF,EAAN,CAAS2F,UAAT,IAAuBR,KAAvB,GAA+BQ,UAA9C;AACNE,uBAAG,CAAC7C,IAAJ,CAAS;AAAEkC,6BAAO,EAAEY,KAAX;AAAkBpE,2BAAK,EAAEqE,UAAU,CAAChD,KAAX,CAAiBmD,YAAjB,CAAzB;AAAyDV,2BAAK,EAAEnD;AAAhE,qBAAT;AACAsD,8BAAU,GAAGA,UAAU,CAAC5C,KAAX,CAAiBmD,YAAjB,CAAb;;AACA,wBAAIP,UAAU,CAACQ,EAAX,CAAc,IAAIpE,sBAAJ,CAAc,CAAd,CAAd,CAAJ,EAAqC;;;;AAEpC;;;;;;;;;AAZMM,aAAC,GAAGnC,MAAM,CAACkG,MAAP,GAAgB,CAApB;;;;kBAAuB/D,CAAC,IAAI,IAAC;AAAA;AAAA;;;sBAA7BA;;;;;;;;;;AAA+BA,aAAC;;;;;;AAczC;AAAA;AAAA,cAAOwD,GAAP;;;;AACD,GA/Ba;;AAgChB;AAzPA,EAAuCjF,yBAAvC;;AAAayF","names":["bigNumberComparator","a","b","lt","linkedListChanges","groups","changed","__extends","_this","kit","contract","methods","withdraw","lock","unlock","BaseWrapper_1","relock","getAccountTotalLockedGold","undefined","getTotalLockedGold","getAccountNonvotingLockedGold","LockedGoldWrapper","account","getPendingWithdrawals","pendingWithdrawals","_a","values","map","pw","value","reducer","total","plus","reduce","bignumber_js_1","getPendingWithdrawalsTotalValue","totalValue","isLessThan","Error","throwIfNotSorted","i","time","isGreaterThanOrEqualTo","forEach","remainingToRelock","relockPw","acc","valueToRelock","minimum","isZero","minus","push","_relock","reduceRight","unlockingPeriod","call","_b","_c","getConfig","config","nonvoting","contracts","getValidators","validators","getAccountLockedGoldRequirement","requirement","lockedGold","withdrawals","epochNumber","getPastEvents","getFirstBlockNumberForEpoch","_d","getLastBlockNumberForEpoch","events","e","slashed","returnValues","penalty","reporter","reward","getElection","election","getEligibleValidatorGroupsVotes","eligible","x","address","votes","computeParametersForSlashing","computeDecrementsForSlashing","changes","indices","index","allGroups","nonVoting","difference","getGroupsVotedForByAccount","res","group","totalVotes","find","getTotalVotesForGroupByAccount","slashedVotes","eq","length","exports"],"sourceRoot":"","sources":["../../src/wrappers/LockedGold.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}