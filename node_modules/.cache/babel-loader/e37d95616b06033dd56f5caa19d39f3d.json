{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Erc20Wrapper = void 0;\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * ERC-20 contract only containing the non-optional functions\n */\n\n\nvar Erc20Wrapper =\n/** @class */\nfunction (_super) {\n  __extends(Erc20Wrapper, _super);\n\n  function Erc20Wrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Querying allowance.\n     * @param from Account who has given the allowance.\n     * @param to Address of account to whom the allowance was given.\n     * @returns Amount of allowance.\n     */\n\n\n    _this.allowance = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.allowance, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the total supply of the token, that is, the amount of tokens currently minted.\n     * @returns Total supply.\n     */\n\n    _this.totalSupply = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.totalSupply, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Approve a user to transfer the token on behalf of another user.\n     * @param spender The address which is being approved to spend the token.\n     * @param value The amount of the token approved to the spender.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.approve = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.approve);\n    /**\n     * Transfers the token from one address to another.\n     * @param to The address to transfer the token to.\n     * @param value The amount of the token to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transfer = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transfer);\n    /**\n     * Transfers the token from one address to another on behalf of a user.\n     * @param from The address to transfer the token from.\n     * @param to The address to transfer the token to.\n     * @param value The amount of the token to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transferFrom = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transferFrom);\n    /**\n     * Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return The balance of the specified address.\n     */\n\n    _this.balanceOf = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.balanceOf, undefined, BaseWrapper_1.valueToBigNumber);\n    return _this;\n  }\n\n  return Erc20Wrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.Erc20Wrapper = Erc20Wrapper;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AAEA;;;;;AAGA;AAAA;AAAA;AAAoDA;;AAApD;AAAA;AACE;;;;;;;;AAMAC,sBAAY,6BAAUA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBC,SAAhC,EAA2CC,SAA3C,EAAsDC,8BAAtD,CAAZ;AAEA;;;;;AAIAL,wBAAc,6BAAUA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBI,WAAhC,EAA6CF,SAA7C,EAAwDC,8BAAxD,CAAd;AAEA;;;;;;;AAMAL,oBAAU,6BAAUA,KAAI,CAACO,GAAf,EAAoBP,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBM,OAA1C,CAAV;AAEA;;;;;;;AAMAR,qBAAW,6BAAUA,KAAI,CAACO,GAAf,EAAoBP,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBO,QAA1C,CAAX;AAEA;;;;;;;;AAOAT,yBAAe,6BAAUA,KAAI,CAACO,GAAf,EAAoBP,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBQ,YAA1C,CAAf;AAEA;;;;;;AAKAV,sBAAmD,6BACjDA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBS,SAD2B,EAEjDP,SAFiD,EAGjDC,8BAHiD,CAAnD;;AAKD;;AAAD;AAlDA,EAAoDA,yBAApD;;AAAaO","names":["__extends","_this","contract","methods","allowance","undefined","BaseWrapper_1","totalSupply","kit","approve","transfer","transferFrom","balanceOf","exports"],"sourceRoot":"","sources":["../../src/wrappers/Erc20Wrapper.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}