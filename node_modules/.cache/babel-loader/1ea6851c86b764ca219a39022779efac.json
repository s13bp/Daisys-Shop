{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccountUtils = exports.generateKeysFromSeed = exports.generateSeed = exports.generateDeterministicInviteCode = exports.generateKeys = exports.suggestMnemonicCorrections = exports.detectMnemonicLanguage = exports.mnemonicLengthFromStrength = exports.getAllLanguages = exports.formatNonAccentedCharacters = exports.normalizeMnemonic = exports.invalidMnemonicWords = exports.validateMnemonic = exports.generateMnemonic = exports.MnemonicStrength = exports.MnemonicLanguages = exports.CELO_DERIVATION_PATH_BASE = void 0;\n\nvar account_1 = require(\"@celo/base/lib/account\");\n\nvar string_1 = require(\"@celo/base/lib/string\");\n\nvar bip32 = __importStar(require(\"bip32\"));\n\nvar bip39 = __importStar(require(\"bip39\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar randombytes_1 = __importDefault(require(\"randombytes\"));\n\nvar address_1 = require(\"./address\");\n\nvar levenshtein_1 = require(\"./levenshtein\"); // Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\n\n\nvar account_2 = require(\"@celo/base/lib/account\");\n\nObject.defineProperty(exports, \"CELO_DERIVATION_PATH_BASE\", {\n  enumerable: true,\n  get: function get() {\n    return account_2.CELO_DERIVATION_PATH_BASE;\n  }\n});\nObject.defineProperty(exports, \"MnemonicLanguages\", {\n  enumerable: true,\n  get: function get() {\n    return account_2.MnemonicLanguages;\n  }\n});\nObject.defineProperty(exports, \"MnemonicStrength\", {\n  enumerable: true,\n  get: function get() {\n    return account_2.MnemonicStrength;\n  }\n});\n\nfunction defaultGenerateMnemonic(strength, rng, wordlist) {\n  return new Promise(function (resolve, reject) {\n    strength = strength || 128;\n    rng = rng || randombytes_1.default;\n    rng(strength / 8, function (error, randomBytesBuffer) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(bip39.entropyToMnemonic(randomBytesBuffer.toString('hex'), wordlist));\n      }\n    });\n  });\n}\n\nvar bip39Wrapper = {\n  mnemonicToSeedSync: bip39.mnemonicToSeedSync,\n  mnemonicToSeed: bip39.mnemonicToSeed,\n  generateMnemonic: defaultGenerateMnemonic,\n  validateMnemonic: bip39.validateMnemonic\n};\n\nfunction generateMnemonic(strength, language, bip39ToUse) {\n  if (strength === void 0) {\n    strength = account_1.MnemonicStrength.s256_24words;\n  }\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , bip39ToUse.generateMnemonic(strength, undefined, getWordList(language))];\n    });\n  });\n}\n\nexports.generateMnemonic = generateMnemonic;\n\nfunction validateMnemonic(mnemonic, bip39ToUse, language) {\n  var e_1, _a;\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (language !== undefined) {\n    return bip39ToUse.validateMnemonic(mnemonic, getWordList(language));\n  }\n\n  var languages = getAllLanguages();\n\n  try {\n    for (var languages_1 = __values(languages), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {\n      var guessedLanguage = languages_1_1.value;\n\n      if (bip39ToUse.validateMnemonic(mnemonic, getWordList(guessedLanguage))) {\n        return true;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return false;\n}\n\nexports.validateMnemonic = validateMnemonic;\n/**\n * Return a list of the words in the mnemonic that are not in the list of valid BIP-39 words for the\n * specified or detected language.\n *\n * @remarks Will return undefined if the language cannot be detected (e.g.  all the words are\n * invalid, or half of the valid words are from one language and the other half from another.)\n */\n\nfunction invalidMnemonicWords(mnemonic, language) {\n  var words = splitMnemonic(mnemonic);\n  var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n\n  if (detectedLanguage === undefined) {\n    return undefined;\n  }\n\n  var wordSet = new Set(getWordList(detectedLanguage));\n  return words.filter(function (word) {\n    return !wordSet.has(word);\n  });\n}\n\nexports.invalidMnemonicWords = invalidMnemonicWords;\n/**\n * Normalize the mnemonic phrase to eliminate a number of inconsistencies with standard BIP-39\n * phrases that are likely to arise when a user manually enters a phrase.\n *\n * @remarks Note that this does not guarantee that the output is a valid mnemonic phrase, or even\n * that all the words in the phrase are contained in a valid wordlist.\n */\n\nfunction normalizeMnemonic(mnemonic, language) {\n  var words = splitMnemonic(mnemonic);\n  var lowered = words.map(function (word) {\n    return word.toLowerCase();\n  });\n  var detectedLanguage = language !== null && language !== void 0 ? language : detectMnemonicLanguage(lowered); // If the language is unknown, do not run further normalizations.\n\n  if (detectedLanguage === undefined) {\n    return joinMnemonic(lowered, detectedLanguage);\n  }\n\n  return joinMnemonic(formatNonAccentedWords(lowered, detectedLanguage), detectedLanguage);\n}\n\nexports.normalizeMnemonic = normalizeMnemonic;\n/**\n * Scans the provided phrase and adds accents to words where the are not provided, or provided\n * inconsistently with the BIP-39 standard. Ensures that phrases differing only by accents will\n * validate after being cast into the normalized form.\n *\n * @remarks Words should be converted to lower case before being given to this function.\n */\n\nfunction formatNonAccentedWords(words, language) {\n  if (isLatinBasedLanguage(language)) {\n    var wordList = getWordList(language);\n    var normalizedWordMap_1 = new Map(wordList.map(function (word) {\n      return [(0, string_1.normalizeAccents)(word), word];\n    }));\n    return words.map(function (word) {\n      var _a;\n\n      return (_a = normalizedWordMap_1.get((0, string_1.normalizeAccents)(word))) !== null && _a !== void 0 ? _a : word;\n    });\n  }\n\n  return words;\n}\n\nfunction isLatinBasedLanguage(language) {\n  // Use exhaustive switch to ensure that every language is accounted for.\n  switch (language) {\n    case account_1.MnemonicLanguages.english:\n    case account_1.MnemonicLanguages.french:\n    case account_1.MnemonicLanguages.italian:\n    case account_1.MnemonicLanguages.spanish:\n    case account_1.MnemonicLanguages.portuguese:\n      return true;\n\n    case account_1.MnemonicLanguages.chinese_simplified:\n    case account_1.MnemonicLanguages.chinese_traditional:\n    case account_1.MnemonicLanguages.japanese:\n    case account_1.MnemonicLanguages.korean:\n      return false;\n  }\n}\n/**\n * @deprecated now an alias for normalizeMnemonic.\n */\n\n\nfunction formatNonAccentedCharacters(mnemonic) {\n  return normalizeMnemonic(mnemonic);\n}\n\nexports.formatNonAccentedCharacters = formatNonAccentedCharacters; // Unify the bip39.wordlists (otherwise depends on the instance of the bip39)\n\nfunction getWordList(language) {\n  // Use exhaustive switch to ensure that every language is accounted for.\n  switch (language !== null && language !== void 0 ? language : account_1.MnemonicLanguages.english) {\n    case account_1.MnemonicLanguages.chinese_simplified:\n      return bip39.wordlists.chinese_simplified;\n\n    case account_1.MnemonicLanguages.chinese_traditional:\n      return bip39.wordlists.chinese_traditional;\n\n    case account_1.MnemonicLanguages.english:\n      return bip39.wordlists.english;\n\n    case account_1.MnemonicLanguages.french:\n      return bip39.wordlists.french;\n\n    case account_1.MnemonicLanguages.italian:\n      return bip39.wordlists.italian;\n\n    case account_1.MnemonicLanguages.japanese:\n      return bip39.wordlists.japanese;\n\n    case account_1.MnemonicLanguages.korean:\n      return bip39.wordlists.korean;\n\n    case account_1.MnemonicLanguages.spanish:\n      return bip39.wordlists.spanish;\n\n    case account_1.MnemonicLanguages.portuguese:\n      return bip39.wordlists.portuguese;\n  }\n}\n\nfunction getAllLanguages() {\n  return [account_1.MnemonicLanguages.chinese_simplified, account_1.MnemonicLanguages.chinese_traditional, account_1.MnemonicLanguages.english, account_1.MnemonicLanguages.french, account_1.MnemonicLanguages.italian, account_1.MnemonicLanguages.japanese, account_1.MnemonicLanguages.korean, account_1.MnemonicLanguages.spanish, account_1.MnemonicLanguages.portuguese];\n}\n\nexports.getAllLanguages = getAllLanguages;\n\nfunction mnemonicLengthFromStrength(strength) {\n  switch (strength) {\n    case account_1.MnemonicStrength.s128_12words:\n      return 12;\n\n    case account_1.MnemonicStrength.s256_24words:\n      return 24;\n  }\n}\n\nexports.mnemonicLengthFromStrength = mnemonicLengthFromStrength;\n/**\n * Splits a mnemonic phrase into words, handling extra whitespace anywhere in the phrase.\n */\n\nfunction splitMnemonic(mnemonic) {\n  return __spreadArray([], __read(mnemonic.trim().split(/\\s+/)), false);\n}\n/**\n * Joins a list of words into a mnemonic phrase. Inverse of splitMnemonic.\n */\n\n\nfunction joinMnemonic(words, language) {\n  return words.join(language === account_1.MnemonicLanguages.japanese ? \"\\u3000\" : ' ');\n}\n/**\n * Detects the language of tokenized mnemonic phrase by applying a heuristic.\n *\n * @remarks Uses a heuristic of returning the language with the most matching words. In practice, we\n * expect all words to come from a single language, also some may be misspelled or otherwise\n * malformed. It may occasionally occur that a typo results in word from another language (e.g. bag\n * -> bagr) but this should occur at most once or twice per phrase.\n */\n\n\nfunction detectMnemonicLanguage(words, candidates) {\n  // Assign a match score to each language by how many words of the phrase are in each language.\n  var scores = (candidates !== null && candidates !== void 0 ? candidates : getAllLanguages()).map(function (candidate) {\n    var wordSet = new Set(getWordList(candidate));\n    var score = words.reduce(function (count, word) {\n      return wordSet.has(word) ? count + 1 : count;\n    }, 0);\n    return [candidate, score];\n  }); // Reduce to the highest scoring candidate(s). Note that it is possible for multiple candidates to\n  // have the same score, but it likely to occur only for specially constructed phrases.\n\n  var _a = __read(scores.reduce(function (_a, _b) {\n    var _c = __read(_a, 2),\n        leaders = _c[0],\n        leadingScore = _c[1];\n\n    var _d = __read(_b, 2),\n        candidate = _d[0],\n        score = _d[1];\n\n    if (score > leadingScore) {\n      return [[candidate], score];\n    } else if (score === leadingScore) {\n      return [__spreadArray(__spreadArray([], __read(leaders), false), [candidate], false), leadingScore];\n    }\n\n    return [leaders, leadingScore];\n  }, [[], 0]), 2),\n      winners = _a[0],\n      highscore = _a[1];\n\n  if (winners.length !== 1 || highscore < 1) {\n    return undefined;\n  }\n\n  return winners[0];\n}\n\nexports.detectMnemonicLanguage = detectMnemonicLanguage;\n/**\n * Generates a list of suggested corrections to the mnemonic phrase based on a set of heuristics.\n *\n * @remarks\n * Each yielded suggestion represents an attempt to correct the seed phrase by replacing any invalid\n * words with the most likely valid words. Returned suggestions phrases are ordered by probability\n * based on a noisy channel model, described in detail in CIP-39.\n *\n * The generated list of suggestions is exponential in size, and effectively infinite. One should\n * not attempt to generate the entire list.\n *\n * All yielded suggestions will have a valid checksum, but are not guaranteed to correspond to any\n * given wallet. If the phrase is being used to recover a wallet with non-zero balance, it is\n * suggested that the caller check the balance of the derived wallet address. If the balance is\n * non-zero, they can be sure that the phrase is correct. If it is zero, then they should continue\n * and try the next suggestion.\n *\n * It is recommended to normalize the mnemonic phrase before inputting to this function.\n *\n * @privateRemarks\n * TODO(victor): Include a heuristic rule for phrase-level corrections, such as word ordering swaps.\n */\n\nfunction suggestMnemonicCorrections(mnemonic, language, strength) {\n  var words, expectedLength, lang, _a, _b, suggestion, phrase, e_2_1;\n\n  var e_2, _c;\n\n  return __generator(this, function (_d) {\n    switch (_d.label) {\n      case 0:\n        words = splitMnemonic(mnemonic);\n        expectedLength = strength && mnemonicLengthFromStrength(strength);\n\n        if (expectedLength && words.length !== expectedLength || words.length % 3 !== 0) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        lang = language !== null && language !== void 0 ? language : detectMnemonicLanguage(words);\n\n        if (lang === undefined) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        _d.label = 1;\n\n      case 1:\n        _d.trys.push([1, 6, 7, 8]);\n\n        _a = __values(suggestUnvalidatedCorrections(words, lang)), _b = _a.next();\n        _d.label = 2;\n\n      case 2:\n        if (!!_b.done) return [3\n        /*break*/\n        , 5];\n        suggestion = _b.value;\n        phrase = joinMnemonic(suggestion, lang);\n        if (!validateMnemonic(phrase, undefined, lang)) return [3\n        /*break*/\n        , 4];\n        return [4\n        /*yield*/\n        , phrase];\n\n      case 3:\n        _d.sent();\n\n        _d.label = 4;\n\n      case 4:\n        _b = _a.next();\n        return [3\n        /*break*/\n        , 2];\n\n      case 5:\n        return [3\n        /*break*/\n        , 8];\n\n      case 6:\n        e_2_1 = _d.sent();\n        e_2 = {\n          error: e_2_1\n        };\n        return [3\n        /*break*/\n        , 8];\n\n      case 7:\n        try {\n          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 8:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\n\nexports.suggestMnemonicCorrections = suggestMnemonicCorrections; /// Generates a list of suggested phases based on an edit distance correction heuristic.\n\nfunction suggestUnvalidatedCorrections(words, language) {\n  // Combine the given suggestions lists to produce all combinations with weight, defined as the sum\n  // edit distances for all chosen words, equal to the given weight value.\n  // The set of suggestions yielded with a given weight is disjoint from the set of suggestions\n  // yielded with any other given weight.\n  function combineSuggestions(suggestionsLists, weight) {\n    var suggestions, remaining, _a, _b, distance, _c, _d, list, _e, _f, suggestion, e_4_1, e_5_1, e_6_1;\n\n    var e_6, _g, e_5, _h, e_4, _j;\n\n    var _k, _l, _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          if (suggestionsLists.length < 1 || weight < 0) {\n            throw Error('programming error: suggestions map must have at least one entry');\n          }\n\n          suggestions = suggestionsLists[0];\n          if (!(suggestionsLists.length === 1)) return [3\n          /*break*/\n          , 2];\n          return [5\n          /*yield**/\n          , __values((_l = (_k = suggestions.get(weight)) === null || _k === void 0 ? void 0 : _k.map(function (suggestion) {\n            return [suggestion];\n          })) !== null && _l !== void 0 ? _l : [])];\n\n        case 1:\n          _o.sent();\n\n          return [2\n          /*return*/\n          ];\n\n        case 2:\n          remaining = __spreadArray([], __read(suggestionsLists.slice(1)), false);\n          _o.label = 3;\n\n        case 3:\n          _o.trys.push([3, 20, 21, 22]);\n\n          _a = __values(__spreadArray([], __read(suggestions.keys()), false).sort()), _b = _a.next();\n          _o.label = 4;\n\n        case 4:\n          if (!!_b.done) return [3\n          /*break*/\n          , 19];\n          distance = _b.value;\n\n          if (distance > weight) {\n            return [3\n            /*break*/\n            , 19];\n          }\n\n          _o.label = 5;\n\n        case 5:\n          _o.trys.push([5, 16, 17, 18]);\n\n          _c = (e_5 = void 0, __values(combineSuggestions(remaining, weight - distance))), _d = _c.next();\n          _o.label = 6;\n\n        case 6:\n          if (!!_d.done) return [3\n          /*break*/\n          , 15];\n          list = _d.value;\n          _o.label = 7;\n\n        case 7:\n          _o.trys.push([7, 12, 13, 14]);\n\n          _e = (e_4 = void 0, __values((_m = suggestions.get(distance)) !== null && _m !== void 0 ? _m : [])), _f = _e.next();\n          _o.label = 8;\n\n        case 8:\n          if (!!_f.done) return [3\n          /*break*/\n          , 11];\n          suggestion = _f.value;\n          return [4\n          /*yield*/\n          , __spreadArray([suggestion], __read(list), false)];\n\n        case 9:\n          _o.sent();\n\n          _o.label = 10;\n\n        case 10:\n          _f = _e.next();\n          return [3\n          /*break*/\n          , 8];\n\n        case 11:\n          return [3\n          /*break*/\n          , 14];\n\n        case 12:\n          e_4_1 = _o.sent();\n          e_4 = {\n            error: e_4_1\n          };\n          return [3\n          /*break*/\n          , 14];\n\n        case 13:\n          try {\n            if (_f && !_f.done && (_j = _e.return)) _j.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 14:\n          _d = _c.next();\n          return [3\n          /*break*/\n          , 6];\n\n        case 15:\n          return [3\n          /*break*/\n          , 18];\n\n        case 16:\n          e_5_1 = _o.sent();\n          e_5 = {\n            error: e_5_1\n          };\n          return [3\n          /*break*/\n          , 18];\n\n        case 17:\n          try {\n            if (_d && !_d.done && (_h = _c.return)) _h.call(_c);\n          } finally {\n            if (e_5) throw e_5.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 18:\n          _b = _a.next();\n          return [3\n          /*break*/\n          , 4];\n\n        case 19:\n          return [3\n          /*break*/\n          , 22];\n\n        case 20:\n          e_6_1 = _o.sent();\n          e_6 = {\n            error: e_6_1\n          };\n          return [3\n          /*break*/\n          , 22];\n\n        case 21:\n          try {\n            if (_b && !_b.done && (_g = _a.return)) _g.call(_a);\n          } finally {\n            if (e_6) throw e_6.error;\n          }\n\n          return [7\n          /*endfinally*/\n          ];\n\n        case 22:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n\n  var spotSuggestions, weight, _a, _b, suggestedWords, e_3_1;\n\n  var e_3, _c;\n\n  return __generator(this, function (_d) {\n    switch (_d.label) {\n      case 0:\n        spotSuggestions = words.map(function (word) {\n          return wordSuggestions(word, language);\n        });\n        weight = 0;\n        _d.label = 1;\n\n      case 1:\n        if (!(weight < 1000)) return [3\n        /*break*/\n        , 10];\n        _d.label = 2;\n\n      case 2:\n        _d.trys.push([2, 7, 8, 9]);\n\n        _a = (e_3 = void 0, __values(combineSuggestions(spotSuggestions, weight))), _b = _a.next();\n        _d.label = 3;\n\n      case 3:\n        if (!!_b.done) return [3\n        /*break*/\n        , 6];\n        suggestedWords = _b.value;\n        return [4\n        /*yield*/\n        , suggestedWords];\n\n      case 4:\n        _d.sent();\n\n        _d.label = 5;\n\n      case 5:\n        _b = _a.next();\n        return [3\n        /*break*/\n        , 3];\n\n      case 6:\n        return [3\n        /*break*/\n        , 9];\n\n      case 7:\n        e_3_1 = _d.sent();\n        e_3 = {\n          error: e_3_1\n        };\n        return [3\n        /*break*/\n        , 9];\n\n      case 8:\n        try {\n          if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 9:\n        weight++;\n        return [3\n        /*break*/\n        , 1];\n\n      case 10:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n} // Given a word and lnaguage, returns a map of all words in the BIP-39 word list for the given\n// language by edit distance. This is used as word replacement suggestions.\n\n\nfunction wordSuggestions(typo, language) {\n  return getWordList(language).map(function (word) {\n    return {\n      distance: (0, levenshtein_1.levenshteinDistance)(typo, word),\n      word: word\n    };\n  }).reduce(function (map, _a) {\n    var distance = _a.distance,\n        word = _a.word; // Reduction uses mutation, instead of spread, as an optimization.\n\n    var list = map.get(distance);\n\n    if (list !== undefined) {\n      list.push(word);\n    } else {\n      map.set(distance, [word]);\n    }\n\n    return map;\n  }, new Map());\n}\n\nfunction generateKeys(mnemonic, password, changeIndex, addressIndex, bip39ToUse, derivationPath) {\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var seed;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , generateSeed(mnemonic, password, bip39ToUse)];\n\n        case 1:\n          seed = _a.sent();\n          return [2\n          /*return*/\n          , generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath)];\n      }\n    });\n  });\n}\n\nexports.generateKeys = generateKeys;\n\nfunction generateDeterministicInviteCode(recipientPhoneHash, recipientPepper, addressIndex, changeIndex, derivationPath) {\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  var seed = (0, ethereumjs_util_1.keccak256)(recipientPhoneHash + recipientPepper);\n  return generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath);\n}\n\nexports.generateDeterministicInviteCode = generateDeterministicInviteCode; // keyByteLength truncates the seed. *Avoid its use*\n// It was added only because a backwards compatibility bug\n\nfunction generateSeed(mnemonic, password, bip39ToUse, keyByteLength) {\n  if (bip39ToUse === void 0) {\n    bip39ToUse = bip39Wrapper;\n  }\n\n  if (keyByteLength === void 0) {\n    keyByteLength = 64;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var seed, bufAux;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , bip39ToUse.mnemonicToSeed(mnemonic, password)];\n\n        case 1:\n          seed = _a.sent();\n\n          if (keyByteLength > 0 && seed.byteLength > keyByteLength) {\n            bufAux = Buffer.allocUnsafe(keyByteLength);\n            seed.copy(bufAux, 0, 0, keyByteLength);\n            seed = bufAux;\n          }\n\n          return [2\n          /*return*/\n          , seed];\n      }\n    });\n  });\n}\n\nexports.generateSeed = generateSeed;\n\nfunction generateKeysFromSeed(seed, changeIndex, addressIndex, derivationPath) {\n  if (changeIndex === void 0) {\n    changeIndex = 0;\n  }\n\n  if (addressIndex === void 0) {\n    addressIndex = 0;\n  }\n\n  if (derivationPath === void 0) {\n    derivationPath = account_1.CELO_DERIVATION_PATH_BASE;\n  }\n\n  var node = bip32.fromSeed(seed);\n  var newNode = node.derivePath(\"\" + (derivationPath ? derivationPath + \"/\" : '') + changeIndex + \"/\" + addressIndex);\n\n  if (!newNode.privateKey) {\n    // As we are generating the node from a seed, the node will always have a private key and this would never happened\n    throw new Error('utils-accounts@generateKeys: invalid node to derivate');\n  }\n\n  return {\n    privateKey: newNode.privateKey.toString('hex'),\n    publicKey: newNode.publicKey.toString('hex'),\n    address: (0, address_1.privateKeyToAddress)(newNode.privateKey.toString('hex'))\n  };\n}\n\nexports.generateKeysFromSeed = generateKeysFromSeed;\nexports.AccountUtils = {\n  detectMnemonicLanguage: detectMnemonicLanguage,\n  generateMnemonic: generateMnemonic,\n  normalizeMnemonic: normalizeMnemonic,\n  validateMnemonic: validateMnemonic,\n  invalidMnemonicWords: invalidMnemonicWords,\n  suggestMnemonicCorrections: suggestMnemonicCorrections,\n  generateKeys: generateKeys,\n  generateSeed: generateSeed,\n  generateKeysFromSeed: generateKeysFromSeed\n};","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","defaultGenerateMnemonic","strength","rng","wordlist","Promise","resolve","reject","randombytes_1","error","randomBytesBuffer","bip39","entropyToMnemonic","toString","bip39Wrapper","mnemonicToSeedSync","mnemonicToSeed","generateMnemonic","validateMnemonic","language","bip39ToUse","account_1","s256_24words","undefined","getWordList","exports","mnemonic","languages","getAllLanguages","languages_1_1","guessedLanguage","invalidMnemonicWords","words","splitMnemonic","detectedLanguage","detectMnemonicLanguage","wordSet","Set","filter","word","has","normalizeMnemonic","lowered","map","toLowerCase","joinMnemonic","formatNonAccentedWords","isLatinBasedLanguage","wordList","normalizedWordMap_1","Map","_a","english","french","italian","spanish","portuguese","chinese_simplified","chinese_traditional","japanese","korean","formatNonAccentedCharacters","wordlists","mnemonicLengthFromStrength","s128_12words","trim","split","join","candidates","scores","candidate","score","reduce","count","_b","_c","leaders","leadingScore","_d","winners","highscore","length","suggestMnemonicCorrections","expectedLength","lang","suggestion","phrase","suggestUnvalidatedCorrections","combineSuggestions","suggestionsLists","weight","Error","suggestions","_k","_l","_o","remaining","slice","keys","sort","distance","list","_e","_m","_f","__read","spotSuggestions","suggestedWords","wordSuggestions","typo","push","set","generateKeys","password","changeIndex","addressIndex","derivationPath","generateSeed","seed","generateKeysFromSeed","generateDeterministicInviteCode","recipientPhoneHash","recipientPepper","keyByteLength","byteLength","bufAux","Buffer","allocUnsafe","copy","node","bip32","fromSeed","newNode","derivePath","privateKey","publicKey","address"],"sourceRoot":"","sources":["../src/account.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}