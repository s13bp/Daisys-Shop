{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inputSignFormatter = exports.inputAddressFormatter = exports.outputBigNumberFormatter = exports.outputLogFormatter = exports.hexToNumber = exports.outputBlockFormatter = exports.outputBlockHeaderFormatter = exports.inputBlockNumberFormatter = exports.inputDefaultBlockNumberFormatter = exports.outputCeloTxReceiptFormatter = exports.outputCeloTxFormatter = exports.inputCeloTxFormatter = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar address_2 = require(\"@celo/utils/lib/address\");\n\nvar solidity_1 = require(\"@celo/utils/lib/solidity\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar utf8_1 = require(\"utf8\");\n/**\n * Formats the input of a transaction and converts all values to HEX\n */\n\n\nfunction inputCeloTxFormatter(tx) {\n  var _a, _b, _c, _d;\n\n  tx.from = inputAddressFormatter((_a = tx.from) === null || _a === void 0 ? void 0 : _a.toString());\n  tx.to = inputAddressFormatter(tx.to);\n  tx.feeCurrency = inputAddressFormatter(tx.feeCurrency);\n  tx.gatewayFeeRecipient = inputAddressFormatter(tx.gatewayFeeRecipient);\n\n  if (tx.data) {\n    tx.data = (0, address_1.ensureLeading0x)(tx.data);\n  }\n\n  if (tx.data && !isHex(tx.data)) {\n    throw new Error('The data field must be HEX encoded data.');\n  }\n\n  tx.gas = numberToHex(tx.gas);\n  tx.gasPrice = numberToHex((_b = tx.gasPrice) === null || _b === void 0 ? void 0 : _b.toString());\n  tx.value = numberToHex((_c = tx.value) === null || _c === void 0 ? void 0 : _c.toString()); // @ts-ignore - nonce is defined as number, but uses as string (web3)\n\n  tx.nonce = numberToHex((_d = tx.nonce) === null || _d === void 0 ? void 0 : _d.toString());\n  tx.gatewayFee = numberToHex(tx.gatewayFee); // @ts-ignore - prune undefines\n\n  Object.keys(tx).forEach(function (key) {\n    return tx[key] === undefined && delete tx[key];\n  });\n  return tx;\n}\n\nexports.inputCeloTxFormatter = inputCeloTxFormatter;\n\nfunction outputCeloTxFormatter(tx) {\n  if (tx.blockNumber !== null) {\n    tx.blockNumber = hexToNumber(tx.blockNumber);\n  }\n\n  if (tx.transactionIndex !== null) {\n    tx.transactionIndex = hexToNumber(tx.transactionIndex);\n  }\n\n  tx.nonce = hexToNumber(tx.nonce);\n  tx.gas = hexToNumber(tx.gas);\n  tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n  tx.value = outputBigNumberFormatter(tx.value);\n  tx.gatewayFee = outputBigNumberFormatter(tx.gatewayFee);\n  tx.to = tx.to && (0, address_2.isValidAddress)(tx.to) ? // tx.to could be `0x0` or `null` while contract creation\n  tx.to = (0, address_2.toChecksumAddress)(tx.to) : null; // set to `null` if invalid address\n\n  if (tx.from) {\n    tx.from = (0, address_2.toChecksumAddress)(tx.from);\n  }\n\n  if (tx.feeCurrency) {\n    tx.feeCurrency = (0, address_2.toChecksumAddress)(tx.feeCurrency);\n  }\n\n  if (tx.gatewayFeeRecipient) {\n    tx.gatewayFeeRecipient = (0, address_2.toChecksumAddress)(tx.gatewayFeeRecipient);\n  }\n\n  return tx;\n}\n\nexports.outputCeloTxFormatter = outputCeloTxFormatter;\n\nfunction outputCeloTxReceiptFormatter(receipt) {\n  if (typeof receipt !== 'object') {\n    throw new Error('Received receipt is invalid: ' + receipt);\n  }\n\n  if (receipt.blockNumber !== null) {\n    receipt.blockNumber = hexToNumber(receipt.blockNumber);\n  }\n\n  if (receipt.transactionIndex !== null) {\n    receipt.transactionIndex = hexToNumber(receipt.transactionIndex);\n  }\n\n  receipt.cumulativeGasUsed = hexToNumber(receipt.cumulativeGasUsed);\n  receipt.gasUsed = hexToNumber(receipt.gasUsed);\n\n  if (Array.isArray(receipt.logs)) {\n    receipt.logs = receipt.logs.map(outputLogFormatter);\n  }\n\n  if (receipt.contractAddress) {\n    receipt.contractAddress = (0, address_2.toChecksumAddress)(receipt.contractAddress);\n  }\n\n  if (typeof receipt.status !== 'undefined' && receipt.status !== null) {\n    receipt.status = Boolean(parseInt((0, address_1.trimLeading0x)(receipt.status), 10));\n  }\n\n  return receipt;\n}\n\nexports.outputCeloTxReceiptFormatter = outputCeloTxReceiptFormatter;\n\nfunction inputDefaultBlockNumberFormatter(blockNumber) {\n  if (blockNumber == null) {\n    blockNumber = 'latest';\n  }\n\n  return inputBlockNumberFormatter(blockNumber);\n}\n\nexports.inputDefaultBlockNumberFormatter = inputDefaultBlockNumberFormatter;\n\nfunction inputBlockNumberFormatter(blockNumber) {\n  if (blockNumber == null) {\n    return undefined;\n  }\n\n  if (isPredefinedBlockNumber(blockNumber)) {\n    return blockNumber;\n  }\n\n  if (blockNumber === 'genesis') {\n    return '0x0';\n  }\n\n  return isHexStrict(blockNumber.toString()) ? blockNumber.toString().toLocaleLowerCase() : numberToHex(blockNumber.toString());\n}\n\nexports.inputBlockNumberFormatter = inputBlockNumberFormatter;\n\nfunction outputBlockHeaderFormatter(blockHeader) {\n  // transform to number\n  blockHeader.gasLimit = hexToNumber(blockHeader.gasLimit);\n  blockHeader.gasUsed = hexToNumber(blockHeader.gasUsed);\n  blockHeader.size = hexToNumber(blockHeader.size);\n  blockHeader.timestamp = hexToNumber(blockHeader.timestamp);\n\n  if (blockHeader.number !== null) {\n    blockHeader.number = hexToNumber(blockHeader.number);\n  }\n\n  if (blockHeader.miner) {\n    blockHeader.miner = (0, address_2.toChecksumAddress)(blockHeader.miner);\n  }\n\n  return blockHeader;\n}\n\nexports.outputBlockHeaderFormatter = outputBlockHeaderFormatter;\n\nfunction outputBlockFormatter(block) {\n  block = outputBlockHeaderFormatter(block);\n\n  if (block.difficulty) {\n    block.difficulty = outputBigNumberFormatter(block.difficulty);\n  }\n\n  if (block.totalDifficulty) {\n    block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n  }\n\n  if (Array.isArray(block.transactions)) {\n    block.transactions.forEach(function (item) {\n      if (typeof item !== 'string' && !(item instanceof String)) {\n        return outputCeloTxFormatter(item);\n      }\n    });\n  }\n\n  return block;\n}\n\nexports.outputBlockFormatter = outputBlockFormatter;\n\nfunction hexToNumber(hex) {\n  if (hex) {\n    return new bignumber_js_1.default(hex).toNumber();\n  }\n\n  return undefined;\n}\n\nexports.hexToNumber = hexToNumber;\n\nfunction outputLogFormatter(log) {\n  // generate a custom log id\n  if (typeof log.blockHash === 'string' && typeof log.transactionHash === 'string' && typeof log.logIndex === 'string') {\n    var shaId = (0, solidity_1.sha3)((0, address_1.trimLeading0x)(log.blockHash) + (0, address_1.trimLeading0x)(log.transactionHash) + (0, address_1.trimLeading0x)(log.logIndex));\n    log.id = 'log_' + (0, address_1.trimLeading0x)(shaId).substr(0, 8);\n  } else if (!log.id) {\n    log.id = null;\n  }\n\n  if (log.blockNumber !== null) {\n    log.blockNumber = hexToNumber(log.blockNumber);\n  }\n\n  if (log.transactionIndex !== null) {\n    log.transactionIndex = hexToNumber(log.transactionIndex);\n  }\n\n  if (log.logIndex !== null) {\n    log.logIndex = hexToNumber(log.logIndex);\n  }\n\n  if (log.address) {\n    log.address = (0, address_2.toChecksumAddress)(log.address);\n  }\n\n  return log;\n}\n\nexports.outputLogFormatter = outputLogFormatter;\n\nfunction outputBigNumberFormatter(hex) {\n  return new bignumber_js_1.default(hex).toString(10);\n}\n\nexports.outputBigNumberFormatter = outputBigNumberFormatter;\n\nfunction inputAddressFormatter(address) {\n  if (!address || address === '0x') {\n    return undefined;\n  }\n\n  if ((0, address_2.isValidAddress)(address)) {\n    return (0, address_1.ensureLeading0x)(address).toLocaleLowerCase();\n  }\n\n  throw new Error(\"Provided address \" + address + \" is invalid, the capitalization checksum test failed\");\n}\n\nexports.inputAddressFormatter = inputAddressFormatter;\n\nfunction inputSignFormatter(data) {\n  return isHexStrict(data) ? data : utf8ToHex(data);\n}\n\nexports.inputSignFormatter = inputSignFormatter;\n\nfunction utf8ToHex(str) {\n  str = (0, utf8_1.encode)(str);\n  var hex = ''; // remove \\u0000 padding from either side\n\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split('').reverse().join('');\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split('').reverse().join('');\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i); // if (code !== 0) {\n\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n; // }\n  }\n\n  return (0, address_1.ensureLeading0x)(hex);\n}\n\nfunction isHex(hex) {\n  return /^(-0x|0x)?[0-9a-f]*$/i.test(hex);\n}\n\nfunction isHexStrict(hex) {\n  return /^(-)?0x[0-9a-f]*$/i.test(hex);\n}\n\nfunction numberToHex(value) {\n  if (value) {\n    var numberValue = new bignumber_js_1.default(value);\n    var result = (0, address_1.ensureLeading0x)(new bignumber_js_1.default(value).toString(16)); // Seen in web3, copied just in case\n\n    return numberValue.lt(new bignumber_js_1.default(0)) ? \"-\" + result : result;\n  }\n\n  return undefined;\n}\n\nfunction isPredefinedBlockNumber(blockNumber) {\n  return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n}","map":{"version":3,"mappings":"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","names":["inputCeloTxFormatter","tx","from","inputAddressFormatter","_a","toString","to","feeCurrency","gatewayFeeRecipient","data","isHex","Error","gas","numberToHex","gasPrice","_b","value","_c","nonce","_d","gatewayFee","Object","keys","forEach","key","undefined","exports","outputCeloTxFormatter","blockNumber","hexToNumber","transactionIndex","outputBigNumberFormatter","outputCeloTxReceiptFormatter","receipt","cumulativeGasUsed","gasUsed","Array","isArray","logs","map","outputLogFormatter","contractAddress","status","Boolean","parseInt","inputDefaultBlockNumberFormatter","inputBlockNumberFormatter","isPredefinedBlockNumber","isHexStrict","toLocaleLowerCase","outputBlockHeaderFormatter","blockHeader","gasLimit","size","timestamp","number","miner","outputBlockFormatter","block","difficulty","totalDifficulty","transactions","item","String","hex","bignumber_js_1","toNumber","log","blockHash","transactionHash","logIndex","shaId","id","substr","address","inputSignFormatter","utf8ToHex","str","replace","split","reverse","join","i","length","code","charCodeAt","n","test","numberValue","result","lt"],"sourceRoot":"","sources":["../../src/utils/formatter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}