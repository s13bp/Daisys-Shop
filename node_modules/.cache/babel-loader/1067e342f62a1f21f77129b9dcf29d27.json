{"ast":null,"code":"import _asyncToGenerator from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import'./itemRelist.css';import axios from\"axios\";import{ethers}from\"ethers\";import{useParams}from\"react-router\";import{useContractKit}from\"@celo-tools/use-contractkit\";import{useMarketContract}from\"../../hooks/useMarketContract\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ItemRelist=function ItemRelist(){var _useParams=useParams(),id=_useParams.id;var marketplace=useMarketContract();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),nftData=_useState2[0],setNftData=_useState2[1];var _useContractKit=useContractKit(),address=_useContractKit.address,performActions=_useContractKit.performActions;var navigate=useNavigate();useEffect(function(){if(marketplace)fetchNft();},[marketplace]);// const [newPrice, setNewPrice] = useState(0);\nvar listNFTForSale=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return performActions(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(kit){var priceFormatted,transaction;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(nftData.price){_context.next=2;break;}return _context.abrupt(\"return\",alert(\"Enter a valid price\"));case 2:priceFormatted=ethers.utils.parseUnits(nftData.price,'ether').toString();_context.next=5;return marketplace.methods.resellToken(id,priceFormatted).send({from:address});case 5:transaction=_context.sent;alert(\"NFT listed for sale!\");navigate(\"/\");case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function listNFTForSale(){return _ref.apply(this,arguments);};}();var fetchNft=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var tokenUri,meta;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return marketplace.methods.tokenURI(id).call();case 2:tokenUri=_context3.sent;_context3.next=5;return axios.get(tokenUri);case 5:meta=_context3.sent;_context3.next=8;return marketplace.methods.getNftOwner(id).call();case 8:meta.data.owner=_context3.sent;setNftData(meta.data);case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchNft(){return _ref3.apply(this,arguments);};}();var purchaseNft=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return performActions(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(kit){var defaultAccount,price,transaction;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:defaultAccount=kit.defaultAccount;/* user will be prompted to pay the asking proces to complete the transaction */ /* user will be prompted to pay the asking proces to complete the transaction */price=ethers.utils.parseUnits(nftData.price,'ether').toString();_context4.next=4;return marketplace.methods.createMarketSale(id).send({from:defaultAccount,value:price});case 4:transaction=_context4.sent;alert(\"You have successfully purchased this NFT!\");navigate(\"/profile\");case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x2){return _ref5.apply(this,arguments);};}());case 3:_context5.next=8;break;case 5:_context5.prev=5;_context5.t0=_context5[\"catch\"](0);console.log({error:_context5.t0});case 8:case\"end\":return _context5.stop();}}},_callee5,null,[[0,5]]);}));return function purchaseNft(){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"item section__padding\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-image\",children:/*#__PURE__*/_jsx(\"img\",{src:nftData.image,alt:\"item\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-content-title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:nftData.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Costs \",/*#__PURE__*/_jsxs(\"span\",{children:[nftData.price,\" CUSD\"]}),\" .\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-content-creator\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Creater\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[nftData.owner||\"Anonymous\",\"  \"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-content-detail\",children:/*#__PURE__*/_jsx(\"p\",{children:nftData.description})}),nftData.owner==address?/*#__PURE__*/_jsx(\"form\",{className:\"writeForm\",autoComplete:\"off\",onSubmit:function onSubmit(e){return e.preventDefault();},children:/*#__PURE__*/_jsx(\"div\",{className:\"formGroup\",children:/*#__PURE__*/_jsx(\"button\",{className:\"primary-btn\",onClick:listNFTForSale,children:\"Relist NFT\"})})}):/*#__PURE__*/_jsx(\"div\",{className:\"item-content-buy\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"primary-btn\",onClick:purchaseNft,children:[\"Buy For \",nftData.price,\" CUSD\"]})})]})]});};export default ItemRelist;","map":{"version":3,"sources":["/Users/crypto/Daisys/src/pages/itemRelist/itemRelist.jsx"],"names":["React","useEffect","useState","axios","ethers","useParams","useContractKit","useMarketContract","useNavigate","ItemRelist","id","marketplace","nftData","setNftData","address","performActions","navigate","fetchNft","listNFTForSale","kit","price","alert","priceFormatted","utils","parseUnits","toString","methods","resellToken","send","from","transaction","tokenURI","call","tokenUri","get","meta","getNftOwner","data","owner","purchaseNft","defaultAccount","createMarketSale","value","console","log","error","image","name","description","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './itemRelist.css'\nimport axios from \"axios\";\nimport {ethers} from \"ethers\";\nimport {useParams} from \"react-router\";\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport {useMarketContract} from \"../../hooks/useMarketContract\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst ItemRelist = () => {\n\n    const {id} = useParams()\n    const marketplace = useMarketContract()\n    const [nftData, setNftData] = useState({});\n    const {address, performActions} = useContractKit()\n\n    const navigate = useNavigate()\n    useEffect(() => {\n        if (marketplace) fetchNft()\n    }, [marketplace]);\n\n\n    // const [newPrice, setNewPrice] = useState(0);\n    const listNFTForSale = async () => {\n\n        await performActions(async (kit) => {\n            if (!nftData.price) {\n                return alert(\"Enter a valid price\")\n            }\n            const priceFormatted = (ethers.utils.parseUnits(nftData.price, 'ether')).toString()\n            let transaction = await marketplace.methods.resellToken(id, priceFormatted).send({\n                from: address\n            })\n            alert(\"NFT listed for sale!\")\n\n            navigate(\"/\")\n        })\n\n\n\n    }\n\n    const fetchNft = async () => {\n        const tokenUri = await marketplace.methods.tokenURI(id).call()\n        let meta = await axios.get(tokenUri)\n        meta.data.owner =  await marketplace.methods.getNftOwner(id).call()\n        setNftData(meta.data)\n    }\n\n    const purchaseNft = async () => {\n\n        try {\n\n\n            await performActions(async (kit) => {\n                const {defaultAccount} = kit;\n                /* user will be prompted to pay the asking proces to complete the transaction */\n                const price = (ethers.utils.parseUnits(nftData.price, 'ether')).toString()\n                const transaction = await marketplace.methods.createMarketSale(id).send({\n                    from: defaultAccount,\n                    value: price\n                })\n                alert(`You have successfully purchased this NFT!`)\n                navigate(`/profile`)\n            })\n        } catch (error) {\n            console.log({error});\n        }\n\n\n    }\n\n\n    return (\n        <div className='item section__padding'>\n            <div className=\"item-image\">\n                <img src={nftData.image} alt=\"item\"/>\n            </div>\n            <div className=\"item-content\">\n                <div className=\"item-content-title\">\n                    <h1>{nftData.name}</h1>\n                    <p>Costs <span>{nftData.price} CUSD</span> .</p>\n                </div>\n                <div className=\"item-content-creator\">\n                    <div><p>Creater</p></div>\n                    <div>\n                        \n                        <p>{nftData.owner || \"Anonymous\"}  </p>\n                    </div>\n                </div>\n                <div className=\"item-content-detail\">\n                    <p>{nftData.description}</p>\n                </div>\n\n                {nftData.owner == address ?\n                    <form className='writeForm' autoComplete='off' onSubmit={(e)=>e.preventDefault()}>\n\n                        <div className=\"formGroup\">\n                            {/*<input onChange={(e) => setNewPrice(e.target.value)} type=\"text\"*/}\n                            {/*       placeholder='New Price of NFT'*/}\n                            {/*       autoFocus={true}/>*/}\n                            <button className=\"primary-btn\"\n                                    onClick={listNFTForSale}>Relist NFT\n                            </button>\n\n                        </div>\n\n\n                    </form>\n\n                    :\n                    <div className=\"item-content-buy\">\n                        <button className=\"primary-btn\" onClick={purchaseNft}>Buy For {nftData.price} CUSD</button>\n                        {/*<button className=\"secondary-btn\">Make Offer</button>*/}\n                    </div>\n\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default ItemRelist;\n"]},"metadata":{},"sourceType":"module"}