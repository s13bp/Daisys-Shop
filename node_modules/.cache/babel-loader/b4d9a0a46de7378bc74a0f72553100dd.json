{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\n\nvar address_1 = require(\"@celo/utils/lib/address\");\n\nvar sign_typed_data_utils_1 = require(\"@celo/utils/lib/sign-typed-data-utils\");\n\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar celo_provider_1 = require(\"./celo-provider\");\n\nvar abi_utils_1 = require(\"./utils/abi-utils\");\n\nvar formatter_1 = require(\"./utils/formatter\");\n\nvar provider_utils_1 = require(\"./utils/provider-utils\");\n\nvar rpc_caller_1 = require(\"./utils/rpc-caller\");\n\nvar tx_params_normalizer_1 = require(\"./utils/tx-params-normalizer\");\n\nvar tx_result_1 = require(\"./utils/tx-result\");\n\nvar debugGasEstimation = (0, debug_1.default)('connection:gas-estimation');\n\nvar Connection =\n/** @class */\nfunction () {\n  function Connection(web3, wallet, handleRevert) {\n    var _this = this;\n\n    if (handleRevert === void 0) {\n      handleRevert = true;\n    }\n\n    var _a;\n\n    this.web3 = web3;\n    this.wallet = wallet; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n    this.currencyGasPrice = new Map();\n    /**\n     * Send a transaction to celo-blockchain.\n     *\n     * Similar to `web3.eth.sendTransaction()` but with following differences:\n     *  - applies kit tx's defaults\n     *  - estimatesGas before sending\n     *  - returns a `TransactionResult` instead of `PromiEvent`\n     */\n\n    this.sendTransaction = function (tx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              tx = this.fillTxDefaults(tx);\n              tx = this.fillGasPrice(tx);\n              gas = tx.gas;\n              if (!(gas == null)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , this.estimateGasWithInflationFactor(tx)];\n\n            case 1:\n              gas = _a.sent();\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , (0, tx_result_1.toTxResult)(this.web3.eth.sendTransaction(__assign(__assign({}, tx), {\n                gas: gas\n              })))];\n          }\n        });\n      });\n    };\n\n    this.sendTransactionObject = function (txObj, tx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, gasEstimator, getCallTx_1, caller;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              tx = this.fillTxDefaults(tx);\n              tx = this.fillGasPrice(tx);\n              gas = tx.gas;\n              if (!(gas == null)) return [3\n              /*break*/\n              , 2];\n\n              gasEstimator = function (_tx) {\n                return txObj.estimateGas(__assign({}, _tx));\n              };\n\n              getCallTx_1 = function (_tx) {\n                // @ts-ignore missing _parent property from TransactionObject type.\n                return __assign(__assign({}, _tx), {\n                  data: txObj.encodeABI(),\n                  to: txObj._parent._address\n                });\n              };\n\n              caller = function (_tx) {\n                return _this.web3.eth.call(getCallTx_1(_tx));\n              };\n\n              return [4\n              /*yield*/\n              , this.estimateGasWithInflationFactor(tx, gasEstimator, caller)];\n\n            case 1:\n              gas = _a.sent();\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , (0, tx_result_1.toTxResult)(txObj.send(__assign(__assign({}, tx), {\n                gas: gas\n              })))];\n          }\n        });\n      });\n    };\n\n    this.signTypedData = function (signer, typedData) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var signature, messageHash;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , new Promise(function (resolve, reject) {\n                ;\n\n                _this.web3.currentProvider.send({\n                  id: (0, rpc_caller_1.getRandomId)(),\n                  jsonrpc: '2.0',\n                  method: 'eth_signTypedData',\n                  params: [(0, formatter_1.inputAddressFormatter)(signer), typedData]\n                }, function (error, resp) {\n                  if (error) {\n                    reject(error);\n                  } else if (resp) {\n                    resolve(resp.result);\n                  } else {\n                    reject(new Error('empty-response'));\n                  }\n                });\n              })];\n\n            case 1:\n              signature = _a.sent();\n              messageHash = (0, address_1.ensureLeading0x)((0, sign_typed_data_utils_1.generateTypedDataHash)(typedData).toString('hex'));\n              return [2\n              /*return*/\n              , (0, signatureUtils_1.parseSignatureWithoutPrefix)(messageHash, signature, signer)];\n          }\n        });\n      });\n    };\n\n    this.sign = function (dataToSign, address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var signature;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , new Promise(function (resolve, reject) {\n                ;\n\n                _this.web3.currentProvider.send({\n                  id: (0, rpc_caller_1.getRandomId)(),\n                  jsonrpc: '2.0',\n                  method: 'eth_sign',\n                  params: [(0, formatter_1.inputAddressFormatter)(address.toString()), (0, formatter_1.inputSignFormatter)(dataToSign)]\n                }, function (error, resp) {\n                  if (error) {\n                    reject(error);\n                  } else if (resp) {\n                    resolve(resp.result);\n                  } else {\n                    reject(new Error('empty-response'));\n                  }\n                });\n              })];\n\n            case 1:\n              signature = _a.sent();\n              return [2\n              /*return*/\n              , signature];\n          }\n        });\n      });\n    };\n\n    this.sendSignedTransaction = function (signedTransactionData) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , (0, tx_result_1.toTxResult)(this.web3.eth.sendSignedTransaction(signedTransactionData))];\n        });\n      });\n    };\n\n    this.estimateGas = function (tx, gasEstimator, caller) {\n      if (gasEstimator === void 0) {\n        gasEstimator = _this.web3.eth.estimateGas;\n      }\n\n      if (caller === void 0) {\n        caller = _this.web3.eth.call;\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, e_1, called, revertReason;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 4]);\n\n              return [4\n              /*yield*/\n              , gasEstimator(__assign({}, tx))];\n\n            case 1:\n              gas = _a.sent();\n              debugGasEstimation('estimatedGas: %s', gas.toString());\n              return [2\n              /*return*/\n              , gas];\n\n            case 2:\n              e_1 = _a.sent();\n              return [4\n              /*yield*/\n              , caller({\n                data: tx.data,\n                to: tx.to,\n                from: tx.from\n              })];\n\n            case 3:\n              called = _a.sent();\n              revertReason = 'Could not decode transaction failure reason';\n\n              if (called.startsWith('0x08c379a')) {\n                revertReason = (0, abi_utils_1.decodeStringParameter)(this.getAbiCoder(), called.substring(10));\n              }\n\n              debugGasEstimation('Recover transaction failure reason', {\n                called: called,\n                data: tx.data,\n                to: tx.to,\n                from: tx.from,\n                error: e_1,\n                revertReason: revertReason\n              });\n              return [2\n              /*return*/\n              , Promise.reject(\"Gas estimation failed: \" + revertReason + \" or \" + e_1)];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.estimateGasWithInflationFactor = function (tx, gasEstimator, caller) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var gas, _a, _b, e_2;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 2,, 3]);\n\n              _b = (_a = Math).round;\n              return [4\n              /*yield*/\n              , this.estimateGas(tx, gasEstimator, caller)];\n\n            case 1:\n              gas = _b.apply(_a, [_c.sent() * this.config.gasInflationFactor]);\n              debugGasEstimation('estimatedGasWithInflationFactor: %s', gas);\n              return [2\n              /*return*/\n              , gas];\n\n            case 2:\n              e_2 = _c.sent();\n              throw new Error(e_2);\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.chainId = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('net_version', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , parseInt(response.result.toString(), 10)];\n          }\n        });\n      });\n    };\n\n    this.getTransactionCount = function (address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionCount', [address, 'pending'])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.hexToNumber)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.nonce = function (address) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , this.getTransactionCount(address)];\n        });\n      });\n    };\n\n    this.coinbase = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_coinbase', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , response.result.toString()];\n          }\n        });\n      });\n    };\n\n    this.gasPrice = function (feeCurrency) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parameter, response, gasPriceInHex;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              parameter = feeCurrency ? [feeCurrency] : [];\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_gasPrice', parameter)];\n\n            case 1:\n              response = _a.sent();\n              gasPriceInHex = response.result.toString();\n              return [2\n              /*return*/\n              , gasPriceInHex];\n          }\n        });\n      });\n    };\n\n    this.getBlockNumber = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_blockNumber', [])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.hexToNumber)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.isBlockNumberHash = function (blockNumber) {\n      return blockNumber instanceof String && blockNumber.indexOf('0x') === 0;\n    };\n\n    this.getBlock = function (blockHashOrBlockNumber, fullTxObjects) {\n      if (fullTxObjects === void 0) {\n        fullTxObjects = true;\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var endpoint, response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              endpoint = this.isBlockNumberHash(blockHashOrBlockNumber) ? 'eth_getBlockByHash' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByHash\n              : 'eth_getBlockByNumber' // Reference: https://eth.wiki/json-rpc/API#eth_getBlockByNumber\n              ;\n              return [4\n              /*yield*/\n              , this.rpcCaller.call(endpoint, [(0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber), fullTxObjects])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBlockFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getBlockHeader = function (blockHashOrBlockNumber) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var endpoint, response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              endpoint = this.isBlockNumberHash(blockHashOrBlockNumber) ? 'eth_getHeaderByHash' : 'eth_getHeaderByNumber';\n              return [4\n              /*yield*/\n              , this.rpcCaller.call(endpoint, [(0, formatter_1.inputBlockNumberFormatter)(blockHashOrBlockNumber)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBlockHeaderFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getBalance = function (address, defaultBlock) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getBalance', [(0, formatter_1.inputAddressFormatter)(address), (0, formatter_1.inputDefaultBlockNumberFormatter)(defaultBlock)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputBigNumberFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getTransaction = function (transactionHash) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionByHash', [(0, address_1.ensureLeading0x)(transactionHash)])];\n\n            case 1:\n              response = _a.sent();\n              return [2\n              /*return*/\n              , (0, formatter_1.outputCeloTxFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    this.getTransactionReceipt = function (txhash) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.rpcCaller.call('eth_getTransactionReceipt', [(0, address_1.ensureLeading0x)(txhash)])];\n\n            case 1:\n              response = _a.sent();\n\n              if (response.result === null) {\n                return [2\n                /*return*/\n                , null];\n              }\n\n              return [2\n              /*return*/\n              , (0, formatter_1.outputCeloTxReceiptFormatter)(response.result)];\n          }\n        });\n      });\n    };\n\n    web3.eth.handleRevert = handleRevert;\n    this.config = {\n      gasInflationFactor: 1.3,\n      // gasPrice:0 means the node will compute gasPrice on its own\n      gasPrice: '0'\n    };\n    var existingProvider = web3.currentProvider;\n    this.setProvider(existingProvider); // TODO: Add this line with the wallets separation completed\n    // this.wallet = _wallet ?? new LocalWallet()\n\n    this.config.from = (_a = web3.eth.defaultAccount) !== null && _a !== void 0 ? _a : undefined;\n    this.paramsPopulator = new tx_params_normalizer_1.TxParamsNormalizer(this);\n  }\n\n  Connection.prototype.setProvider = function (provider) {\n    if (!provider) {\n      throw new Error('Must have a valid Provider');\n    }\n\n    try {\n      if (!(provider instanceof celo_provider_1.CeloProvider)) {\n        this.rpcCaller = new rpc_caller_1.DefaultRpcCaller(provider);\n        provider = new celo_provider_1.CeloProvider(provider, this);\n      }\n\n      this.web3.setProvider(provider);\n      return true;\n    } catch (_a) {\n      return false;\n    }\n  };\n\n  Object.defineProperty(Connection.prototype, \"defaultAccount\", {\n    /**\n     * Default account for generated transactions (eg. tx.from)\n     */\n    get: function () {\n      return this.config.from;\n    },\n\n    /**\n     * Set default account for generated transactions (eg. tx.from )\n     */\n    set: function (address) {\n      this.config.from = address;\n      this.web3.eth.defaultAccount = address ? address : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultGasInflationFactor\", {\n    get: function () {\n      return this.config.gasInflationFactor;\n    },\n    set: function (factor) {\n      this.config.gasInflationFactor = factor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultGasPrice\", {\n    get: function () {\n      return parseInt(this.config.gasPrice, 10);\n    },\n    set: function (price) {\n      this.config.gasPrice = price.toString(10);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Connection.prototype, \"defaultFeeCurrency\", {\n    get: function () {\n      return this.config.feeCurrency;\n    },\n\n    /**\n     * Set the ERC20 address for the token to use to pay for transaction fees.\n     * The ERC20 must be whitelisted for gas.\n     *\n     * Set to `null` to use CELO\n     *\n     * @param address ERC20 address\n     */\n    set: function (address) {\n      this.config.feeCurrency = address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Connection.prototype.isLocalAccount = function (address) {\n    return this.wallet != null && this.wallet.hasAccount(address);\n  };\n\n  Connection.prototype.addAccount = function (privateKey) {\n    if (this.wallet) {\n      if ((0, provider_utils_1.hasProperty)(this.wallet, 'addAccount')) {\n        this.wallet.addAccount(privateKey);\n      } else {\n        throw new Error(\"The wallet used, can't add accounts\");\n      }\n    } else {\n      throw new Error('No wallet set');\n    }\n  };\n\n  Connection.prototype.removeAccount = function (address) {\n    if (this.wallet) {\n      if ((0, provider_utils_1.hasProperty)(this.wallet, 'removeAccount')) {\n        this.wallet.removeAccount(address);\n      } else {\n        throw new Error(\"The wallet used, can't remove accounts\");\n      }\n    } else {\n      throw new Error('No wallet set');\n    }\n  };\n\n  Connection.prototype.getNodeAccounts = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var nodeAccountsResp;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.rpcCaller.call('eth_accounts', [])];\n\n          case 1:\n            nodeAccountsResp = _b.sent();\n            return [2\n            /*return*/\n            , this.toChecksumAddresses((_a = nodeAccountsResp.result) !== null && _a !== void 0 ? _a : [])];\n        }\n      });\n    });\n  };\n\n  Connection.prototype.getLocalAccounts = function () {\n    return this.wallet ? this.toChecksumAddresses(this.wallet.getAccounts()) : [];\n  };\n\n  Connection.prototype.getAccounts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getNodeAccounts()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent().concat(this.getLocalAccounts())];\n        }\n      });\n    });\n  };\n\n  Connection.prototype.toChecksumAddresses = function (addresses) {\n    return addresses.map(function (value) {\n      return (0, address_1.toChecksumAddress)(value);\n    });\n  };\n\n  Connection.prototype.isListening = function () {\n    return this.web3.eth.net.isListening();\n  };\n\n  Connection.prototype.isSyncing = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.web3.eth.isSyncing().then(function (response) {\n        // isSyncing returns a syncProgress object when it's still syncing\n        if (typeof response === 'boolean') {\n          resolve(response);\n        } else {\n          resolve(true);\n        }\n      }).catch(reject);\n    });\n  }; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n\n  Connection.prototype.fillGasPrice = function (tx) {\n    if (tx.feeCurrency && tx.gasPrice === '0' && this.currencyGasPrice.has(tx.feeCurrency)) {\n      return __assign(__assign({}, tx), {\n        gasPrice: this.currencyGasPrice.get(tx.feeCurrency)\n      });\n    }\n\n    return tx;\n  }; // TODO: remove once cUSD gasPrice is available on minimumClientVersion node rpc\n\n\n  Connection.prototype.setGasPriceForCurrency = function (address, gasPrice) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this.currencyGasPrice.set(address, gasPrice);\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  Connection.prototype.getAbiCoder = function () {\n    return this.web3.eth.abi;\n  };\n\n  Connection.prototype.fillTxDefaults = function (tx) {\n    var defaultTx = {\n      from: this.config.from,\n      feeCurrency: this.config.feeCurrency,\n      gasPrice: this.config.gasPrice\n    };\n    return __assign(__assign({}, defaultTx), tx);\n  };\n\n  Connection.prototype.stop = function () {\n    (0, celo_provider_1.assertIsCeloProvider)(this.web3.currentProvider);\n    this.web3.currentProvider.stop();\n  };\n\n  return Connection;\n}();\n\nexports.Connection = Connection;","map":{"version":3,"mappings":"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","names":["debugGasEstimation","web3","wallet","handleRevert","Map","tx","fillTxDefaults","fillGasPrice","gas","estimateGasWithInflationFactor","_a","eth","sendTransaction","__assign","txObj","gasEstimator","_tx","estimateGas","getCallTx_1","data","encodeABI","to","_parent","_address","caller","call","send","signer","typedData","Promise","resolve","reject","_this","currentProvider","id","jsonrpc","method","params","error","resp","result","Error","signature","messageHash","toString","dataToSign","address","signedTransactionData","sendSignedTransaction","from","called","revertReason","startsWith","getAbiCoder","substring","e_1","_b","round","_c","config","gasInflationFactor","e_2","rpcCaller","response","parseInt","getTransactionCount","feeCurrency","parameter","gasPriceInHex","blockNumber","String","indexOf","blockHashOrBlockNumber","fullTxObjects","endpoint","isBlockNumberHash","defaultBlock","transactionHash","txhash","gasPrice","existingProvider","setProvider","defaultAccount","undefined","paramsPopulator","tx_params_normalizer_1","Connection","provider","celo_provider_1","rpc_caller_1","Object","factor","price","hasAccount","privateKey","addAccount","removeAccount","nodeAccountsResp","toChecksumAddresses","getAccounts","getNodeAccounts","concat","getLocalAccounts","addresses","map","value","net","isListening","isSyncing","then","catch","currencyGasPrice","has","get","set","abi","defaultTx","stop","exports"],"sourceRoot":"","sources":["../src/connection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}