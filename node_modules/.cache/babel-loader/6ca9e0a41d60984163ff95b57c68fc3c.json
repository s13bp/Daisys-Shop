{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CeloTokenWrapper = void 0; // NOTE: removing this import results in `yarn build` failures in Dockerfiles\n// after the move to node 10. This allows types to be inferred without\n// referencing '@celo/utils/node_modules/bignumber.js'\n\nrequire(\"bignumber.js\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar Erc20Wrapper_1 = require(\"./Erc20Wrapper\");\n/**\n * Contract for Celo native currency that adheres to the ICeloToken and IERC20 interfaces.\n */\n\n\nvar CeloTokenWrapper =\n/** @class */\nfunction (_super) {\n  __extends(CeloTokenWrapper, _super);\n\n  function CeloTokenWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Returns the name of the token.\n     * @returns Name of the token.\n     */\n\n\n    _this.name = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.name);\n    /**\n     * Returns the three letter symbol of the token.\n     * @returns Symbol of the token.\n     */\n\n    _this.symbol = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.symbol);\n    /**\n     * Returns the number of decimals used in the token.\n     * @returns Number of decimals.\n     */\n\n    _this.decimals = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.decimals, undefined, BaseWrapper_1.valueToInt);\n    /**\n     * Transfers the token from one address to another with a comment.\n     * @param to The address to transfer the token to.\n     * @param value The amount of the token to transfer.\n     * @param comment The transfer comment\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transferWithComment = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transferWithComment);\n    return _this;\n  }\n\n  return CeloTokenWrapper;\n}(Erc20Wrapper_1.Erc20Wrapper);\n\nexports.CeloTokenWrapper = CeloTokenWrapper;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAA;AACA;AACA;;AACAA;;AAGA;;AACA;AAEA;;;;;AAGA;AAAA;AAAA;AAAqEC;;AAArE;AAAA;AACE;;;;;;AAIAC,iBAAO,6BAAUA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBC,IAAhC,CAAP;AAEA;;;;;AAIAH,mBAAS,6BAAUA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBE,MAAhC,CAAT;AACA;;;;;AAIAJ,qBAAW,6BAAUA,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBG,QAAhC,EAA0CC,SAA1C,EAAqDC,wBAArD,CAAX;AAEA;;;;;;;;AAOAP,gCAAsB,6BAAUA,KAAI,CAACQ,GAAf,EAAoBR,KAAI,CAACC,QAAL,CAAcC,OAAd,CAAsBO,mBAA1C,CAAtB;;AACD;;AAAD;AA1BA,EAAqEC,2BAArE;;AAAaC","names":["require","__extends","_this","contract","methods","name","symbol","decimals","undefined","BaseWrapper_1","kit","transferWithComment","Erc20Wrapper_1","exports"],"sourceRoot":"","sources":["../../src/wrappers/CeloTokenWrapper.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}