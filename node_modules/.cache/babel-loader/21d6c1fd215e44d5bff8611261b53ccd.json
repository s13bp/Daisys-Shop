{"ast":null,"code":"import _asyncToGenerator from \"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";\nimport { browserSha256, browserSha512 } from \"../lib/browser\";\nexport function sha256(_x) {\n  return _sha.apply(this, arguments);\n}\n\nfunction _sha() {\n  _sha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(msg) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return browserSha256(msg);\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sha.apply(this, arguments);\n}\n\nexport function sha512(_x2) {\n  return _sha2.apply(this, arguments);\n}\n\nfunction _sha2() {\n  _sha2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(msg) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return browserSha512(msg);\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sha2.apply(this, arguments);\n}\n\nexport function ripemd160(_x3) {\n  return _ripemd.apply(this, arguments);\n}\n\nfunction _ripemd() {\n  _ripemd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(msg) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            throw new Error(\"Not supported for Browser async methods, use sync instead!\");\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _ripemd.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;;;kEAAO,iBAAsBC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBH,aAAa,CAACG,GAAD,CAD7B;;AAAA;AACCC,kBADD;AAAA,6CAEEA,MAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBC,MAAtB;AAAA;AAAA;;;mEAAO,kBAAsBF,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBF,aAAa,CAACE,GAAD,CAD7B;;AAAA;AACCC,kBADD;AAAA,8CAEEA,MAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBE,SAAtB;AAAA;AAAA;;;qEAAO,kBAAyBH,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,IAAII,KAAJ,CAAU,4DAAV,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","names":["browserSha256","browserSha512","sha256","msg","result","sha512","ripemd160","Error"],"sourceRoot":"","sources":["../../../src/browser/sha2.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}