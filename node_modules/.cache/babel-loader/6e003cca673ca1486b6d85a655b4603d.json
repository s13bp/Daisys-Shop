{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletBase = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\n\nvar signing_utils_1 = require(\"./signing-utils\");\n\nvar WalletBase =\n/** @class */\nfunction () {\n  function WalletBase() {\n    // By creating the Signers in advance we can have a common pattern across wallets\n    // Each implementation is responsible for populating this map through addSigner\n    this.accountSigners = new Map();\n  }\n  /**\n   * Gets a list of accounts that have been registered\n   */\n\n\n  WalletBase.prototype.getAccounts = function () {\n    return Array.from(this.accountSigners.keys());\n  };\n  /**\n   * Removes the account with the given address. Needs to be implemented by subclass, otherwise throws error\n   * @param address The address of the account to be removed\n   */\n\n\n  WalletBase.prototype.removeAccount = function (_address) {\n    throw new Error('removeAccount is not supported for this wallet');\n  };\n  /**\n   * Returns true if account has been registered\n   * @param address Account to check\n   */\n\n\n  WalletBase.prototype.hasAccount = function (address) {\n    if (address) {\n      var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n      return this.accountSigners.has(normalizedAddress);\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Adds the account-signer set to the internal map\n   * @param address Account address\n   * @param signer Account signer\n   */\n\n\n  WalletBase.prototype.addSigner = function (address, signer) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n    this.accountSigners.set(normalizedAddress, signer);\n  };\n  /**\n   * Removes the account-signer\n   * @param address Account address\n   */\n\n\n  WalletBase.prototype.removeSigner = function (address) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n    this.accountSigners.delete(normalizedAddress);\n  };\n  /**\n   * Gets the signer based on the 'from' field in the tx body\n   * @param txParams Transaction to sign\n   */\n\n\n  WalletBase.prototype.signTransaction = function (txParams) {\n    return __awaiter(this, void 0, void 0, function () {\n      var rlpEncoded, addToV, fromAddress, signer, signature;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!txParams) {\n              throw new Error('No transaction object given!');\n            }\n\n            rlpEncoded = (0, signing_utils_1.rlpEncodedTx)(txParams);\n            addToV = (0, signing_utils_1.chainIdTransformationForSigning)(txParams.chainId);\n            fromAddress = txParams.from.toString();\n            signer = this.getSigner(fromAddress);\n            return [4\n            /*yield*/\n            , signer.signTransaction(addToV, rlpEncoded)];\n\n          case 1:\n            signature = _a.sent();\n            return [2\n            /*return*/\n            , (0, signing_utils_1.encodeTransaction)(rlpEncoded, signature)];\n        }\n      });\n    });\n  };\n  /**\n   * Sign a personal Ethereum signed message.\n   * @param address Address of the account to sign with\n   * @param data Hex string message to sign\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  WalletBase.prototype.signPersonalMessage = function (address, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(0, address_1.isHexString)(data)) {\n              throw Error('wallet@signPersonalMessage: Expected data has to be a hex string ');\n            }\n\n            signer = this.getSigner(address);\n            return [4\n            /*yield*/\n            , signer.signPersonalMessage(data)];\n\n          case 1:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n        }\n      });\n    });\n  };\n  /**\n   * Sign an EIP712 Typed Data message.\n   * @param address Address of the account to sign with\n   * @param typedData the typed data object\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  WalletBase.prototype.signTypedData = function (address, typedData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (typedData === undefined) {\n              throw Error('wallet@signTypedData: TypedData Missing');\n            }\n\n            signer = this.getSigner(address);\n            return [4\n            /*yield*/\n            , signer.signTypedData(typedData)];\n\n          case 1:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , ethUtil.toRpcSig(sig.v, sig.r, sig.s)];\n        }\n      });\n    });\n  };\n\n  WalletBase.prototype.getSigner = function (address) {\n    var normalizedAddress = (0, address_1.normalizeAddressWith0x)(address);\n\n    if (!this.accountSigners.has(normalizedAddress)) {\n      throw new Error(\"Could not find address \" + normalizedAddress);\n    }\n\n    return this.accountSigners.get(normalizedAddress);\n  };\n\n  WalletBase.prototype.decrypt = function (address, ciphertext) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signer;\n      return __generator(this, function (_a) {\n        signer = this.getSigner(address);\n        return [2\n        /*return*/\n        , signer.decrypt(ciphertext)];\n      });\n    });\n  };\n  /**\n   * Computes the shared secret (an ECDH key exchange object) between two accounts\n   */\n\n\n  WalletBase.prototype.computeSharedSecret = function (address, publicKey) {\n    var signer = this.getSigner(address);\n    return signer.computeSharedSecret(publicKey);\n  };\n\n  return WalletBase;\n}();\n\nexports.WalletBase = WalletBase;","map":{"version":3,"mappings":"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","names":["Map","WalletBase","Array","from","accountSigners","keys","_address","Error","address","normalizedAddress","has","signer","set","delete","txParams","rlpEncoded","addToV","chainId","fromAddress","toString","getSigner","signTransaction","signature","_a","data","signPersonalMessage","sig","ethUtil","toRpcSig","v","r","s","typedData","undefined","signTypedData","get","ciphertext","decrypt","publicKey","computeSharedSecret","exports"],"sourceRoot":"","sources":["../src/wallet-base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}