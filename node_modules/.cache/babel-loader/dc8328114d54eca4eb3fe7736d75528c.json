{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildMetaTxTypedData = exports.toTransactionBatch = exports.toRawTransaction = exports.MetaTransactionWalletWrapper = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * Class that wraps the MetaTransactionWallet\n */\n\n\nvar MetaTransactionWalletWrapper =\n/** @class */\nfunction (_super) {\n  __extends(MetaTransactionWalletWrapper, _super);\n\n  function MetaTransactionWalletWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getMetaTransactionDigestParams = function (tx, nonce) {\n      var rawTx = (0, exports.toRawTransaction)(tx);\n      return [rawTx.destination, rawTx.value, rawTx.data, nonce];\n    };\n\n    _this.getMetaTransactionDigest = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getMetaTransactionDigest, _this.getMetaTransactionDigestParams, BaseWrapper_1.stringIdentity);\n\n    _this.getMetaTransactionSignerParams = function (tx, nonce, signature) {\n      var rawTx = (0, exports.toRawTransaction)(tx);\n      return [rawTx.destination, rawTx.value, rawTx.data, nonce, signature.v, signature.r, signature.s];\n    };\n\n    _this.getMetaTransactionSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getMetaTransactionSigner, _this.getMetaTransactionSignerParams, BaseWrapper_1.stringIdentity);\n    _this.eip712DomainSeparator = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.eip712DomainSeparator);\n    _this.isOwner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isOwner);\n    _this.nonce = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.nonce, undefined, BaseWrapper_1.valueToInt);\n    _this.getSigner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.signer, undefined, BaseWrapper_1.stringIdentity);\n    _this.transferOwnership = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.transferOwnership);\n    _this.setSigner = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setSigner);\n    _this.setEip712DomainSeparator = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setEip712DomainSeparator);\n    return _this;\n  }\n  /**\n   * Execute a transaction originating from the MTW\n   * Reverts if the caller is not a signer\n   * @param tx a TransactionInput\n   */\n\n\n  MetaTransactionWalletWrapper.prototype.executeTransaction = function (tx) {\n    var rawTx = (0, exports.toRawTransaction)(tx);\n    return (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.executeTransaction(rawTx.destination, rawTx.value, rawTx.data));\n  };\n  /**\n   * Execute a batch of transactions originating from the MTW\n   * Reverts if the caller is not a signer\n   * @param txs An array of TransactionInput\n   */\n\n\n  MetaTransactionWalletWrapper.prototype.executeTransactions = function (txs) {\n    var _a = (0, exports.toTransactionBatch)(txs),\n        destinations = _a.destinations,\n        values = _a.values,\n        callData = _a.callData,\n        callDataLengths = _a.callDataLengths;\n\n    return (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.executeTransactions(destinations, values, callData, callDataLengths));\n  };\n  /**\n   * Execute a signed meta transaction\n   * Reverts if meta-tx signer is not a signer for the wallet\n   * @param tx a TransactionInput\n   * @param signature a Signature\n   */\n\n\n  MetaTransactionWalletWrapper.prototype.executeMetaTransaction = function (tx, signature) {\n    var rawTx = (0, exports.toRawTransaction)(tx);\n    return (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.executeMetaTransaction(rawTx.destination, rawTx.value, rawTx.data, signature.v, signature.r, signature.s));\n  };\n  /**\n   * Signs a meta transaction as EIP712 typed data\n   * @param tx a TransactionWrapper\n   * @param nonce Optional -- will query contract state if not passed\n   * @returns signature a Signature\n   */\n\n\n  MetaTransactionWalletWrapper.prototype.signMetaTransaction = function (tx, nonce) {\n    return __awaiter(this, void 0, void 0, function () {\n      var typedData, _a, _b, signer;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!(nonce === undefined)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.nonce()];\n\n          case 1:\n            nonce = _c.sent();\n            _c.label = 2;\n\n          case 2:\n            _a = exports.buildMetaTxTypedData;\n            _b = [this.address, (0, exports.toRawTransaction)(tx), nonce];\n            return [4\n            /*yield*/\n            , this.chainId()];\n\n          case 3:\n            typedData = _a.apply(void 0, _b.concat([_c.sent()]));\n            return [4\n            /*yield*/\n            , this.signer()];\n\n          case 4:\n            signer = _c.sent();\n            return [2\n            /*return*/\n            , this.kit.connection.signTypedData(signer, typedData)];\n        }\n      });\n    });\n  };\n  /**\n   * Execute a signed meta transaction\n   * Reverts if meta-tx signer is not a signer for the wallet\n   * @param tx a TransactionInput\n   */\n\n\n  MetaTransactionWalletWrapper.prototype.signAndExecuteMetaTransaction = function (tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signature;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.signMetaTransaction(tx)];\n\n          case 1:\n            signature = _a.sent();\n            return [2\n            /*return*/\n            , this.executeMetaTransaction(tx, signature)];\n        }\n      });\n    });\n  };\n\n  MetaTransactionWalletWrapper.prototype.chainId = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, _c, _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _b = this;\n            if (!((_a = this._chainId) !== null && _a !== void 0)) return [3\n            /*break*/\n            , 1];\n            _c = _a;\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this.kit.connection.chainId()];\n\n          case 2:\n            _c = _e.sent();\n            _e.label = 3;\n\n          case 3:\n            _b._chainId = _c;\n            if (!(this._chainId === undefined)) return [3\n            /*break*/\n            , 5];\n            _d = this;\n            return [4\n            /*yield*/\n            , this.kit.connection.chainId()];\n\n          case 4:\n            _d._chainId = _e.sent();\n            _e.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            , this._chainId];\n        }\n      });\n    });\n  };\n\n  MetaTransactionWalletWrapper.prototype.signer = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(this._signer === undefined)) return [3\n            /*break*/\n            , 2];\n            _a = this;\n            return [4\n            /*yield*/\n            , this.getSigner()];\n\n          case 1:\n            _a._signer = _b.sent();\n            _b.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this._signer];\n        }\n      });\n    });\n  };\n\n  return MetaTransactionWalletWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.MetaTransactionWalletWrapper = MetaTransactionWalletWrapper;\n/**\n * Turns any possible way to pass in a transaction into the raw values\n * that are actually required. This is used both internally to normalize\n * ways in which transactions are passed in but also public in order\n * for one instance of ContractKit to serialize a meta transaction to\n * send over the wire and be consumed somewhere else.\n * @param tx TransactionInput<any> union of all the ways we expect transactions\n * @returns a RawTransactions that's serializable\n */\n\nvar toRawTransaction = function (tx) {\n  if ('destination' in tx) {\n    return tx;\n  } else if ('value' in tx) {\n    return {\n      destination: tx.txo._parent.options.address,\n      data: tx.txo.encodeABI(),\n      value: (0, BaseWrapper_1.valueToString)(tx.value)\n    };\n  } else {\n    return {\n      destination: tx._parent.options.address,\n      data: tx.encodeABI(),\n      value: '0'\n    };\n  }\n};\n\nexports.toRawTransaction = toRawTransaction;\n/**\n * Turns an array of transaction inputs into the argument that\n * need to be passed to the executeTransactions call.\n * Main transformation is that all the `data` parts of each\n * transaction in the batch are concatenated and an array\n * of lengths is constructed.\n * This is a gas optimisation on the contract.\n * @param txs Array<TransactionInput<any>> array of txs\n * @returns Params for the executeTransactions method call\n */\n\nvar toTransactionBatch = function (txs) {\n  var rawTxs = txs.map(exports.toRawTransaction);\n  return {\n    destinations: rawTxs.map(function (rtx) {\n      return rtx.destination;\n    }),\n    values: rawTxs.map(function (rtx) {\n      return rtx.value;\n    }),\n    callData: (0, address_1.ensureLeading0x)(rawTxs.map(function (rtx) {\n      return (0, address_1.trimLeading0x)(rtx.data);\n    }).join('')),\n    callDataLengths: rawTxs.map(function (rtx) {\n      return (0, address_1.trimLeading0x)(rtx.data).length / 2;\n    })\n  };\n};\n\nexports.toTransactionBatch = toTransactionBatch;\n\nvar buildMetaTxTypedData = function (walletAddress, tx, nonce, chainId) {\n  return {\n    types: {\n      EIP712Domain: [{\n        name: 'name',\n        type: 'string'\n      }, {\n        name: 'version',\n        type: 'string'\n      }, {\n        name: 'chainId',\n        type: 'uint256'\n      }, {\n        name: 'verifyingContract',\n        type: 'address'\n      }],\n      ExecuteMetaTransaction: [{\n        name: 'destination',\n        type: 'address'\n      }, {\n        name: 'value',\n        type: 'uint256'\n      }, {\n        name: 'data',\n        type: 'bytes'\n      }, {\n        name: 'nonce',\n        type: 'uint256'\n      }]\n    },\n    primaryType: 'ExecuteMetaTransaction',\n    domain: {\n      name: 'MetaTransactionWallet',\n      version: '1.1',\n      chainId: chainId,\n      verifyingContract: walletAddress\n    },\n    message: tx ? __assign(__assign({}, tx), {\n      nonce: nonce\n    }) : {}\n  };\n};\n\nexports.buildMetaTxTypedData = buildMetaTxTypedData;","map":{"version":3,"mappings":"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","names":["__extends","_this","tx","nonce","rawTx","destination","value","data","contract","methods","getMetaTransactionDigest","getMetaTransactionDigestParams","BaseWrapper_1","signature","v","r","s","getMetaTransactionSigner","getMetaTransactionSignerParams","eip712DomainSeparator","isOwner","undefined","signer","kit","transferOwnership","setSigner","setEip712DomainSeparator","MetaTransactionWalletWrapper","connection","executeTransaction","txs","destinations","values","callData","callDataLengths","executeTransactions","executeMetaTransaction","_c","_a","address","chainId","typedData","signTypedData","signMetaTransaction","_b","_chainId","_e","_d","_signer","getSigner","exports","toRawTransaction","txo","_parent","options","encodeABI","toTransactionBatch","rawTxs","map","rtx","join","length","buildMetaTxTypedData","walletAddress","types","EIP712Domain","name","type","ExecuteMetaTransaction","primaryType","domain","version","verifyingContract","message","__assign"],"sourceRoot":"","sources":["../../src/wrappers/MetaTransactionWallet.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}