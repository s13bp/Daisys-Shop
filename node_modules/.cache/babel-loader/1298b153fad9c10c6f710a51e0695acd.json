{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _objectSpread = require(\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar debug = require('debug');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nvar log = debug__default[\"default\"]('ipfs-http-client:pubsub:subscribe');\n\nvar createSubscribe = function createSubscribe(options, subsTracker) {\n  return configure.configure(function (api) {\n    function subscribe(_x, _x2) {\n      return _subscribe.apply(this, arguments);\n    }\n\n    function _subscribe() {\n      _subscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic, handler) {\n        var options,\n            done,\n            fail,\n            result,\n            ffWorkaround,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n                options.signal = subsTracker.subscribe(topic, handler, options.signal);\n                result = new Promise(function (resolve, reject) {\n                  done = resolve;\n                  fail = reject;\n                });\n                ffWorkaround = setTimeout(function () {\n                  return done();\n                }, 1000);\n                api.post('pubsub/sub', {\n                  signal: options.signal,\n                  searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                    arg: httpRpcWireFormat.textToUrlSafeRpc(topic)\n                  }, options)),\n                  headers: options.headers\n                }).catch(function (err) {\n                  subsTracker.unsubscribe(topic, handler);\n                  fail(err);\n                }).then(function (response) {\n                  clearTimeout(ffWorkaround);\n\n                  if (!response) {\n                    return;\n                  }\n\n                  readMessages(response, {\n                    onMessage: handler,\n                    onEnd: function onEnd() {\n                      return subsTracker.unsubscribe(topic, handler);\n                    },\n                    onError: options.onError\n                  });\n                  done();\n                });\n                return _context.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _subscribe.apply(this, arguments);\n    }\n\n    return subscribe;\n  })(options);\n};\n\nfunction readMessages(_x3, _x4) {\n  return _readMessages.apply(this, arguments);\n}\n\nfunction _readMessages() {\n  _readMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response, _ref) {\n    var onMessage, onEnd, onError, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, msg;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            onMessage = _ref.onMessage, onEnd = _ref.onEnd, onError = _ref.onError;\n            onError = onError || log;\n            _context2.prev = 2;\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context2.prev = 5;\n            _iterator = _asyncIterator(response.ndjson());\n\n          case 7:\n            _context2.next = 9;\n            return _iterator.next();\n\n          case 9:\n            if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n              _context2.next = 24;\n              break;\n            }\n\n            msg = _step.value;\n            _context2.prev = 11;\n\n            if (msg.from) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 21);\n\n          case 14:\n            onMessage({\n              from: msg.from,\n              data: httpRpcWireFormat.rpcToBytes(msg.data),\n              seqno: httpRpcWireFormat.rpcToBytes(msg.seqno),\n              topicIDs: httpRpcWireFormat.rpcArrayToTextArray(msg.topicIDs)\n            });\n            _context2.next = 21;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](11);\n            _context2.t0.message = \"Failed to parse pubsub message: \".concat(_context2.t0.message);\n            onError(_context2.t0, false, msg);\n\n          case 21:\n            _iteratorAbruptCompletion = false;\n            _context2.next = 7;\n            break;\n\n          case 24:\n            _context2.next = 30;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            _context2.t1 = _context2[\"catch\"](5);\n            _didIteratorError = true;\n            _iteratorError = _context2.t1;\n\n          case 30:\n            _context2.prev = 30;\n            _context2.prev = 31;\n\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context2.next = 35;\n              break;\n            }\n\n            _context2.next = 35;\n            return _iterator.return();\n\n          case 35:\n            _context2.prev = 35;\n\n            if (!_didIteratorError) {\n              _context2.next = 38;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 38:\n            return _context2.finish(35);\n\n          case 39:\n            return _context2.finish(30);\n\n          case 40:\n            _context2.next = 45;\n            break;\n\n          case 42:\n            _context2.prev = 42;\n            _context2.t2 = _context2[\"catch\"](2);\n\n            if (!isAbortError(_context2.t2)) {\n              onError(_context2.t2, true);\n            }\n\n          case 45:\n            _context2.prev = 45;\n            onEnd();\n            return _context2.finish(45);\n\n          case 48:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 42, 45, 48], [5, 26, 30, 40], [11, 17], [31,, 35, 39]]);\n  }));\n  return _readMessages.apply(this, arguments);\n}\n\nvar isAbortError = function isAbortError(error) {\n  switch (error.type) {\n    case 'aborted':\n      return true;\n\n    case 'abort':\n      return true;\n\n    default:\n      return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;","map":{"version":3,"sources":["/Users/crypto/Daisys/node_modules/ipfs-http-client/cjs/src/pubsub/subscribe.js"],"names":["Object","defineProperty","exports","value","debug","require","configure","toUrlSearchParams","httpRpcWireFormat","_interopDefaultLegacy","e","debug__default","log","createSubscribe","options","subsTracker","api","subscribe","topic","handler","signal","result","Promise","resolve","reject","done","fail","ffWorkaround","setTimeout","post","searchParams","arg","textToUrlSafeRpc","headers","catch","err","unsubscribe","then","response","clearTimeout","readMessages","onMessage","onEnd","onError","ndjson","msg","from","data","rpcToBytes","seqno","topicIDs","rpcArrayToTextArray","message","isAbortError","error","type","name"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default[\"default\"]('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: httpRpcWireFormat.textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: msg.from,\n          data: httpRpcWireFormat.rpcToBytes(msg.data),\n          seqno: httpRpcWireFormat.rpcToBytes(msg.seqno),\n          topicIDs: httpRpcWireFormat.rpcArrayToTextArray(msg.topicIDs)\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;\n"]},"metadata":{},"sourceType":"script"}