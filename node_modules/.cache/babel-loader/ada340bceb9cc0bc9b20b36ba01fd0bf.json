{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAttestationServiceUrl = exports.createAttestationServiceURLClaim = exports.AttestationServiceURLClaimType = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar io_1 = require(\"@celo/utils/lib/io\");\n\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\n\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nvar crypto_1 = require(\"crypto\");\n\nvar Either_1 = require(\"fp-ts/lib/Either\");\n\nvar t = __importStar(require(\"io-ts\"));\n\nvar types_1 = require(\"./types\");\n\nvar SIGNATURE_PREFIX = 'attestation-service-status-signature:';\nexports.AttestationServiceURLClaimType = t.type({\n  type: t.literal(types_1.ClaimTypes.ATTESTATION_SERVICE_URL),\n  timestamp: types_1.TimestampType,\n  url: io_1.UrlType\n});\n\nvar createAttestationServiceURLClaim = function createAttestationServiceURLClaim(url) {\n  return {\n    url: url,\n    timestamp: (0, types_1.now)(),\n    type: types_1.ClaimTypes.ATTESTATION_SERVICE_URL\n  };\n};\n\nexports.createAttestationServiceURLClaim = createAttestationServiceURLClaim;\n\nfunction validateAttestationServiceUrl(kit, claim, address) {\n  return __awaiter(this, void 0, void 0, function () {\n    var randomMessage, url, resp, jsonResp, parsedResponse, claimedAccountAddress, accounts, attestationKeyAddress, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 5,, 6]);\n\n          randomMessage = (0, address_1.ensureLeading0x)((0, crypto_1.randomBytes)(32).toString('hex'));\n          url = claim.url + '/status?messageToSign=' + randomMessage;\n          return [4\n          /*yield*/\n          , (0, cross_fetch_1.default)(url)];\n\n        case 1:\n          resp = _a.sent();\n\n          if (!resp.ok) {\n            return [2\n            /*return*/\n            , \"Could not request sucessfully from \" + url + \"\\\", received status \" + resp.status];\n          }\n\n          return [4\n          /*yield*/\n          , resp.json()];\n\n        case 2:\n          jsonResp = _a.sent();\n          parsedResponse = io_1.AttestationServiceStatusResponseType.decode(jsonResp);\n\n          if ((0, Either_1.isLeft)(parsedResponse)) {\n            return [2\n            /*return*/\n            , \"Response from \" + url + \" could not be parsed successfully\"];\n          }\n\n          claimedAccountAddress = parsedResponse.right.accountAddress;\n\n          if (!(0, address_1.eqAddress)(claimedAccountAddress, address)) {\n            return [2\n            /*return*/\n            , \"The service claims \" + claimedAccountAddress + \", but metadata claims \" + address];\n          }\n\n          return [4\n          /*yield*/\n          , kit.contracts.getAccounts()];\n\n        case 3:\n          accounts = _a.sent();\n          return [4\n          /*yield*/\n          , accounts.getAttestationSigner(address)];\n\n        case 4:\n          attestationKeyAddress = _a.sent();\n\n          if (attestationKeyAddress === '0x0' || (0, address_1.eqAddress)(address, attestationKeyAddress)) {\n            return [2\n            /*return*/\n            , \"The account has not specified a separate attestation key\"];\n          }\n\n          if (!parsedResponse.right.signature || !(0, signatureUtils_1.verifySignature)(SIGNATURE_PREFIX + randomMessage, parsedResponse.right.signature, attestationKeyAddress)) {\n            return [2\n            /*return*/\n            , \"The service's attestation key differs from the smart contract registered one\"];\n          }\n\n          return [2\n          /*return*/\n          ];\n\n        case 5:\n          error_1 = _a.sent();\n          return [2\n          /*return*/\n          , \"Could not validate attestation service claim: \" + error_1];\n\n        case 6:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.validateAttestationServiceUrl = validateAttestationServiceUrl;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA,IAAMA,gBAAgB,GAAG,uCAAzB;AAEaC,yCAAiCC,CAAC,CAACC,IAAF,CAAO;AACnDA,MAAI,EAAED,CAAC,CAACE,OAAF,CAAUC,mBAAWC,uBAArB,CAD6C;AAEnDC,WAAS,EAAEF,qBAFwC;AAGnDG,KAAG,EAAEC;AAH8C,CAAP,CAAjC;;AAQN,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACF,GAAD,EAAY;AAAiC,SAAC;AAC5FA,OAAG,KADyF;AAE5FD,aAAS,EAAE,kBAFiF;AAG5FJ,QAAI,EAAEE,mBAAWC;AAH2E,GAAD;AAI3F,CAJK;;AAAML,2CAAgCS,gCAAhC;;AAMb,SAAsBC,6BAAtB,CACEC,GADF,EAEEC,KAFF,EAGEC,OAHF,EAGkB;;;;;;;;AAGRC,uBAAa,GAAG,+BAAgB,0BAAY,EAAZ,EAAgBC,QAAhB,CAAyB,KAAzB,CAAhB,CAAhB;AAEAR,aAAG,GAAGK,KAAK,CAACL,GAAN,GAAY,wBAAZ,GAAuCO,aAA7C;AAEO;AAAA;AAAA,YAAM,2BAAMP,GAAN,CAAN;;;AAAPS,cAAI,GAAGC,SAAP;;AAEN,cAAI,CAACD,IAAI,CAACE,EAAV,EAAc;AACZ;AAAA;AAAA,cAAO,wCAAsCX,GAAtC,GAAyC,sBAAzC,GAA+DS,IAAI,CAACG,MAA3E;AACD;;AAEgB;AAAA;AAAA,YAAMH,IAAI,CAACI,IAAL,EAAN;;;AAAXC,kBAAQ,GAAGJ,SAAX;AAEAK,wBAAc,GAAGd,0CAAqCe,MAArC,CAA4CF,QAA5C,CAAjB;;AAEN,cAAI,qBAAOC,cAAP,CAAJ,EAA4B;AAC1B;AAAA;AAAA,cAAO,mBAAiBf,GAAjB,GAAoB,mCAA3B;AACD;;AAEKiB,+BAAqB,GAAGF,cAAc,CAACG,KAAf,CAAqBC,cAA7C;;AACN,cAAI,CAAC,yBAAUF,qBAAV,EAAiCX,OAAjC,CAAL,EAAgD;AAC9C;AAAA;AAAA,cAAO,wBAAsBW,qBAAtB,GAA2C,wBAA3C,GAAoEX,OAA3E;AACD;;AAEgB;AAAA;AAAA,YAAMF,GAAG,CAACgB,SAAJ,CAAcC,WAAd,EAAN;;;AAAXC,kBAAQ,GAAGZ,SAAX;AAEwB;AAAA;AAAA,YAAMY,QAAQ,CAACC,oBAAT,CAA8BjB,OAA9B,CAAN;;;AAAxBkB,+BAAqB,GAAGd,SAAxB;;AAEN,cAAIc,qBAAqB,KAAK,KAA1B,IAAmC,yBAAUlB,OAAV,EAAmBkB,qBAAnB,CAAvC,EAAkF;AAChF;AAAA;AAAA,cAAO,0DAAP;AACD;;AAED,cACE,CAACT,cAAc,CAACG,KAAf,CAAqBO,SAAtB,IACA,CAAC,sCACCjC,gBAAgB,GAAGe,aADpB,EAECQ,cAAc,CAACG,KAAf,CAAqBO,SAFtB,EAGCD,qBAHD,CAFH,EAOE;AACA;AAAA;AAAA,cAAO,8EAAP;AACD;;AAED;AAAA;AAAA;;;;AAEA;AAAA;AAAA,YAAO,mDAAiDE,OAAxD;;;;;;;;;AAEH;;AApDDjC","names":["SIGNATURE_PREFIX","exports","t","type","literal","types_1","ATTESTATION_SERVICE_URL","timestamp","url","io_1","createAttestationServiceURLClaim","validateAttestationServiceUrl","kit","claim","address","randomMessage","toString","resp","_a","ok","status","json","jsonResp","parsedResponse","decode","claimedAccountAddress","right","accountAddress","contracts","getAccounts","accounts","getAttestationSigner","attestationKeyAddress","signature","error_1"],"sourceRoot":"","sources":["../../../src/identity/claims/attestation-service-url.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}