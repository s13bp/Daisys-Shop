{"ast":null,"code":"import _asyncToGenerator from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect,useCallback}from'react';import{useContractKit}from'@celo-tools/use-contractkit';export var useContract=function useContract(abi,contractAddress){var _useContractKit=useContractKit(),getConnectedKit=_useContractKit.getConnectedKit,address=_useContractKit.address;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),contract=_useState2[0],setContract=_useState2[1];var getContract=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var kit;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getConnectedKit();case 2:kit=_context.sent;// get a contract interface to interact with\nsetContract(new kit.web3.eth.Contract(abi,contractAddress));case 4:case\"end\":return _context.stop();}}},_callee);})),[getConnectedKit,abi,contractAddress]);useEffect(function(){if(address)getContract();},[address,getContract]);return contract;};","map":{"version":3,"sources":["/Users/crypto/Daisys/src/hooks/useContract.js"],"names":["useState","useEffect","useCallback","useContractKit","useContract","abi","contractAddress","getConnectedKit","address","contract","setContract","getContract","kit","web3","eth","Contract"],"mappings":"iUAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CACA,OAASC,cAAT,KAA+B,6BAA/B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,GAAD,CAAMC,eAAN,CAA0B,CACnD,oBAAqCH,cAAc,EAAnD,CAAQI,eAAR,iBAAQA,eAAR,CAAyBC,OAAzB,iBAAyBA,OAAzB,CACA,cAAgCR,QAAQ,CAAC,IAAD,CAAxC,wCAAOS,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,WAAW,CAAGT,WAAW,sEAAC,iKACZK,CAAAA,eAAe,EADH,QACxBK,GADwB,eAG9B;AACAF,WAAW,CAAC,GAAIE,CAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,QAAjB,CAA0BV,GAA1B,CAA+BC,eAA/B,CAAD,CAAX,CAJ8B,sDAAD,GAK5B,CAACC,eAAD,CAAkBF,GAAlB,CAAuBC,eAAvB,CAL4B,CAA/B,CAOAL,SAAS,CAAC,UAAM,CACd,GAAIO,OAAJ,CAAaG,WAAW,GACzB,CAFQ,CAEN,CAACH,OAAD,CAAUG,WAAV,CAFM,CAAT,CAIA,MAAOF,CAAAA,QAAP,CACD,CAhBM","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useContractKit } from '@celo-tools/use-contractkit';\n\nexport const useContract = (abi, contractAddress) => {\n  const { getConnectedKit, address } = useContractKit();\n  const [contract, setContract] = useState(null);\n\n  const getContract = useCallback(async () => {\n    const kit = await getConnectedKit();\n\n    // get a contract interface to interact with\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\n  }, [getConnectedKit, abi, contractAddress]);\n\n  useEffect(() => {\n    if (address) getContract();\n  }, [address, getContract]);\n\n  return contract;\n};\n"]},"metadata":{},"sourceType":"module"}