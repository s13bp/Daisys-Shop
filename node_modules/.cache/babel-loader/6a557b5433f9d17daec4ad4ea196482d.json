{"ast":null,"code":"import _asyncToGenerator from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import'./item.css';import creator from'../../assets/seller2.png';import item from'../../assets/item1.png';import axios from\"axios\";import{ethers}from\"ethers\";import{useParams}from\"react-router\";import{useContractKit}from\"@celo-tools/use-contractkit\";import{useMarketContract}from\"../../hooks/useMarketContract\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Item=function Item(){var _useParams=useParams(),id=_useParams.id;var marketplace=useMarketContract();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),nftData=_useState2[0],setNftData=_useState2[1];var _useContractKit=useContractKit(),address=_useContractKit.address,performActions=_useContractKit.performActions;var navigate=useNavigate();useEffect(function(){if(marketplace)fetchNft();},[marketplace]);var fetchNft=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tokenUri,meta;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return marketplace.methods.tokenURI(id).call();case 2:tokenUri=_context.sent;_context.next=5;return axios.get(tokenUri);case 5:meta=_context.sent;setNftData(meta.data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchNft(){return _ref.apply(this,arguments);};}();var purchaseNft=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return performActions(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(kit){var defaultAccount,price,transaction;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:defaultAccount=kit.defaultAccount;/* user will be prompted to pay the asking proces to complete the transaction */ /* user will be prompted to pay the asking proces to complete the transaction */price=ethers.utils.parseUnits(nftData.price,'ether').toString();console.log({price:price});_context2.next=5;return marketplace.methods.createMarketSale(id).send({from:defaultAccount,value:price});case 5:transaction=_context2.sent;alert(\"You have successfully purchased this NFT!\");navigate(\"/profile\");case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref3.apply(this,arguments);};}());case 3:_context3.next=8;break;case 5:_context3.prev=5;_context3.t0=_context3[\"catch\"](0);console.log({error:_context3.t0});case 8:case\"end\":return _context3.stop();}}},_callee3,null,[[0,5]]);}));return function purchaseNft(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"item section__padding\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-image\",children:/*#__PURE__*/_jsx(\"img\",{src:nftData.image,alt:\"item\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-content-title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:nftData.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Costs \",/*#__PURE__*/_jsxs(\"span\",{children:[nftData.price,\" CUSD\"]}),\" .\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-content-creator\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Creater\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[nftData.owner||\"Anonymous\",\"  \"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-content-detail\",children:/*#__PURE__*/_jsx(\"p\",{children:nftData.description})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-content-buy\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"primary-btn\",onClick:purchaseNft,children:[\"Buy For \",nftData.price,\" CUSD\"]})})]})]});};export default Item;","map":{"version":3,"sources":["/Users/crypto/Daisys/src/pages/item/Item.jsx"],"names":["React","useEffect","useState","creator","item","axios","ethers","useParams","useContractKit","useMarketContract","useNavigate","Item","id","marketplace","nftData","setNftData","address","performActions","navigate","fetchNft","methods","tokenURI","call","tokenUri","get","meta","data","purchaseNft","kit","defaultAccount","price","utils","parseUnits","toString","console","log","createMarketSale","send","from","value","transaction","alert","error","image","name","owner","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './item.css'\nimport creator from '../../assets/seller2.png'\nimport item from '../../assets/item1.png'\nimport axios from \"axios\";\nimport {ethers} from \"ethers\";\nimport {useParams} from \"react-router\";\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport {useMarketContract} from \"../../hooks/useMarketContract\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst Item = () => {\n\n    const {id} = useParams()\n    const marketplace = useMarketContract()\n    const [nftData, setNftData] = useState({});\n    const {address, performActions} = useContractKit()\n\n    const navigate = useNavigate()\n    useEffect(() => {\n        if (marketplace ) fetchNft()\n    }, [marketplace]);\n\n    const fetchNft = async () => {\n        const tokenUri = await marketplace.methods.tokenURI(id).call()\n        const meta = await axios.get(tokenUri)\n        setNftData(meta.data)\n    }\n\n    const purchaseNft = async () => {\n\n        try {\n\n\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n            /* user will be prompted to pay the asking proces to complete the transaction */\n            const price =( ethers.utils.parseUnits(nftData.price, 'ether')).toString()\n            console.log({price})\n            const transaction = await marketplace.methods.createMarketSale(id).send({\n                from: defaultAccount,\n                value: price\n            })\n            alert(`You have successfully purchased this NFT!`)\n            navigate(`/profile`)\n        })\n        } catch (error) {\n            console.log({ error });\n        }\n\n\n    }\n\n    return (\n        <div className='item section__padding'>\n            <div className=\"item-image\">\n                <img src={nftData.image} alt=\"item\"/>\n            </div>\n            <div className=\"item-content\">\n                <div className=\"item-content-title\">\n                    <h1>{nftData.name}</h1>\n                    <p>Costs <span>{nftData.price} CUSD</span> .</p>\n                </div>\n                <div className=\"item-content-creator\">\n                    <div><p>Creater</p></div>\n                    <div>\n                        \n                        <p>{nftData.owner || \"Anonymous\"}  </p>\n                    </div>\n                </div>\n                <div className=\"item-content-detail\">\n                    <p>{nftData.description}</p>\n                </div>\n\n\n                <div className=\"item-content-buy\">\n                    <button className=\"primary-btn\" onClick={purchaseNft}>Buy For {nftData.price} CUSD</button>\n                    {/*<button className=\"secondary-btn\">Make Offer</button>*/}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}