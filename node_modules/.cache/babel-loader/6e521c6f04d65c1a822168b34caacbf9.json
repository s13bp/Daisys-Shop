{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidFeeCurrency = exports.clearPreviousConfig = exports.loadPreviousConfig = void 0;\n\nvar contractkit_1 = require(\"@celo/contractkit\");\n\nvar connectors_1 = require(\"../connectors\");\n\nvar constants_1 = require(\"../constants\");\n\nvar localStorage_1 = __importDefault(require(\"./localStorage\"));\n\nvar loadPreviousConfig = function (defaultNetworkProp, defaultFeeCurrencyProp) {\n  var _a;\n\n  var lastUsedNetworkName = defaultNetworkProp.name;\n  var lastUsedAddress = null;\n  var lastUsedWalletType = constants_1.WalletTypes.Unauthenticated;\n  var lastUsedWalletArguments = [];\n  var lastUsedFeeCurrency = defaultFeeCurrencyProp;\n\n  if (typeof localStorage_1.default !== 'undefined') {\n    var localLastUsedNetworkName = localStorage_1.default.getItem(constants_1.localStorageKeys.lastUsedNetwork);\n\n    if (localLastUsedNetworkName) {\n      lastUsedNetworkName = localLastUsedNetworkName;\n    }\n\n    lastUsedAddress = localStorage_1.default.getItem(constants_1.localStorageKeys.lastUsedAddress);\n    var localLastUsedWalletType = localStorage_1.default.getItem(constants_1.localStorageKeys.lastUsedWalletType);\n\n    if (localLastUsedWalletType && localLastUsedWalletType in constants_1.WalletTypes) {\n      lastUsedWalletType = localLastUsedWalletType;\n    }\n\n    var localLastUsedWalletArguments = localStorage_1.default.getItem(constants_1.localStorageKeys.lastUsedWalletArguments);\n\n    if (localLastUsedWalletArguments) {\n      try {\n        lastUsedWalletArguments = JSON.parse(localLastUsedWalletArguments);\n      } catch (e) {\n        lastUsedWalletArguments = [];\n      }\n    }\n\n    var localLastUsedFeeCurrency = localStorage_1.default.getItem(constants_1.localStorageKeys.lastUsedFeeCurrency);\n\n    if (isValidFeeCurrency(localLastUsedFeeCurrency)) {\n      lastUsedFeeCurrency = localLastUsedFeeCurrency;\n    }\n  }\n\n  var lastUsedNetwork = constants_1.DEFAULT_NETWORKS.find(function (n) {\n    return n.name === lastUsedNetworkName;\n  });\n  var initialConnector;\n\n  if (lastUsedWalletType && lastUsedNetwork) {\n    try {\n      initialConnector = new ((_a = connectors_1.CONNECTOR_TYPES[lastUsedWalletType]).bind.apply(_a, __spreadArray([void 0, lastUsedNetwork, lastUsedFeeCurrency], __read(lastUsedWalletArguments), false)))();\n    } catch (e) {\n      initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork || defaultNetworkProp);\n    }\n  } else {\n    initialConnector = new connectors_1.UnauthenticatedConnector(lastUsedNetwork || defaultNetworkProp);\n  }\n\n  return {\n    address: lastUsedAddress,\n    network: lastUsedNetwork || null,\n    connector: initialConnector,\n    feeCurrency: lastUsedFeeCurrency\n  };\n};\n\nexports.loadPreviousConfig = loadPreviousConfig;\n\nfunction clearPreviousConfig() {\n  Object.values(constants_1.localStorageKeys).forEach(function (val) {\n    return localStorage_1.default.removeItem(val);\n  });\n}\n\nexports.clearPreviousConfig = clearPreviousConfig;\n\nfunction isValidFeeCurrency(currency) {\n  switch (currency) {\n    case contractkit_1.CeloContract.GoldToken:\n    case contractkit_1.CeloContract.StableToken:\n    case contractkit_1.CeloContract.StableTokenEUR:\n    case contractkit_1.CeloContract.StableTokenBRL:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexports.isValidFeeCurrency = isValidFeeCurrency;","map":{"version":3,"mappings":"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","names":["loadPreviousConfig","defaultNetworkProp","defaultFeeCurrencyProp","lastUsedNetworkName","name","lastUsedAddress","lastUsedWalletType","constants_1","Unauthenticated","lastUsedWalletArguments","lastUsedFeeCurrency","localStorage_1","localLastUsedNetworkName","getItem","lastUsedNetwork","localLastUsedWalletType","localLastUsedWalletArguments","JSON","parse","e","localLastUsedFeeCurrency","isValidFeeCurrency","find","n","initialConnector","bind","apply","_a","__spreadArray","__read","connectors_1","address","network","connector","feeCurrency","exports","clearPreviousConfig","Object","values","forEach","val","removeItem","currency","contractkit_1","GoldToken","StableToken","StableTokenEUR","StableTokenBRL"],"sourceRoot":"","sources":["../../src/utils/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}