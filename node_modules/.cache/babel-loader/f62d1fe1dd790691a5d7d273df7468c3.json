{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lock = void 0;\n\nvar events_1 = require(\"events\");\n\nvar LockEvent;\n\n(function (LockEvent) {\n  LockEvent[\"Unlock\"] = \"unlock\";\n})(LockEvent || (LockEvent = {})); // Lock which can be used to ensure mutual exclusion in concurrent code.\n//\n// This lock is non-reentrant, and attempting to acquire it while holding the lock will result in a deadlock.\n\n\nvar Lock =\n/** @class */\nfunction () {\n  function Lock() {\n    this.locked = false;\n    this.emitter = new events_1.EventEmitter();\n  } // Attempt to acquire the lock without blocking.\n  // @returns {boolean} True if the lock was acquired.\n\n\n  Lock.prototype.tryAcquire = function () {\n    if (!this.locked) {\n      this.locked = true;\n      return true;\n    }\n\n    return false;\n  }; // Acquire the lock, blocking until the lock is available.\n\n\n  Lock.prototype.acquire = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      // Attempt to grab the lock without waiting.\n      if (_this.tryAcquire()) {\n        resolve();\n        return;\n      } // Wait for an event emitted when releasing the lock.\n\n\n      var callback = function callback() {\n        try {\n          if (_this.tryAcquire()) {\n            _this.emitter.removeListener(LockEvent.Unlock, callback);\n\n            resolve();\n          }\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      _this.emitter.on(LockEvent.Unlock, callback);\n    });\n  }; // Release the lock such that another caller can acquire it.\n  // If not locked, calling this method has no effect.\n\n\n  Lock.prototype.release = function () {\n    if (this.locked) {\n      this.locked = false;\n      this.emitter.emit(LockEvent.Unlock);\n    }\n  };\n\n  return Lock;\n}();\n\nexports.Lock = Lock;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,IAAKA,SAAL;;AAAA,WAAKA,SAAL,EAAc;AACZA;AACD,CAFD,EAAKA,SAAS,KAATA,SAAS,MAAd,E,CAIA;AACA;AACA;;;AACA;AAAA;AAAA;AAIE;AAHQ,kBAAkB,KAAlB;AAIN,SAAKC,OAAL,GAAe,IAAIC,qBAAJ,EAAf;AACD,GANH,CAQE;AACA;;;AACAC;AACE,QAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,WAAKA,MAAL,GAAc,IAAd;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAND,CAVF,CAkBE;;;AACAD;AAAA;;AACE,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAgB;AACjC;AACA,UAAIC,KAAI,CAACC,UAAL,EAAJ,EAAuB;AACrBH,eAAO;AACP;AACD,OALgC,CAOjC;;;AACA,UAAMI,QAAQ,GAAG,SAAXA,QAAW;AACf,YAAI;AACF,cAAIF,KAAI,CAACC,UAAL,EAAJ,EAAuB;AACrBD,iBAAI,CAACP,OAAL,CAAaU,cAAb,CAA4BX,SAAS,CAACY,MAAtC,EAA8CF,QAA9C;;AACAJ,mBAAO;AACR;AACF,SALD,CAKE,OAAOO,KAAP,EAAc;AACdN,gBAAM,CAACM,KAAD,CAAN;AACD;AACF,OATD;;AAUAL,WAAI,CAACP,OAAL,CAAaa,EAAb,CAAgBd,SAAS,CAACY,MAA1B,EAAkCF,QAAlC;AACD,KAnBM,CAAP;AAoBD,GArBD,CAnBF,CA0CE;AACA;;;AACAP;AACE,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,GAAc,KAAd;AACA,WAAKH,OAAL,CAAac,IAAb,CAAkBf,SAAS,CAACY,MAA5B;AACD;AACF,GALD;;AAMF;AAAC,CAlDD;;AAAaI","names":["LockEvent","emitter","events_1","Lock","locked","Promise","resolve","reject","_this","tryAcquire","callback","removeListener","Unlock","error","on","emit","exports"],"sourceRoot":"","sources":["../src/lock.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}