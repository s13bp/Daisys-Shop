{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultRpcCaller = exports.getRandomId = exports.rpcCallHandler = void 0;\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debugRpcPayload = (0, debug_1.default)('rpc:payload');\nvar debugRpcResponse = (0, debug_1.default)('rpc:response');\nvar debugRpcCallback = (0, debug_1.default)('rpc:callback:exception');\n\nfunction rpcCallHandler(payload, handler, callback) {\n  try {\n    handler(payload).then(function (result) {\n      callback(null, toRPCResponse(payload, result));\n    }, // Called if the Promise of the 'handler' fails\n    function (error) {\n      callback(error, toRPCResponse(payload, null, error));\n    }).catch(function (error) {\n      // Called if the 'callback' fails\n      debugRpcCallback('Callback for handling the JsonRpcResponse fails');\n      debugRpcCallback('%O', error);\n    });\n  } catch (error) {\n    // Called if the handler fails before making the promise\n    callback(error instanceof Error ? error : null);\n  }\n}\n\nexports.rpcCallHandler = rpcCallHandler; // Ported from: https://github.com/MetaMask/provider-engine/blob/master/util/random-id.js\n\nfunction getRandomId() {\n  var extraDigits = 3;\n  var baseTen = 10; // 13 time digits\n\n  var datePart = new Date().getTime() * Math.pow(baseTen, extraDigits); // 3 random digits\n\n  var extraPart = Math.floor(Math.random() * Math.pow(baseTen, extraDigits)); // 16 digits\n\n  return datePart + extraPart;\n}\n\nexports.getRandomId = getRandomId;\n\nfunction toRPCResponse(payload, result, error) {\n  var response = {\n    id: Number(payload.id),\n    jsonrpc: payload.jsonrpc,\n    result: result\n  };\n\n  if (error != null) {\n    response.error = {\n      message: error.message || error.stack || error.toString(),\n      code: -32000\n    };\n  }\n\n  return response;\n}\n\nvar DefaultRpcCaller =\n/** @class */\nfunction () {\n  function DefaultRpcCaller(defaultProvider, jsonrpcVersion) {\n    if (jsonrpcVersion === void 0) {\n      jsonrpcVersion = '2.0';\n    }\n\n    this.defaultProvider = defaultProvider;\n    this.jsonrpcVersion = jsonrpcVersion;\n  }\n\n  DefaultRpcCaller.prototype.call = function (method, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var payload = {\n            id: getRandomId(),\n            jsonrpc: _this.jsonrpcVersion,\n            method: method,\n            params: params\n          };\n\n          _this.send(payload, function (err, response) {\n            if (err != null || !response) {\n              reject(err);\n            } else {\n              resolve(response);\n            }\n          });\n        })];\n      });\n    });\n  };\n\n  DefaultRpcCaller.prototype.send = function (payload, callback) {\n    debugRpcPayload('%O', payload);\n\n    var decoratedCallback = function (error, result) {\n      var err = null; // error could be false\n\n      if (error) {\n        err = error;\n      }\n\n      debugRpcResponse('%O', result); // The provider send call will not provide an error to the callback if\n      // the result itself specifies an error. Here, we extract the error in the\n      // result.\n\n      if (result && result.error != null && typeof result.error !== 'string' && result.error.message != null) {\n        err = new Error(result.error.message);\n      }\n\n      callback(err, result);\n    };\n\n    if (this.defaultProvider && typeof this.defaultProvider !== 'string') {\n      this.defaultProvider.send(payload, decoratedCallback);\n    }\n  };\n\n  return DefaultRpcCaller;\n}();\n\nexports.DefaultRpcCaller = DefaultRpcCaller;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA,IAAMA,eAAe,GAAG,qBAAa,aAAb,CAAxB;AACA,IAAMC,gBAAgB,GAAG,qBAAa,cAAb,CAAzB;AACA,IAAMC,gBAAgB,GAAG,qBAAa,wBAAb,CAAzB;;AAEA,SAAgBC,cAAhB,CACEC,OADF,EAEEC,OAFF,EAGEC,QAHF,EAGqC;AAEnC,MAAI;AACFD,WAAO,CAACD,OAAD,CAAP,CACGG,IADH,CAEI,UAACC,MAAD,EAAO;AACLF,cAAQ,CAAC,IAAD,EAAOG,aAAa,CAACL,OAAD,EAAUI,MAAV,CAApB,CAAR;AACD,KAJL,EAKI;AACA,cAACE,KAAD,EAAM;AACJJ,cAAQ,CAACI,KAAD,EAAQD,aAAa,CAACL,OAAD,EAAU,IAAV,EAAgBM,KAAhB,CAArB,CAAR;AACD,KARL,EAUGC,KAVH,CAUS,UAACD,KAAD,EAAM;AACX;AACAR,sBAAgB,CAAC,iDAAD,CAAhB;AACAA,sBAAgB,CAAC,IAAD,EAAOQ,KAAP,CAAhB;AACD,KAdH;AAeD,GAhBD,CAgBE,OAAOA,KAAP,EAAc;AACd;AACAJ,YAAQ,CAACI,KAAK,YAAYE,KAAjB,GAAyBF,KAAzB,GAAiC,IAAlC,CAAR;AACD;AACF;;AAzBDG,wC,CA2BA;;AACA,SAAgBC,WAAhB,GAA2B;AACzB,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,OAAO,GAAG,EAAhB,CAFyB,CAGzB;;AACA,MAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBC,IAAI,CAACC,GAAL,CAASL,OAAT,EAAkBD,WAAlB,CAAxC,CAJyB,CAKzB;;AACA,MAAMO,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACC,GAAL,CAASL,OAAT,EAAkBD,WAAlB,CAA3B,CAAlB,CANyB,CAOzB;;AACA,SAAOE,QAAQ,GAAGK,SAAlB;AACD;;AATDT;;AAWA,SAASJ,aAAT,CAAuBL,OAAvB,EAAgDI,MAAhD,EAA6DE,KAA7D,EAA0E;AACxE,MAAMe,QAAQ,GAAoB;AAChCC,MAAE,EAAEC,MAAM,CAACvB,OAAO,CAACsB,EAAT,CADsB;AAEhCE,WAAO,EAAExB,OAAO,CAACwB,OAFe;AAGhCpB,UAAM;AAH0B,GAAlC;;AAMA,MAAIE,KAAK,IAAI,IAAb,EAAmB;AACjBe,YAAQ,CAACf,KAAT,GAAiB;AACfmB,aAAO,EAAEnB,KAAK,CAACmB,OAAN,IAAiBnB,KAAK,CAACoB,KAAvB,IAAgCpB,KAAK,CAACqB,QAAN,EAD1B;AAEfC,UAAI,EAAE,CAAC;AAFQ,KAAjB;AAID;;AACD,SAAOP,QAAP;AACD;;AAMD;AAAA;AAAA;AACE,4BAAqBQ,eAArB,EAAyDC,cAAzD,EAAuF;AAA9B;AAAAA;AAA8B;;AAAlE;AAAoC;AAAkC;;AAE9EC,oCAAb,UAAkBC,MAAlB,EAAkCC,MAAlC,EAA+C;;;;;AAC7C;AAAA;AAAA,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAgB;AACjC,cAAMpC,OAAO,GAAmB;AAC9BsB,cAAE,EAAEZ,WAAW,EADe;AAE9Bc,mBAAO,EAAEa,KAAI,CAACP,cAFgB;AAG9BE,kBAAM,QAHwB;AAI9BC,kBAAM;AAJwB,WAAhC;;AAMAI,eAAI,CAACC,IAAL,CAAUtC,OAAV,EAAmB,UAACuC,GAAD,EAAWlB,QAAX,EAAqC;AACtD,gBAAIkB,GAAG,IAAI,IAAP,IAAe,CAAClB,QAApB,EAA8B;AAC5Be,oBAAM,CAACG,GAAD,CAAN;AACD,aAFD,MAEO;AACLJ,qBAAO,CAACd,QAAD,CAAP;AACD;AACF,WAND;AAOD,SAdM,CAAP;;;AAeD,GAhBY;;AAkBNU,oCAAP,UAAY/B,OAAZ,EAAqCE,QAArC,EAAwE;AACtEN,mBAAe,CAAC,IAAD,EAAOI,OAAP,CAAf;;AAEA,QAAMwC,iBAAiB,GAA8B,UACnDlC,KADmD,EAEnDF,MAFmD,EAE3B;AAExB,UAAImC,GAAG,GAAiB,IAAxB,CAFwB,CAGxB;;AACA,UAAIjC,KAAJ,EAAW;AACTiC,WAAG,GAAGjC,KAAN;AACD;;AACDT,sBAAgB,CAAC,IAAD,EAAOO,MAAP,CAAhB,CAPwB,CAQxB;AACA;AACA;;AACA,UACEA,MAAM,IACNA,MAAM,CAACE,KAAP,IAAgB,IADhB,IAEA,OAAOF,MAAM,CAACE,KAAd,KAAwB,QAFxB,IAGAF,MAAM,CAACE,KAAP,CAAamB,OAAb,IAAwB,IAJ1B,EAKE;AACAc,WAAG,GAAG,IAAI/B,KAAJ,CAAUJ,MAAM,CAACE,KAAP,CAAamB,OAAvB,CAAN;AACD;;AACDvB,cAAQ,CAACqC,GAAD,EAAMnC,MAAN,CAAR;AACD,KAtBD;;AAwBA,QAAI,KAAKyB,eAAL,IAAwB,OAAO,KAAKA,eAAZ,KAAgC,QAA5D,EAAsE;AACpE,WAAKA,eAAL,CAAqBS,IAArB,CAA2BtC,OAA3B,EAAoCwC,iBAApC;AACD;AACF,GA9BM;;AA+BT;AAAC,CApDD;;AAAa/B","names":["debugRpcPayload","debugRpcResponse","debugRpcCallback","rpcCallHandler","payload","handler","callback","then","result","toRPCResponse","error","catch","Error","exports","getRandomId","extraDigits","baseTen","datePart","Date","getTime","Math","pow","extraPart","floor","random","response","id","Number","jsonrpc","message","stack","toString","code","defaultProvider","jsonrpcVersion","DefaultRpcCaller","method","params","Promise","resolve","reject","_this","send","err","decoratedCallback"],"sourceRoot":"","sources":["../../src/utils/rpc-caller.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}