{"ast":null,"code":"\"use strict\"; // Copyright (c) 2017 Gustaf Andersson (github.com/gustf/js-levenshtein)\n// Distributed under the MIT license github.com/gustf/js-levenshtein/blob/master/LICENSE\n// Adapted for use in TypeScript by cLabs, 2021\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.levenshteinDistance = void 0;\n\nvar _min = function _min(d0, d1, d2, bx, ay) {\n  return d0 < d1 || d2 < d1 ? d0 > d2 ? d2 + 1 : d0 + 1 : bx === ay ? d1 : d1 + 1;\n};\n\nfunction levenshteinDistance(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  if (a.length > b.length) {\n    var tmp = a;\n    a = b;\n    b = tmp;\n  }\n\n  var la = a.length;\n  var lb = b.length;\n\n  while (la > 0 && a.charCodeAt(la - 1) === b.charCodeAt(lb - 1)) {\n    la--;\n    lb--;\n  }\n\n  var offset = 0;\n\n  while (offset < la && a.charCodeAt(offset) === b.charCodeAt(offset)) {\n    offset++;\n  }\n\n  la -= offset;\n  lb -= offset;\n\n  if (la === 0 || lb < 3) {\n    return lb;\n  }\n\n  var x = 0;\n  var y;\n  var d0;\n  var d1;\n  var d2;\n  var d3;\n  var dd;\n  var dy;\n  var ay;\n  var bx0;\n  var bx1;\n  var bx2;\n  var bx3;\n  var vector = [];\n\n  for (y = 0; y < la; y++) {\n    vector.push(y + 1);\n    vector.push(a.charCodeAt(offset + y));\n  }\n\n  var len = vector.length - 1;\n\n  for (; x < lb - 3;) {\n    bx0 = b.charCodeAt(offset + (d0 = x));\n    bx1 = b.charCodeAt(offset + (d1 = x + 1));\n    bx2 = b.charCodeAt(offset + (d2 = x + 2));\n    bx3 = b.charCodeAt(offset + (d3 = x + 3));\n    dd = x += 4;\n\n    for (y = 0; y < len; y += 2) {\n      dy = vector[y];\n      ay = vector[y + 1];\n      d0 = _min(dy, d0, d1, bx0, ay);\n      d1 = _min(d0, d1, d2, bx1, ay);\n      d2 = _min(d1, d2, d3, bx2, ay);\n      dd = _min(d2, d3, dd, bx3, ay);\n      vector[y] = dd;\n      d3 = d2;\n      d2 = d1;\n      d1 = d0;\n      d0 = dy;\n    }\n  }\n\n  for (; x < lb;) {\n    bx0 = b.charCodeAt(offset + (d0 = x));\n    dd = ++x;\n\n    for (y = 0; y < len; y += 2) {\n      dy = vector[y];\n      vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n      d0 = dy;\n    }\n  }\n\n  return dd;\n}\n\nexports.levenshteinDistance = levenshteinDistance;","map":{"version":3,"mappings":"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","names":["_min","d0","d1","d2","bx","ay","levenshteinDistance","a","b","length","tmp","la","lb","charCodeAt","offset","x","y","d3","dd","dy","bx0","bx1","bx2","bx3","vector","push","len","exports"],"sourceRoot":"","sources":["../src/levenshtein.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}