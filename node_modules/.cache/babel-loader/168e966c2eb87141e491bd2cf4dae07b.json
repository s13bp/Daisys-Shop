{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authorizeSigner = exports.attestationSecurityCode = void 0;\n\nfunction attestationSecurityCode(code) {\n  return {\n    types: {\n      EIP712Domain: [{\n        name: 'name',\n        type: 'string'\n      }, {\n        name: 'version',\n        type: 'string'\n      }],\n      AttestationRequest: [{\n        name: 'code',\n        type: 'string'\n      }]\n    },\n    primaryType: 'AttestationRequest',\n    domain: {\n      name: 'Attestations',\n      version: '1.0.0'\n    },\n    message: {\n      code: code\n    }\n  };\n}\n\nexports.attestationSecurityCode = attestationSecurityCode;\n\nvar authorizeSigner = function authorizeSigner(_a) {\n  var account = _a.account,\n      signer = _a.signer,\n      chainId = _a.chainId,\n      role = _a.role,\n      accountsContractAddress = _a.accountsContractAddress;\n  return {\n    types: {\n      EIP712Domain: [{\n        name: 'name',\n        type: 'string'\n      }, {\n        name: 'version',\n        type: 'string'\n      }, {\n        name: 'chainId',\n        type: 'uint256'\n      }, {\n        name: 'verifyingContract',\n        type: 'address'\n      }],\n      AuthorizeSigner: [{\n        name: 'account',\n        type: 'address'\n      }, {\n        name: 'signer',\n        type: 'address'\n      }, {\n        name: 'role',\n        type: 'bytes32'\n      }]\n    },\n    primaryType: 'AuthorizeSigner',\n    domain: {\n      name: 'Celo Core Contracts',\n      version: '1.0',\n      chainId: chainId,\n      verifyingContract: accountsContractAddress\n    },\n    message: {\n      account: account,\n      signer: signer,\n      role: role\n    }\n  };\n};\n\nexports.authorizeSigner = authorizeSigner;","map":{"version":3,"mappings":";;;;;;;AAEA,SAAgBA,uBAAhB,CAAwCC,IAAxC,EAAoD;AAClD,SAAO;AACLC,SAAK,EAAE;AACLC,kBAAY,EAAE,CACZ;AAAEC,YAAI,EAAE,MAAR;AAAgBC,YAAI,EAAE;AAAtB,OADY,EAEZ;AAAED,YAAI,EAAE,SAAR;AAAmBC,YAAI,EAAE;AAAzB,OAFY,CADT;AAKLC,wBAAkB,EAAE,CAAC;AAAEF,YAAI,EAAE,MAAR;AAAgBC,YAAI,EAAE;AAAtB,OAAD;AALf,KADF;AAQLE,eAAW,EAAE,oBARR;AASLC,UAAM,EAAE;AACNJ,UAAI,EAAE,cADA;AAENK,aAAO,EAAE;AAFH,KATH;AAaLC,WAAO,EAAE;AACPT,UAAI;AADG;AAbJ,GAAP;AAiBD;;AAlBDU;;AAoBO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAY9B;MAXCC,OAAO;MACPC,MAAM;MACNC,OAAO;MACPC,IAAI;MACJC,uBAAuB;AAOF,SAAC;AACtBhB,SAAK,EAAE;AACLC,kBAAY,EAAE,CACZ;AAAEC,YAAI,EAAE,MAAR;AAAgBC,YAAI,EAAE;AAAtB,OADY,EAEZ;AAAED,YAAI,EAAE,SAAR;AAAmBC,YAAI,EAAE;AAAzB,OAFY,EAGZ;AAAED,YAAI,EAAE,SAAR;AAAmBC,YAAI,EAAE;AAAzB,OAHY,EAIZ;AAAED,YAAI,EAAE,mBAAR;AAA6BC,YAAI,EAAE;AAAnC,OAJY,CADT;AAOLc,qBAAe,EAAE,CACf;AAAEf,YAAI,EAAE,SAAR;AAAmBC,YAAI,EAAE;AAAzB,OADe,EAEf;AAAED,YAAI,EAAE,QAAR;AAAkBC,YAAI,EAAE;AAAxB,OAFe,EAGf;AAAED,YAAI,EAAE,MAAR;AAAgBC,YAAI,EAAE;AAAtB,OAHe;AAPZ,KADe;AActBE,eAAW,EAAE,iBAdS;AAetBC,UAAM,EAAE;AACNJ,UAAI,EAAE,qBADA;AAENK,aAAO,EAAE,KAFH;AAGNO,aAAO,SAHD;AAINI,uBAAiB,EAAEF;AAJb,KAfc;AAqBtBR,WAAO,EAAE;AACPI,aAAO,SADA;AAEPC,YAAM,QAFC;AAGPE,UAAI;AAHG;AArBa,GAAD;AA0BrB,CAtCK;;AAAMN,0BAAeC,eAAf","names":["attestationSecurityCode","code","types","EIP712Domain","name","type","AttestationRequest","primaryType","domain","version","message","exports","authorizeSigner","_a","account","signer","chainId","role","accountsContractAddress","AuthorizeSigner","verifyingContract"],"sourceRoot":"","sources":["../src/typed-data-constructors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}