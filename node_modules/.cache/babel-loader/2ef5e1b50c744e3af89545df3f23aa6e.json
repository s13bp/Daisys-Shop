{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CeloTokens = exports.celoTokenInfos = exports.stableTokenInfos = exports.Token = exports.StableToken = void 0;\n\nvar base_1 = require(\"./base\");\n\nvar StableToken;\n\n(function (StableToken) {\n  StableToken[\"cUSD\"] = \"cUSD\";\n  StableToken[\"cEUR\"] = \"cEUR\";\n  StableToken[\"cREAL\"] = \"cREAL\";\n})(StableToken = exports.StableToken || (exports.StableToken = {}));\n\nvar Token;\n\n(function (Token) {\n  Token[\"CELO\"] = \"CELO\";\n})(Token = exports.Token || (exports.Token = {}));\n/** Basic info for each stable token */\n\n\nexports.stableTokenInfos = (_a = {}, _a[StableToken.cUSD] = {\n  contract: base_1.CeloContract.StableToken,\n  exchangeContract: base_1.CeloContract.Exchange,\n  symbol: StableToken.cUSD\n}, _a[StableToken.cEUR] = {\n  contract: base_1.CeloContract.StableTokenEUR,\n  exchangeContract: base_1.CeloContract.ExchangeEUR,\n  symbol: StableToken.cEUR\n}, _a[StableToken.cREAL] = {\n  contract: base_1.CeloContract.StableTokenBRL,\n  exchangeContract: base_1.CeloContract.ExchangeBRL,\n  symbol: StableToken.cREAL\n}, _a);\n/** Basic info for each supported celo token, including stable tokens */\n\nexports.celoTokenInfos = __assign((_b = {}, _b[Token.CELO] = {\n  contract: base_1.CeloContract.GoldToken,\n  symbol: Token.CELO\n}, _b), exports.stableTokenInfos);\n/**\n * A helper class to interact with all Celo tokens, ie CELO and stable tokens\n */\n\nvar CeloTokens =\n/** @class */\nfunction () {\n  function CeloTokens(kit) {\n    var _this = this;\n\n    this.kit = kit;\n    /**\n     * Gets the address of the contract for the provided token.\n     * @param token the token to get the (proxy) contract address for\n     * @return A promise resolving to the address of the token's contract\n     */\n\n    this.getAddress = function (token) {\n      return _this.kit.registry.addressFor(exports.celoTokenInfos[token].contract);\n    };\n  }\n  /**\n   * Gets an address's balance for each celo token.\n   * @param address the address to look up the balances for\n   * @return a promise resolving to an object containing the address's balance\n   *  for each celo token\n   */\n\n\n  CeloTokens.prototype.balancesOf = function (address) {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var wrapper;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.kit.contracts.getContract(info.contract)];\n\n            case 1:\n              wrapper = _a.sent();\n              return [2\n              /*return*/\n              , wrapper.balanceOf(address)];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Gets the wrapper for each celo token.\n   * @return an promise resolving to an object containing the wrapper for each celo token.\n   */\n\n\n  CeloTokens.prototype.getWrappers = function () {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return _this.kit.contracts.getContract(info.contract);\n    });\n  };\n  /**\n   * Gets the address for each celo token proxy contract.\n   * @return an promise resolving to an object containing the address for each celo token proxy.\n   */\n\n\n  CeloTokens.prototype.getAddresses = function () {\n    var _this = this;\n\n    return this.forEachCeloToken(function (info) {\n      return _this.kit.registry.addressFor(info.contract);\n    });\n  };\n\n  CeloTokens.prototype.getStablesConfigs = function (humanReadable) {\n    if (humanReadable === void 0) {\n      humanReadable = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.forStableCeloToken(function (info) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var stableWrapper;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.kit.contracts.getContract(info.contract)];\n\n                case 1:\n                  stableWrapper = _a.sent();\n\n                  if (humanReadable) {\n                    return [2\n                    /*return*/\n                    , stableWrapper.getHumanReadableConfig()];\n                  }\n\n                  return [2\n                  /*return*/\n                  , stableWrapper.getConfig()];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  CeloTokens.prototype.getExchangesConfigs = function (humanReadable) {\n    if (humanReadable === void 0) {\n      humanReadable = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.forStableCeloToken(function (info) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var exchangeWrapper;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.kit.contracts.getContract(info.exchangeContract)];\n\n                case 1:\n                  exchangeWrapper = _a.sent();\n\n                  if (humanReadable) {\n                    return [2\n                    /*return*/\n                    , exchangeWrapper.getHumanReadableConfig()];\n                  }\n\n                  return [2\n                  /*return*/\n                  , exchangeWrapper.getConfig()];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n  /**\n   * Runs fn for each celo token found in celoTokenInfos, and returns the\n   * value of each call in an object keyed by the token.\n   * @param fn the function to be called for each CeloTokenInfo.\n   * @return an object containing the resolved value the call to fn for each\n   *  celo token.\n   */\n\n\n  CeloTokens.prototype.forEachCeloToken = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var wrapperInfoFunction;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        wrapperInfoFunction = function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n\n            var _this = this;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  _b = (_a = Promise).all;\n                  return [4\n                  /*yield*/\n                  , this.validCeloTokenInfos()];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _b.apply(_a, [_c.sent().map(function (info) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var fnResult;\n\n                      var _a;\n\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            fnResult = fn(info);\n                            _a = {\n                              symbol: info.symbol\n                            };\n                            return [4\n                            /*yield*/\n                            , fnResult];\n\n                          case 1:\n                            return [2\n                            /*return*/\n                            , (_a.data = _b.sent(), _a)];\n                        }\n                      });\n                    });\n                  })])];\n              }\n            });\n          });\n        };\n\n        return [2\n        /*return*/\n        , this.forEachWrapperInfo(wrapperInfoFunction)];\n      });\n    });\n  };\n  /**\n   * Runs fn for each stable token found in stableTokenInfos, and returns the\n   * value of each call in an object keyed by the token.\n   * @param fn the function to be called for each StableTokenInfo.\n   * @return an object containing the resolved value the call to fn for each\n   *  celo token.\n   */\n\n\n  CeloTokens.prototype.forStableCeloToken = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var wrapperInfoFunction;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        wrapperInfoFunction = function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n\n            var _this = this;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  _b = (_a = Promise).all;\n                  return [4\n                  /*yield*/\n                  , this.validStableTokenInfos()];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _b.apply(_a, [_c.sent().map(function (info) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var fnResult;\n\n                      var _a;\n\n                      return __generator(this, function (_b) {\n                        switch (_b.label) {\n                          case 0:\n                            fnResult = fn(info);\n                            _a = {\n                              symbol: info.symbol\n                            };\n                            return [4\n                            /*yield*/\n                            , fnResult];\n\n                          case 1:\n                            return [2\n                            /*return*/\n                            , (_a.data = _b.sent(), _a)];\n                        }\n                      });\n                    });\n                  })])];\n              }\n            });\n          });\n        };\n\n        return [2\n        /*return*/\n        , this.forEachWrapperInfo(wrapperInfoFunction)];\n      });\n    });\n  };\n\n  CeloTokens.prototype.forEachWrapperInfo = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , fn()];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent().reduce(function (obj, wrapperInfo) {\n              var _a;\n\n              return __assign(__assign({}, obj), (_a = {}, _a[wrapperInfo.symbol] = wrapperInfo.data, _a));\n            }, {})];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.validCeloTokenInfos = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var results;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(Object.values(exports.celoTokenInfos).map(function (info) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _b.trys.push([0, 2,, 3]); // The registry add the valid addresses to a cache\n\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.contract)];\n\n                    case 1:\n                      // The registry add the valid addresses to a cache\n                      _b.sent();\n\n                      return [2\n                      /*return*/\n                      , true];\n\n                    case 2:\n                      _a = _b.sent(); // The contract was not deployed in the chain\n\n                      return [2\n                      /*return*/\n                      , false];\n\n                    case 3:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            results = _a.sent();\n            return [2\n            /*return*/\n            , Object.values(exports.celoTokenInfos).filter(function (_v, index) {\n              return results[index];\n            })];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.validStableTokenInfos = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var results;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(Object.values(exports.stableTokenInfos).map(function (info) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a;\n\n                return __generator(this, function (_b) {\n                  switch (_b.label) {\n                    case 0:\n                      _b.trys.push([0, 3,, 4]); // The registry add the valid addresses to a cache\n\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.contract)];\n\n                    case 1:\n                      // The registry add the valid addresses to a cache\n                      _b.sent();\n\n                      return [4\n                      /*yield*/\n                      , this.kit.registry.addressFor(info.exchangeContract)];\n\n                    case 2:\n                      _b.sent();\n\n                      return [2\n                      /*return*/\n                      , true];\n\n                    case 3:\n                      _a = _b.sent(); // The contract was not deployed in the chain\n\n                      return [2\n                      /*return*/\n                      , false];\n\n                    case 4:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }))];\n\n          case 1:\n            results = _a.sent();\n            return [2\n            /*return*/\n            , Object.values(exports.stableTokenInfos).filter(function (_v, index) {\n              return results[index];\n            })];\n        }\n      });\n    });\n  };\n\n  CeloTokens.prototype.getWrapper = function (token) {\n    return this.kit.contracts.getContract(exports.celoTokenInfos[token].contract);\n  };\n\n  CeloTokens.prototype.getContract = function (token) {\n    return exports.celoTokenInfos[token].contract;\n  };\n  /**\n   * Gets the exchange contract for the provided stable token\n   * @param token the stable token to get exchange contract of\n   * @return The exchange contract for the token\n   */\n\n\n  CeloTokens.prototype.getExchangeContract = function (token) {\n    return exports.stableTokenInfos[token].exchangeContract;\n  };\n  /**\n   * Gets the address to use as the feeCurrency when paying for gas with the\n   *  provided token.\n   * @param token the token to get the feeCurrency address for\n   * @return If not CELO, the address of the token's contract. If CELO, undefined.\n   */\n\n\n  CeloTokens.prototype.getFeeCurrencyAddress = function (token) {\n    if (token === Token.CELO) {\n      return undefined;\n    }\n\n    return this.getAddress(token);\n  };\n  /**\n   * Returns if the provided token is a StableToken\n   * @param token the token\n   * @return if token is a StableToken\n   */\n\n\n  CeloTokens.prototype.isStableToken = function (token) {\n    // We cast token as StableToken to make typescript happy\n    return Object.values(StableToken).includes(token);\n  };\n\n  CeloTokens.prototype.isStableTokenContract = function (contract) {\n    var allStableTokenContracts = Object.values(StableToken).map(function (token) {\n      return exports.stableTokenInfos[token].contract;\n    }); // We cast token as StableTokenContract to make typescript happy\n\n    return allStableTokenContracts.includes(contract);\n  };\n\n  return CeloTokens;\n}();\n\nexports.CeloTokens = CeloTokens;","map":{"version":3,"mappings":"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","names":["StableToken","exports","Token","_a","cUSD","contract","base_1","exchangeContract","Exchange","symbol","cEUR","StableTokenEUR","ExchangeEUR","cREAL","StableTokenBRL","ExchangeBRL","__assign","CELO","GoldToken","_b","kit","token","registry","addressFor","CeloTokens","address","forEachCeloToken","info","contracts","getContract","wrapper","balanceOf","humanReadable","forStableCeloToken","stableWrapper","getHumanReadableConfig","getConfig","exchangeWrapper","fn","wrapperInfoFunction","all","validCeloTokenInfos","_c","map","fnResult","forEachWrapperInfo","validStableTokenInfos","reduce","obj","wrapperInfo","data","Promise","Object","values","results","filter","_v","index","undefined","getAddress","includes","allStableTokenContracts"],"sourceRoot":"","sources":["../src/celo-tokens.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}