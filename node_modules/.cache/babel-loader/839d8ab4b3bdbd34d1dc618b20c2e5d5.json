{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FreezerWrapper = void 0;\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar FreezerWrapper =\n/** @class */\nfunction (_super) {\n  __extends(FreezerWrapper, _super);\n\n  function FreezerWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.freeze = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.freeze);\n    _this.unfreeze = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.unfreeze);\n    _this.isFrozen = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isFrozen);\n    return _this;\n  }\n\n  return FreezerWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.FreezerWrapper = FreezerWrapper;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;AAAA;AAAA;AAAoCA;;AAApC;AAAA;;AACEC,mBAAS,6BAAUA,KAAI,CAACC,GAAf,EAAoBD,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBC,MAA1C,CAAT;AACAJ,qBAAW,6BAAUA,KAAI,CAACC,GAAf,EAAoBD,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBE,QAA1C,CAAX;AACAL,qBAAW,6BAAUA,KAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBG,QAAhC,CAAX;;AACD;;AAAD;AAJA,EAAoCC,yBAApC;;AAAaC","names":["__extends","_this","kit","contract","methods","freeze","unfreeze","isFrozen","BaseWrapper_1","exports"],"sourceRoot":"","sources":["../../src/wrappers/Freezer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}