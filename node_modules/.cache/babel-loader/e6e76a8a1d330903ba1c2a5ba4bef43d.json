{"ast":null,"code":"import _asyncToGenerator from \"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";\nimport { parsePersonalSign, parseTransactionData, convertArrayBufferToHex, convertHexToArrayBuffer, getClientMeta, payloadId, uuid, formatRpcError, parseWalletConnectUri, convertNumberToHex, isJsonRpcResponseSuccess, isJsonRpcResponseError, isSilentPayload, getLocal, signingMethods, mobileLinkChoiceKey, isMobile, removeLocal } from \"@walletconnect/utils\";\nimport SocketTransport from \"@walletconnect/socket-transport\";\nimport { ERROR_SESSION_CONNECTED, ERROR_SESSION_DISCONNECTED, ERROR_SESSION_REJECTED, ERROR_MISSING_JSON_RPC, ERROR_MISSING_RESULT, ERROR_MISSING_ERROR, ERROR_MISSING_METHOD, ERROR_MISSING_ID, ERROR_INVALID_RESPONSE, ERROR_INVALID_URI, ERROR_MISSING_REQUIRED, ERROR_QRCODE_MODAL_NOT_PROVIDED, ERROR_QRCODE_MODAL_USER_CLOSED } from \"./errors\";\nimport EventManager from \"./events\";\nimport SessionStorage from \"./storage\";\nimport { getBridgeUrl } from \"./url\";\n\nvar Connector = /*#__PURE__*/function () {\n  function Connector(opts) {\n    _classCallCheck(this, Connector);\n\n    this.protocol = \"wc\";\n    this.version = 1;\n    this._bridge = \"\";\n    this._key = null;\n    this._clientId = \"\";\n    this._clientMeta = null;\n    this._peerId = \"\";\n    this._peerMeta = null;\n    this._handshakeId = 0;\n    this._handshakeTopic = \"\";\n    this._connected = false;\n    this._accounts = [];\n    this._chainId = 0;\n    this._networkId = 0;\n    this._rpcUrl = \"\";\n    this._eventManager = new EventManager();\n    this._clientMeta = getClientMeta() || opts.connectorOpts.clientMeta || null;\n    this._cryptoLib = opts.cryptoLib;\n    this._sessionStorage = opts.sessionStorage || new SessionStorage(opts.connectorOpts.storageId);\n    this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n    this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n    this._signingMethods = [].concat(_toConsumableArray(signingMethods), _toConsumableArray(opts.connectorOpts.signingMethods || []));\n\n    if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n      throw new Error(ERROR_MISSING_REQUIRED);\n    }\n\n    if (opts.connectorOpts.bridge) {\n      this.bridge = getBridgeUrl(opts.connectorOpts.bridge);\n    }\n\n    if (opts.connectorOpts.uri) {\n      this.uri = opts.connectorOpts.uri;\n    }\n\n    var session = opts.connectorOpts.session || this._getStorageSession();\n\n    if (session) {\n      this.session = session;\n    }\n\n    if (this.handshakeId) {\n      this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n    }\n\n    this._transport = opts.transport || new SocketTransport({\n      protocol: this.protocol,\n      version: this.version,\n      url: this.bridge,\n      subscriptions: [this.clientId]\n    });\n\n    this._subscribeToInternalEvents();\n\n    this._initTransport();\n\n    if (opts.connectorOpts.uri) {\n      this._subscribeToSessionRequest();\n    }\n\n    if (opts.pushServerOpts) {\n      this._registerPushServer(opts.pushServerOpts);\n    }\n  }\n\n  _createClass(Connector, [{\n    key: \"bridge\",\n    get: function get() {\n      return this._bridge;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._bridge = value;\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      if (this._key) {\n        var key = convertArrayBufferToHex(this._key, true);\n        return key;\n      }\n\n      return \"\";\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      var key = convertHexToArrayBuffer(value);\n      this._key = key;\n    }\n  }, {\n    key: \"clientId\",\n    get: function get() {\n      var clientId = this._clientId;\n\n      if (!clientId) {\n        clientId = this._clientId = uuid();\n      }\n\n      return this._clientId;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._clientId = value;\n    }\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this._peerId;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._peerId = value;\n    }\n  }, {\n    key: \"clientMeta\",\n    get: function get() {\n      var clientMeta = this._clientMeta;\n\n      if (!clientMeta) {\n        clientMeta = this._clientMeta = getClientMeta();\n      }\n\n      return clientMeta;\n    },\n    set: function set(value) {}\n  }, {\n    key: \"peerMeta\",\n    get: function get() {\n      var peerMeta = this._peerMeta;\n      return peerMeta;\n    },\n    set: function set(value) {\n      this._peerMeta = value;\n    }\n  }, {\n    key: \"handshakeTopic\",\n    get: function get() {\n      return this._handshakeTopic;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._handshakeTopic = value;\n    }\n  }, {\n    key: \"handshakeId\",\n    get: function get() {\n      return this._handshakeId;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._handshakeId = value;\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      var _uri = this._formatUri();\n\n      return _uri;\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      var _this$_parseUri = this._parseUri(value),\n          handshakeTopic = _this$_parseUri.handshakeTopic,\n          bridge = _this$_parseUri.bridge,\n          key = _this$_parseUri.key;\n\n      this.handshakeTopic = handshakeTopic;\n      this.bridge = bridge;\n      this.key = key;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      var chainId = this._chainId;\n      return chainId;\n    },\n    set: function set(value) {\n      this._chainId = value;\n    }\n  }, {\n    key: \"networkId\",\n    get: function get() {\n      var networkId = this._networkId;\n      return networkId;\n    },\n    set: function set(value) {\n      this._networkId = value;\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      var accounts = this._accounts;\n      return accounts;\n    },\n    set: function set(value) {\n      this._accounts = value;\n    }\n  }, {\n    key: \"rpcUrl\",\n    get: function get() {\n      var rpcUrl = this._rpcUrl;\n      return rpcUrl;\n    },\n    set: function set(value) {\n      this._rpcUrl = value;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._connected;\n    },\n    set: function set(value) {}\n  }, {\n    key: \"pending\",\n    get: function get() {\n      return !!this._handshakeTopic;\n    },\n    set: function set(value) {}\n  }, {\n    key: \"session\",\n    get: function get() {\n      return {\n        connected: this.connected,\n        accounts: this.accounts,\n        chainId: this.chainId,\n        bridge: this.bridge,\n        key: this.key,\n        clientId: this.clientId,\n        clientMeta: this.clientMeta,\n        peerId: this.peerId,\n        peerMeta: this.peerMeta,\n        handshakeId: this.handshakeId,\n        handshakeTopic: this.handshakeTopic\n      };\n    },\n    set: function set(value) {\n      if (!value) {\n        return;\n      }\n\n      this._connected = value.connected;\n      this.accounts = value.accounts;\n      this.chainId = value.chainId;\n      this.bridge = value.bridge;\n      this.key = value.key;\n      this.clientId = value.clientId;\n      this.clientMeta = value.clientMeta;\n      this.peerId = value.peerId;\n      this.peerMeta = value.peerMeta;\n      this.handshakeId = value.handshakeId;\n      this.handshakeTopic = value.handshakeTopic;\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var eventEmitter = {\n        event: event,\n        callback: callback\n      };\n\n      this._eventManager.subscribe(eventEmitter);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event) {\n      this._eventManager.unsubscribe(event);\n    }\n  }, {\n    key: \"createInstantRequest\",\n    value: function () {\n      var _createInstantRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(instantRequest) {\n        var _this = this;\n\n        var request, endInstantRequest, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._generateKey();\n\n              case 2:\n                this._key = _context.sent;\n                request = this._formatRequest({\n                  method: \"wc_instantRequest\",\n                  params: [{\n                    peerId: this.clientId,\n                    peerMeta: this.clientMeta,\n                    request: this._formatRequest(instantRequest)\n                  }]\n                });\n                this.handshakeId = request.id;\n                this.handshakeTopic = uuid();\n\n                this._eventManager.trigger({\n                  event: \"display_uri\",\n                  params: [this.uri]\n                });\n\n                this.on(\"modal_closed\", function () {\n                  throw new Error(ERROR_QRCODE_MODAL_USER_CLOSED);\n                });\n\n                endInstantRequest = function endInstantRequest() {\n                  _this.killSession();\n                };\n\n                _context.prev = 9;\n                _context.next = 12;\n                return this._sendCallRequest(request);\n\n              case 12:\n                result = _context.sent;\n\n                if (result) {\n                  endInstantRequest();\n                }\n\n                return _context.abrupt(\"return\", result);\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](9);\n                endInstantRequest();\n                throw _context.t0;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 17]]);\n      }));\n\n      function createInstantRequest(_x) {\n        return _createInstantRequest.apply(this, arguments);\n      }\n\n      return createInstantRequest;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(opts) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this._qrcodeModal) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_QRCODE_MODAL_NOT_PROVIDED);\n\n              case 2:\n                if (!this.connected) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  chainId: this.chainId,\n                  accounts: this.accounts\n                });\n\n              case 4:\n                _context3.next = 6;\n                return this.createSession(opts);\n\n              case 6:\n                return _context3.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve, reject) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _this2.on(\"modal_closed\", function () {\n                              return reject(new Error(ERROR_QRCODE_MODAL_USER_CLOSED));\n                            });\n\n                            _this2.on(\"connect\", function (error, payload) {\n                              if (error) {\n                                return reject(error);\n                              }\n\n                              resolve(payload.params[0]);\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function connect(_x2) {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"createSession\",\n    value: function () {\n      var _createSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(opts) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._connected) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_CONNECTED);\n\n              case 2:\n                if (!this.pending) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 4:\n                _context4.next = 6;\n                return this._generateKey();\n\n              case 6:\n                this._key = _context4.sent;\n                request = this._formatRequest({\n                  method: \"wc_sessionRequest\",\n                  params: [{\n                    peerId: this.clientId,\n                    peerMeta: this.clientMeta,\n                    chainId: opts && opts.chainId ? opts.chainId : null\n                  }]\n                });\n                this.handshakeId = request.id;\n                this.handshakeTopic = uuid();\n\n                this._sendSessionRequest(request, \"Session update rejected\", {\n                  topic: this.handshakeTopic\n                });\n\n                this._eventManager.trigger({\n                  event: \"display_uri\",\n                  params: [this.uri]\n                });\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createSession(_x5) {\n        return _createSession.apply(this, arguments);\n      }\n\n      return createSession;\n    }()\n  }, {\n    key: \"approveSession\",\n    value: function approveSession(sessionStatus) {\n      if (this._connected) {\n        throw new Error(ERROR_SESSION_CONNECTED);\n      }\n\n      this.chainId = sessionStatus.chainId;\n      this.accounts = sessionStatus.accounts;\n      this.networkId = sessionStatus.networkId || 0;\n      this.rpcUrl = sessionStatus.rpcUrl || \"\";\n      var sessionParams = {\n        approved: true,\n        chainId: this.chainId,\n        networkId: this.networkId,\n        accounts: this.accounts,\n        rpcUrl: this.rpcUrl,\n        peerId: this.clientId,\n        peerMeta: this.clientMeta\n      };\n      var response = {\n        id: this.handshakeId,\n        jsonrpc: \"2.0\",\n        result: sessionParams\n      };\n\n      this._sendResponse(response);\n\n      this._connected = true;\n\n      this._setStorageSession();\n\n      this._eventManager.trigger({\n        event: \"connect\",\n        params: [{\n          peerId: this.peerId,\n          peerMeta: this.peerMeta,\n          chainId: this.chainId,\n          accounts: this.accounts\n        }]\n      });\n    }\n  }, {\n    key: \"rejectSession\",\n    value: function rejectSession(sessionError) {\n      if (this._connected) {\n        throw new Error(ERROR_SESSION_CONNECTED);\n      }\n\n      var message = sessionError && sessionError.message ? sessionError.message : ERROR_SESSION_REJECTED;\n\n      var response = this._formatResponse({\n        id: this.handshakeId,\n        error: {\n          message: message\n        }\n      });\n\n      this._sendResponse(response);\n\n      this._connected = false;\n\n      this._eventManager.trigger({\n        event: \"disconnect\",\n        params: [{\n          message: message\n        }]\n      });\n\n      this._removeStorageSession();\n    }\n  }, {\n    key: \"updateSession\",\n    value: function updateSession(sessionStatus) {\n      if (!this._connected) {\n        throw new Error(ERROR_SESSION_DISCONNECTED);\n      }\n\n      this.chainId = sessionStatus.chainId;\n      this.accounts = sessionStatus.accounts;\n      this.networkId = sessionStatus.networkId || 0;\n      this.rpcUrl = sessionStatus.rpcUrl || \"\";\n      var sessionParams = {\n        approved: true,\n        chainId: this.chainId,\n        networkId: this.networkId,\n        accounts: this.accounts,\n        rpcUrl: this.rpcUrl\n      };\n\n      var request = this._formatRequest({\n        method: \"wc_sessionUpdate\",\n        params: [sessionParams]\n      });\n\n      this._sendSessionRequest(request, \"Session update rejected\");\n\n      this._eventManager.trigger({\n        event: \"session_update\",\n        params: [{\n          chainId: this.chainId,\n          accounts: this.accounts\n        }]\n      });\n\n      this._manageStorageSession();\n    }\n  }, {\n    key: \"killSession\",\n    value: function () {\n      var _killSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(sessionError) {\n        var message, sessionParams, request;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                message = sessionError ? sessionError.message : \"Session Disconnected\";\n                sessionParams = {\n                  approved: false,\n                  chainId: null,\n                  networkId: null,\n                  accounts: null\n                };\n                request = this._formatRequest({\n                  method: \"wc_sessionUpdate\",\n                  params: [sessionParams]\n                });\n                _context5.next = 5;\n                return this._sendRequest(request);\n\n              case 5:\n                this._handleSessionDisconnect(message);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function killSession(_x6) {\n        return _killSession.apply(this, arguments);\n      }\n\n      return killSession;\n    }()\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(tx) {\n        var parsedTx, request, result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (this._connected) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                parsedTx = parseTransactionData(tx);\n                request = this._formatRequest({\n                  method: \"eth_sendTransaction\",\n                  params: [parsedTx]\n                });\n                _context6.next = 6;\n                return this._sendCallRequest(request);\n\n              case 6:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function sendTransaction(_x7) {\n        return _sendTransaction.apply(this, arguments);\n      }\n\n      return sendTransaction;\n    }()\n  }, {\n    key: \"signTransaction\",\n    value: function () {\n      var _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tx) {\n        var parsedTx, request, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (this._connected) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                parsedTx = parseTransactionData(tx);\n                request = this._formatRequest({\n                  method: \"eth_signTransaction\",\n                  params: [parsedTx]\n                });\n                _context7.next = 6;\n                return this._sendCallRequest(request);\n\n              case 6:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function signTransaction(_x8) {\n        return _signTransaction.apply(this, arguments);\n      }\n\n      return signTransaction;\n    }()\n  }, {\n    key: \"signMessage\",\n    value: function () {\n      var _signMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(params) {\n        var request, result;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this._connected) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                request = this._formatRequest({\n                  method: \"eth_sign\",\n                  params: params\n                });\n                _context8.next = 5;\n                return this._sendCallRequest(request);\n\n              case 5:\n                result = _context8.sent;\n                return _context8.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function signMessage(_x9) {\n        return _signMessage.apply(this, arguments);\n      }\n\n      return signMessage;\n    }()\n  }, {\n    key: \"signPersonalMessage\",\n    value: function () {\n      var _signPersonalMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n        var request, result;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (this._connected) {\n                  _context9.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                params = parsePersonalSign(params);\n                request = this._formatRequest({\n                  method: \"personal_sign\",\n                  params: params\n                });\n                _context9.next = 6;\n                return this._sendCallRequest(request);\n\n              case 6:\n                result = _context9.sent;\n                return _context9.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function signPersonalMessage(_x10) {\n        return _signPersonalMessage.apply(this, arguments);\n      }\n\n      return signPersonalMessage;\n    }()\n  }, {\n    key: \"signTypedData\",\n    value: function () {\n      var _signTypedData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n        var request, result;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (this._connected) {\n                  _context10.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                request = this._formatRequest({\n                  method: \"eth_signTypedData\",\n                  params: params\n                });\n                _context10.next = 5;\n                return this._sendCallRequest(request);\n\n              case 5:\n                result = _context10.sent;\n                return _context10.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function signTypedData(_x11) {\n        return _signTypedData.apply(this, arguments);\n      }\n\n      return signTypedData;\n    }()\n  }, {\n    key: \"updateChain\",\n    value: function () {\n      var _updateChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(chainParams) {\n        var request, result;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (this._connected) {\n                  _context11.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Session currently disconnected\");\n\n              case 2:\n                request = this._formatRequest({\n                  method: \"wallet_updateChain\",\n                  params: [chainParams]\n                });\n                _context11.next = 5;\n                return this._sendCallRequest(request);\n\n              case 5:\n                result = _context11.sent;\n                return _context11.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateChain(_x12) {\n        return _updateChain.apply(this, arguments);\n      }\n\n      return updateChain;\n    }()\n  }, {\n    key: \"unsafeSend\",\n    value: function unsafeSend(request, options) {\n      var _this3 = this;\n\n      this._sendRequest(request, options);\n\n      this._eventManager.trigger({\n        event: \"call_request_sent\",\n        params: [{\n          request: request,\n          options: options\n        }]\n      });\n\n      return new Promise(function (resolve, reject) {\n        _this3._subscribeToResponse(request.id, function (error, payload) {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          if (!payload) {\n            throw new Error(ERROR_MISSING_JSON_RPC);\n          }\n\n          resolve(payload);\n        });\n      });\n    }\n  }, {\n    key: \"sendCustomRequest\",\n    value: function () {\n      var _sendCustomRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(request, options) {\n        var formattedRequest, result;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (this._connected) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                throw new Error(ERROR_SESSION_DISCONNECTED);\n\n              case 2:\n                _context12.t0 = request.method;\n                _context12.next = _context12.t0 === \"eth_accounts\" ? 5 : _context12.t0 === \"eth_chainId\" ? 6 : _context12.t0 === \"eth_sendTransaction\" ? 7 : _context12.t0 === \"eth_signTransaction\" ? 7 : _context12.t0 === \"personal_sign\" ? 9 : 11;\n                break;\n\n              case 5:\n                return _context12.abrupt(\"return\", this.accounts);\n\n              case 6:\n                return _context12.abrupt(\"return\", convertNumberToHex(this.chainId));\n\n              case 7:\n                if (request.params) {\n                  request.params[0] = parseTransactionData(request.params[0]);\n                }\n\n                return _context12.abrupt(\"break\", 12);\n\n              case 9:\n                if (request.params) {\n                  request.params = parsePersonalSign(request.params);\n                }\n\n                return _context12.abrupt(\"break\", 12);\n\n              case 11:\n                return _context12.abrupt(\"break\", 12);\n\n              case 12:\n                formattedRequest = this._formatRequest(request);\n                _context12.next = 15;\n                return this._sendCallRequest(formattedRequest, options);\n\n              case 15:\n                result = _context12.sent;\n                return _context12.abrupt(\"return\", result);\n\n              case 17:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function sendCustomRequest(_x13, _x14) {\n        return _sendCustomRequest.apply(this, arguments);\n      }\n\n      return sendCustomRequest;\n    }()\n  }, {\n    key: \"approveRequest\",\n    value: function approveRequest(response) {\n      if (isJsonRpcResponseSuccess(response)) {\n        var formattedResponse = this._formatResponse(response);\n\n        this._sendResponse(formattedResponse);\n      } else {\n        throw new Error(ERROR_MISSING_RESULT);\n      }\n    }\n  }, {\n    key: \"rejectRequest\",\n    value: function rejectRequest(response) {\n      if (isJsonRpcResponseError(response)) {\n        var formattedResponse = this._formatResponse(response);\n\n        this._sendResponse(formattedResponse);\n      } else {\n        throw new Error(ERROR_MISSING_ERROR);\n      }\n    }\n  }, {\n    key: \"transportClose\",\n    value: function transportClose() {\n      this._transport.close();\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function () {\n      var _sendRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(request, options) {\n        var callRequest, encryptionPayload, topic, payload, silent;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                callRequest = this._formatRequest(request);\n                _context13.next = 3;\n                return this._encrypt(callRequest);\n\n              case 3:\n                encryptionPayload = _context13.sent;\n                topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n                payload = JSON.stringify(encryptionPayload);\n                silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : isSilentPayload(callRequest);\n\n                this._transport.send(payload, topic, silent);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _sendRequest(_x15, _x16) {\n        return _sendRequest2.apply(this, arguments);\n      }\n\n      return _sendRequest;\n    }()\n  }, {\n    key: \"_sendResponse\",\n    value: function () {\n      var _sendResponse2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(response) {\n        var encryptionPayload, topic, payload, silent;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this._encrypt(response);\n\n              case 2:\n                encryptionPayload = _context14.sent;\n                topic = this.peerId;\n                payload = JSON.stringify(encryptionPayload);\n                silent = true;\n\n                this._transport.send(payload, topic, silent);\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _sendResponse(_x17) {\n        return _sendResponse2.apply(this, arguments);\n      }\n\n      return _sendResponse;\n    }()\n  }, {\n    key: \"_sendSessionRequest\",\n    value: function () {\n      var _sendSessionRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(request, errorMsg, options) {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this._sendRequest(request, options);\n\n                this._subscribeToSessionResponse(request.id, errorMsg);\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _sendSessionRequest(_x18, _x19, _x20) {\n        return _sendSessionRequest2.apply(this, arguments);\n      }\n\n      return _sendSessionRequest;\n    }()\n  }, {\n    key: \"_sendCallRequest\",\n    value: function _sendCallRequest(request, options) {\n      this._sendRequest(request, options);\n\n      this._eventManager.trigger({\n        event: \"call_request_sent\",\n        params: [{\n          request: request,\n          options: options\n        }]\n      });\n\n      return this._subscribeToCallResponse(request.id);\n    }\n  }, {\n    key: \"_formatRequest\",\n    value: function _formatRequest(request) {\n      if (typeof request.method === \"undefined\") {\n        throw new Error(ERROR_MISSING_METHOD);\n      }\n\n      var formattedRequest = {\n        id: typeof request.id === \"undefined\" ? payloadId() : request.id,\n        jsonrpc: \"2.0\",\n        method: request.method,\n        params: typeof request.params === \"undefined\" ? [] : request.params\n      };\n      return formattedRequest;\n    }\n  }, {\n    key: \"_formatResponse\",\n    value: function _formatResponse(response) {\n      if (typeof response.id === \"undefined\") {\n        throw new Error(ERROR_MISSING_ID);\n      }\n\n      var baseResponse = {\n        id: response.id,\n        jsonrpc: \"2.0\"\n      };\n\n      if (isJsonRpcResponseError(response)) {\n        var error = formatRpcError(response.error);\n        var errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n          error: error\n        });\n        return errorResponse;\n      } else if (isJsonRpcResponseSuccess(response)) {\n        var successResponse = Object.assign(Object.assign({}, baseResponse), response);\n        return successResponse;\n      }\n\n      throw new Error(ERROR_INVALID_RESPONSE);\n    }\n  }, {\n    key: \"_handleSessionDisconnect\",\n    value: function _handleSessionDisconnect(errorMsg) {\n      var message = errorMsg || \"Session Disconnected\";\n\n      if (!this._connected) {\n        if (this._qrcodeModal) {\n          this._qrcodeModal.close();\n        }\n\n        removeLocal(mobileLinkChoiceKey);\n      }\n\n      if (this._connected) {\n        this._connected = false;\n      }\n\n      if (this._handshakeId) {\n        this._handshakeId = 0;\n      }\n\n      if (this._handshakeTopic) {\n        this._handshakeTopic = \"\";\n      }\n\n      if (this._peerId) {\n        this._peerId = \"\";\n      }\n\n      this._eventManager.trigger({\n        event: \"disconnect\",\n        params: [{\n          message: message\n        }]\n      });\n\n      this._removeStorageSession();\n\n      this.transportClose();\n    }\n  }, {\n    key: \"_handleSessionResponse\",\n    value: function _handleSessionResponse(errorMsg, sessionParams) {\n      if (sessionParams) {\n        if (sessionParams.approved) {\n          if (!this._connected) {\n            this._connected = true;\n\n            if (sessionParams.chainId) {\n              this.chainId = sessionParams.chainId;\n            }\n\n            if (sessionParams.accounts) {\n              this.accounts = sessionParams.accounts;\n            }\n\n            if (sessionParams.peerId && !this.peerId) {\n              this.peerId = sessionParams.peerId;\n            }\n\n            if (sessionParams.peerMeta && !this.peerMeta) {\n              this.peerMeta = sessionParams.peerMeta;\n            }\n\n            this._eventManager.trigger({\n              event: \"connect\",\n              params: [{\n                peerId: this.peerId,\n                peerMeta: this.peerMeta,\n                chainId: this.chainId,\n                accounts: this.accounts\n              }]\n            });\n          } else {\n            if (sessionParams.chainId) {\n              this.chainId = sessionParams.chainId;\n            }\n\n            if (sessionParams.accounts) {\n              this.accounts = sessionParams.accounts;\n            }\n\n            this._eventManager.trigger({\n              event: \"session_update\",\n              params: [{\n                chainId: this.chainId,\n                accounts: this.accounts\n              }]\n            });\n          }\n\n          this._manageStorageSession();\n        } else {\n          this._handleSessionDisconnect(errorMsg);\n        }\n      } else {\n        this._handleSessionDisconnect(errorMsg);\n      }\n    }\n  }, {\n    key: \"_handleIncomingMessages\",\n    value: function () {\n      var _handleIncomingMessages2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(socketMessage) {\n        var activeTopics, encryptionPayload, payload;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                activeTopics = [this.clientId, this.handshakeTopic];\n\n                if (activeTopics.includes(socketMessage.topic)) {\n                  _context16.next = 3;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\");\n\n              case 3:\n                _context16.prev = 3;\n                encryptionPayload = JSON.parse(socketMessage.payload);\n                _context16.next = 10;\n                break;\n\n              case 7:\n                _context16.prev = 7;\n                _context16.t0 = _context16[\"catch\"](3);\n                return _context16.abrupt(\"return\");\n\n              case 10:\n                _context16.next = 12;\n                return this._decrypt(encryptionPayload);\n\n              case 12:\n                payload = _context16.sent;\n\n                if (payload) {\n                  this._eventManager.trigger(payload);\n                }\n\n              case 14:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[3, 7]]);\n      }));\n\n      function _handleIncomingMessages(_x21) {\n        return _handleIncomingMessages2.apply(this, arguments);\n      }\n\n      return _handleIncomingMessages;\n    }()\n  }, {\n    key: \"_subscribeToSessionRequest\",\n    value: function _subscribeToSessionRequest() {\n      this._transport.subscribe(this.handshakeTopic);\n    }\n  }, {\n    key: \"_subscribeToResponse\",\n    value: function _subscribeToResponse(id, callback) {\n      this.on(\"response:\".concat(id), callback);\n    }\n  }, {\n    key: \"_subscribeToSessionResponse\",\n    value: function _subscribeToSessionResponse(id, errorMsg) {\n      var _this4 = this;\n\n      this._subscribeToResponse(id, function (error, payload) {\n        if (error) {\n          _this4._handleSessionResponse(error.message);\n\n          return;\n        }\n\n        if (payload.result) {\n          _this4._handleSessionResponse(errorMsg, payload.result);\n        } else if (payload.error && payload.error.message) {\n          _this4._handleSessionResponse(payload.error.message);\n        } else {\n          _this4._handleSessionResponse(errorMsg);\n        }\n      });\n    }\n  }, {\n    key: \"_subscribeToCallResponse\",\n    value: function _subscribeToCallResponse(id) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5._subscribeToResponse(id, function (error, payload) {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          if (payload.result) {\n            resolve(payload.result);\n          } else if (payload.error && payload.error.message) {\n            reject(new Error(payload.error.message));\n          } else {\n            reject(new Error(ERROR_INVALID_RESPONSE));\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_subscribeToInternalEvents\",\n    value: function _subscribeToInternalEvents() {\n      var _this6 = this;\n\n      this.on(\"display_uri\", function () {\n        if (_this6._qrcodeModal) {\n          _this6._qrcodeModal.open(_this6.uri, function () {\n            _this6._eventManager.trigger({\n              event: \"modal_closed\",\n              params: []\n            });\n          }, _this6._qrcodeModalOptions);\n        }\n      });\n      this.on(\"connect\", function () {\n        if (_this6._qrcodeModal) {\n          _this6._qrcodeModal.close();\n        }\n      });\n      this.on(\"call_request_sent\", function (error, payload) {\n        var request = payload.params[0].request;\n\n        if (isMobile() && _this6._signingMethods.includes(request.method)) {\n          var mobileLinkUrl = getLocal(mobileLinkChoiceKey);\n\n          if (mobileLinkUrl) {\n            window.location.href = mobileLinkUrl.href;\n          }\n        }\n      });\n      this.on(\"wc_sessionRequest\", function (error, payload) {\n        if (error) {\n          _this6._eventManager.trigger({\n            event: \"error\",\n            params: [{\n              code: \"SESSION_REQUEST_ERROR\",\n              message: error.toString()\n            }]\n          });\n        }\n\n        _this6.handshakeId = payload.id;\n        _this6.peerId = payload.params[0].peerId;\n        _this6.peerMeta = payload.params[0].peerMeta;\n        var internalPayload = Object.assign(Object.assign({}, payload), {\n          method: \"session_request\"\n        });\n\n        _this6._eventManager.trigger(internalPayload);\n      });\n      this.on(\"wc_sessionUpdate\", function (error, payload) {\n        if (error) {\n          _this6._handleSessionResponse(error.message);\n        }\n\n        _this6._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n      });\n    }\n  }, {\n    key: \"_initTransport\",\n    value: function _initTransport() {\n      var _this7 = this;\n\n      this._transport.on(\"message\", function (socketMessage) {\n        return _this7._handleIncomingMessages(socketMessage);\n      });\n\n      this._transport.on(\"open\", function () {\n        return _this7._eventManager.trigger({\n          event: \"transport_open\",\n          params: []\n        });\n      });\n\n      this._transport.on(\"close\", function () {\n        return _this7._eventManager.trigger({\n          event: \"transport_close\",\n          params: []\n        });\n      });\n\n      this._transport.on(\"error\", function () {\n        return _this7._eventManager.trigger({\n          event: \"transport_error\",\n          params: [\"Websocket connection failed\"]\n        });\n      });\n\n      this._transport.open();\n    }\n  }, {\n    key: \"_formatUri\",\n    value: function _formatUri() {\n      var protocol = this.protocol;\n      var handshakeTopic = this.handshakeTopic;\n      var version = this.version;\n      var bridge = encodeURIComponent(this.bridge);\n      var key = this.key;\n      var uri = \"\".concat(protocol, \":\").concat(handshakeTopic, \"@\").concat(version, \"?bridge=\").concat(bridge, \"&key=\").concat(key);\n      return uri;\n    }\n  }, {\n    key: \"_parseUri\",\n    value: function _parseUri(uri) {\n      var result = parseWalletConnectUri(uri);\n\n      if (result.protocol === this.protocol) {\n        if (!result.handshakeTopic) {\n          throw Error(\"Invalid or missing handshakeTopic parameter value\");\n        }\n\n        var handshakeTopic = result.handshakeTopic;\n\n        if (!result.bridge) {\n          throw Error(\"Invalid or missing bridge url parameter value\");\n        }\n\n        var bridge = decodeURIComponent(result.bridge);\n\n        if (!result.key) {\n          throw Error(\"Invalid or missing key parameter value\");\n        }\n\n        var key = result.key;\n        return {\n          handshakeTopic: handshakeTopic,\n          bridge: bridge,\n          key: key\n        };\n      } else {\n        throw new Error(ERROR_INVALID_URI);\n      }\n    }\n  }, {\n    key: \"_generateKey\",\n    value: function () {\n      var _generateKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (!this._cryptoLib) {\n                  _context17.next = 5;\n                  break;\n                }\n\n                _context17.next = 3;\n                return this._cryptoLib.generateKey();\n\n              case 3:\n                result = _context17.sent;\n                return _context17.abrupt(\"return\", result);\n\n              case 5:\n                return _context17.abrupt(\"return\", null);\n\n              case 6:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _generateKey() {\n        return _generateKey2.apply(this, arguments);\n      }\n\n      return _generateKey;\n    }()\n  }, {\n    key: \"_encrypt\",\n    value: function () {\n      var _encrypt2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(data) {\n        var key, result;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                key = this._key;\n\n                if (!(this._cryptoLib && key)) {\n                  _context18.next = 6;\n                  break;\n                }\n\n                _context18.next = 4;\n                return this._cryptoLib.encrypt(data, key);\n\n              case 4:\n                result = _context18.sent;\n                return _context18.abrupt(\"return\", result);\n\n              case 6:\n                return _context18.abrupt(\"return\", null);\n\n              case 7:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function _encrypt(_x22) {\n        return _encrypt2.apply(this, arguments);\n      }\n\n      return _encrypt;\n    }()\n  }, {\n    key: \"_decrypt\",\n    value: function () {\n      var _decrypt2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(payload) {\n        var key, result;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                key = this._key;\n\n                if (!(this._cryptoLib && key)) {\n                  _context19.next = 6;\n                  break;\n                }\n\n                _context19.next = 4;\n                return this._cryptoLib.decrypt(payload, key);\n\n              case 4:\n                result = _context19.sent;\n                return _context19.abrupt(\"return\", result);\n\n              case 6:\n                return _context19.abrupt(\"return\", null);\n\n              case 7:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function _decrypt(_x23) {\n        return _decrypt2.apply(this, arguments);\n      }\n\n      return _decrypt;\n    }()\n  }, {\n    key: \"_getStorageSession\",\n    value: function _getStorageSession() {\n      var result = null;\n\n      if (this._sessionStorage) {\n        result = this._sessionStorage.getSession();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_setStorageSession\",\n    value: function _setStorageSession() {\n      if (this._sessionStorage) {\n        this._sessionStorage.setSession(this.session);\n      }\n    }\n  }, {\n    key: \"_removeStorageSession\",\n    value: function _removeStorageSession() {\n      if (this._sessionStorage) {\n        this._sessionStorage.removeSession();\n      }\n    }\n  }, {\n    key: \"_manageStorageSession\",\n    value: function _manageStorageSession() {\n      if (this._connected) {\n        this._setStorageSession();\n      } else {\n        this._removeStorageSession();\n      }\n    }\n  }, {\n    key: \"_registerPushServer\",\n    value: function _registerPushServer(pushServerOpts) {\n      if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n        throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n      }\n\n      if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n        throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n      }\n\n      if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n        throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n      }\n\n      var pushSubscription = {\n        bridge: this.bridge,\n        topic: this.clientId,\n        type: pushServerOpts.type,\n        token: pushServerOpts.token,\n        peerName: \"\",\n        language: pushServerOpts.language || \"\"\n      };\n      this.on(\"connect\", /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(error, payload) {\n          var peerName, response, json;\n          return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n            while (1) {\n              switch (_context20.prev = _context20.next) {\n                case 0:\n                  if (!error) {\n                    _context20.next = 2;\n                    break;\n                  }\n\n                  throw error;\n\n                case 2:\n                  if (pushServerOpts.peerMeta) {\n                    peerName = payload.params[0].peerMeta.name;\n                    pushSubscription.peerName = peerName;\n                  }\n\n                  _context20.prev = 3;\n                  _context20.next = 6;\n                  return fetch(\"\".concat(pushServerOpts.url, \"/new\"), {\n                    method: \"POST\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(pushSubscription)\n                  });\n\n                case 6:\n                  response = _context20.sent;\n                  _context20.next = 9;\n                  return response.json();\n\n                case 9:\n                  json = _context20.sent;\n\n                  if (json.success) {\n                    _context20.next = 12;\n                    break;\n                  }\n\n                  throw Error(\"Failed to register in Push Server\");\n\n                case 12:\n                  _context20.next = 17;\n                  break;\n\n                case 14:\n                  _context20.prev = 14;\n                  _context20.t0 = _context20[\"catch\"](3);\n                  throw Error(\"Failed to register in Push Server\");\n\n                case 17:\n                case \"end\":\n                  return _context20.stop();\n              }\n            }\n          }, _callee20, null, [[3, 14]]);\n        }));\n\n        return function (_x24, _x25) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n\n  return Connector;\n}();\n\nexport default Connector;","map":{"version":3,"mappings":"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","names":["parsePersonalSign","parseTransactionData","convertArrayBufferToHex","convertHexToArrayBuffer","getClientMeta","payloadId","uuid","formatRpcError","parseWalletConnectUri","convertNumberToHex","isJsonRpcResponseSuccess","isJsonRpcResponseError","isSilentPayload","getLocal","signingMethods","mobileLinkChoiceKey","isMobile","removeLocal","SocketTransport","ERROR_SESSION_CONNECTED","ERROR_SESSION_DISCONNECTED","ERROR_SESSION_REJECTED","ERROR_MISSING_JSON_RPC","ERROR_MISSING_RESULT","ERROR_MISSING_ERROR","ERROR_MISSING_METHOD","ERROR_MISSING_ID","ERROR_INVALID_RESPONSE","ERROR_INVALID_URI","ERROR_MISSING_REQUIRED","ERROR_QRCODE_MODAL_NOT_PROVIDED","ERROR_QRCODE_MODAL_USER_CLOSED","EventManager","SessionStorage","getBridgeUrl","Connector","opts","_clientMeta","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","storageId","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","_signingMethods","bridge","uri","session","Error","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","protocol","version","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","_bridge","value","_key","key","_clientId","_peerId","peerMeta","_peerMeta","_handshakeTopic","_handshakeId","_uri","_formatUri","_parseUri","handshakeTopic","chainId","_chainId","networkId","_networkId","accounts","_accounts","rpcUrl","_rpcUrl","_connected","connected","peerId","event","callback","eventEmitter","_eventManager","subscribe","unsubscribe","instantRequest","_generateKey","request","_formatRequest","method","params","id","trigger","on","endInstantRequest","killSession","_sendCallRequest","result","createSession","Promise","resolve","reject","error","payload","pending","_sendSessionRequest","topic","sessionStatus","sessionParams","approved","response","jsonrpc","_sendResponse","_setStorageSession","sessionError","message","_formatResponse","_removeStorageSession","_manageStorageSession","_sendRequest","_handleSessionDisconnect","tx","parsedTx","chainParams","options","_subscribeToResponse","formattedRequest","formattedResponse","close","callRequest","_encrypt","encryptionPayload","JSON","stringify","silent","forcePushNotification","send","errorMsg","_subscribeToCallResponse","baseResponse","errorResponse","successResponse","transportClose","socketMessage","activeTopics","includes","parse","_decrypt","_handleSessionResponse","open","mobileLinkUrl","window","location","href","code","toString","internalPayload","_handleIncomingMessages","encodeURIComponent","decodeURIComponent","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","fetch","headers","Accept","body","json","success"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}