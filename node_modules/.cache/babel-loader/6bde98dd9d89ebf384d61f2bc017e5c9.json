{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchToCeloNetwork = exports.addNetworksToMetamask = exports.addNetworkToMetamask = exports.addTokensToMetamask = exports.makeAddCeloTokensParams = exports.tokenToParam = exports.makeNetworkParams = exports.MetamaskRPCErrorCode = void 0;\n\nvar contractkit_1 = require(\"@celo/contractkit\");\n\nvar web3_1 = __importDefault(require(\"web3\"));\n\nvar constants_1 = require(\"../constants\");\n\nvar types_1 = require(\"../types\");\n\nvar CELO_PARAMS = Object.freeze({\n  chainName: 'Celo',\n  testnet: false,\n  nativeCurrency: {\n    name: 'CELO'\n  }\n});\nvar ALFAJORES_PARAMS = Object.freeze({\n  chainName: 'Alfajores Testnet',\n  testnet: true,\n  nativeCurrency: {\n    name: 'A-CELO'\n  }\n});\nvar BAKLAVA_PARAMS = Object.freeze({\n  chainName: 'Baklava Testnet',\n  testnet: true,\n  nativeCurrency: {\n    name: 'B-CELO'\n  }\n});\nvar params = (_a = {}, _a[types_1.ChainId.Mainnet] = CELO_PARAMS, _a[types_1.ChainId.Alfajores] = ALFAJORES_PARAMS, _a[types_1.ChainId.Baklava] = BAKLAVA_PARAMS, _a);\nvar NETWORKS = (_b = {}, _b[types_1.ChainId.Mainnet] = constants_1.Mainnet, _b[types_1.ChainId.Alfajores] = constants_1.Alfajores, _b[types_1.ChainId.Baklava] = constants_1.Baklava, _b);\nvar MetamaskRPCErrorCode;\n\n(function (MetamaskRPCErrorCode) {\n  MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"AwaitingUserConfirmation\"] = -32002] = \"AwaitingUserConfirmation\";\n  MetamaskRPCErrorCode[MetamaskRPCErrorCode[\"UnknownNetwork\"] = 4902] = \"UnknownNetwork\";\n})(MetamaskRPCErrorCode = exports.MetamaskRPCErrorCode || (exports.MetamaskRPCErrorCode = {}));\n\nvar makeNetworkParams = function makeNetworkParams(info, CELO) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([CELO.symbol(), CELO.decimals()])];\n\n        case 1:\n          _a = __read.apply(void 0, [_c.sent(), 2]), symbol = _a[0], decimals = _a[1];\n          return [2\n          /*return*/\n          , {\n            chainId: \"0x\".concat(info.chainId.toString(16)),\n            chainName: (_b = params[info.chainId].chainName) !== null && _b !== void 0 ? _b : info.name,\n            nativeCurrency: {\n              name: params[info.chainId].nativeCurrency.name,\n              symbol: symbol,\n              decimals: decimals\n            },\n            rpcUrls: [info.rpcUrl],\n            blockExplorerUrls: [info.explorer],\n            iconUrls: [\"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\")] // unfortunately unused\n\n          }];\n      }\n    });\n  });\n};\n\nexports.makeNetworkParams = makeNetworkParams;\n\nvar tokenToParam = function tokenToParam(token) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, symbol, decimals, name;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all([token.symbol(), token.decimals(), token.name()])];\n\n        case 1:\n          _a = __read.apply(void 0, [_b.sent(), 3]), symbol = _a[0], decimals = _a[1], name = _a[2];\n          return [2\n          /*return*/\n          , {\n            type: 'ERC20',\n            options: {\n              address: token.address,\n              name: name,\n              symbol: symbol,\n              decimals: decimals,\n              image: \"https://celoreserve.org/assets/tokens/\".concat(symbol, \".svg\")\n            }\n          }];\n      }\n    });\n  });\n};\n\nexports.tokenToParam = tokenToParam;\n\nvar makeAddCeloTokensParams = function makeAddCeloTokensParams(tokens) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , Promise.all(Object.values(tokens).map(exports.tokenToParam))];\n    });\n  });\n};\n\nexports.makeAddCeloTokensParams = makeAddCeloTokensParams;\n\nvar addTokensToMetamask = function addTokensToMetamask(ethereum, tokens) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var tokenParams, added;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, exports.makeAddCeloTokensParams)(tokens)];\n\n        case 1:\n          tokenParams = _a.sent();\n          return [4\n          /*yield*/\n          , Promise.all(tokenParams.map(function (params) {\n            return ethereum === null || ethereum === void 0 ? void 0 : ethereum.request({\n              method: 'wallet_watchAsset',\n              params: params\n            });\n          }))];\n\n        case 2:\n          added = _a.sent().every(Boolean);\n          return [2\n          /*return*/\n          , added];\n      }\n    });\n  });\n};\n\nexports.addTokensToMetamask = addTokensToMetamask;\n\nvar addNetworkToMetamask = function addNetworkToMetamask(ethereum, networkConfig) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, CELO, tokens, _b, _c, _d, err_1, code;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, contractkit_1.newKit)(networkConfig.rpcUrl).celoTokens.getWrappers()];\n\n        case 1:\n          _a = _f.sent(), CELO = _a.CELO, tokens = __rest(_a, [\"CELO\"]);\n\n          if (!CELO) {\n            throw new Error(\"Couldnt fetch CELO information for \".concat(networkConfig.name, \". Something's wrong\"));\n          }\n\n          _f.label = 2;\n\n        case 2:\n          _f.trys.push([2, 8,, 9]);\n\n          if (!(ethereum === null || ethereum === void 0)) return [3\n          /*break*/\n          , 3];\n          _b = void 0;\n          return [3\n          /*break*/\n          , 5];\n\n        case 3:\n          _d = (_c = ethereum).request;\n          _e = {\n            method: 'wallet_addEthereumChain'\n          };\n          return [4\n          /*yield*/\n          , (0, exports.makeNetworkParams)(networkConfig, CELO)];\n\n        case 4:\n          _b = _d.apply(_c, [(_e.params = [_f.sent()], _e)]);\n          _f.label = 5;\n\n        case 5:\n          return [4\n          /*yield*/\n          , _b];\n\n        case 6:\n          _f.sent();\n\n          return [4\n          /*yield*/\n          , (0, exports.addTokensToMetamask)(ethereum, tokens)];\n\n        case 7:\n          _f.sent();\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          err_1 = _f.sent();\n          code = err_1.code;\n\n          if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n            // user has already been requested to add the network\n            // maybe add a user CTA\n            throw new Error(\"Please check your Metamask window to add \".concat(networkConfig.name, \" to Metamask\"));\n          } else {\n            throw err_1;\n          }\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 9:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexports.addNetworkToMetamask = addNetworkToMetamask;\n\nfunction addNetworksToMetamask(ethereum) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , Promise.all(Object.values(NETWORKS).map(function (network) {\n            return (0, exports.addNetworkToMetamask)(ethereum, network);\n          }))];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.addNetworksToMetamask = addNetworksToMetamask;\n\nfunction switchToCeloNetwork(kit, network, ethereum) {\n  return __awaiter(this, void 0, void 0, function () {\n    var web3, chainId, err_2, code;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          web3 = new web3_1.default(ethereum);\n          return [4\n          /*yield*/\n          , web3.eth.getChainId()];\n\n        case 1:\n          chainId = _a.sent();\n          if (!(network.chainId !== chainId)) return [3\n          /*break*/\n          , 8];\n          _a.label = 2;\n\n        case 2:\n          _a.trys.push([2, 4,, 8]);\n\n          return [4\n          /*yield*/\n          , ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: \"0x\".concat(network.chainId.toString(16))\n            }]\n          })];\n\n        case 3:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 4:\n          err_2 = _a.sent();\n          code = err_2.code;\n          if (!(code === MetamaskRPCErrorCode.UnknownNetwork)) return [3\n          /*break*/\n          , 6]; // ChainId not yet added to metamask\n\n          return [4\n          /*yield*/\n          , (0, exports.addNetworkToMetamask)(ethereum, network)];\n\n        case 5:\n          // ChainId not yet added to metamask\n          _a.sent();\n\n          return [2\n          /*return*/\n          , switchToCeloNetwork(kit, network, ethereum)];\n\n        case 6:\n          if (code === MetamaskRPCErrorCode.AwaitingUserConfirmation) {\n            // user has already been requested to switch the network\n            return [2\n            /*return*/\n            ];\n          } else {\n            throw err_2;\n          }\n\n          _a.label = 7;\n\n        case 7:\n          return [3\n          /*break*/\n          , 8];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.switchToCeloNetwork = switchToCeloNetwork;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAEA;;AAEA;;AAEA,IAAMA,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc;AAChCC,WAAS,EAAE,MADqB;AAEhCC,SAAO,EAAE,KAFuB;AAGhCC,gBAAc,EAAE;AACdC,QAAI,EAAE;AADQ;AAHgB,CAAd,CAApB;AAQA,IAAMC,gBAAgB,GAAGN,MAAM,CAACC,MAAP,CAAc;AACrCC,WAAS,EAAE,mBAD0B;AAErCC,SAAO,EAAE,IAF4B;AAGrCC,gBAAc,EAAE;AACdC,QAAI,EAAE;AADQ;AAHqB,CAAd,CAAzB;AAQA,IAAME,cAAc,GAAGP,MAAM,CAACC,MAAP,CAAc;AACnCC,WAAS,EAAE,iBADwB;AAEnCC,SAAO,EAAE,IAF0B;AAGnCC,gBAAc,EAAE;AACdC,QAAI,EAAE;AADQ;AAHmB,CAAd,CAAvB;AAQA,IAAMG,MAAM,aACVC,GAACC,gBAAQC,OAAT,IAAmBZ,WADT,EAEVU,GAACC,gBAAQE,SAAT,IAAqBN,gBAFX,EAGVG,GAACC,gBAAQG,OAAT,IAAmBN,cAHT,KAAZ;AAMA,IAAMO,QAAQ,aACZC,GAACL,gBAAQC,OAAT,IAAmBK,mBADP,EAEZD,GAACL,gBAAQE,SAAT,IAAqBI,qBAFT,EAGZD,GAACL,gBAAQG,OAAT,IAAmBG,mBAHP,KAAd;AAoCA,IAAYC,oBAAZ;;AAAA,WAAYA,oBAAZ,EAAgC;AAC9BA;AACAA;AACD,CAHD,EAAYA,oBAAoB,GAApBC,gEAAoB,EAApB,CAAZ;;AAWO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,IAD+B,EAE/BC,IAF+B,EAET;AAAA;;;;;;;;AAEK;AAAA;AAAA,YAAMC,OAAO,CAACC,GAAR,CAAY,CAC3CF,IAAI,CAACG,MAAL,EAD2C,EAE3CH,IAAI,CAACI,QAAL,EAF2C,CAAZ,CAAN;;;AAArBhB,qCAAqBiB,SAArB,EAGJ,CAHI,IAACF,MAAM,QAAP,EAASC,QAAQ,QAAjB;AAKN;AAAA;AAAA,YAAO;AACLE,mBAAO,EAAE,YAAKP,IAAI,CAACO,OAAL,CAAaC,QAAb,CAAsB,EAAtB,CAAL,CADJ;AAEL1B,qBAAS,EAAE,YAAM,CAACkB,IAAI,CAACO,OAAN,CAAN,CAAqBzB,SAArB,MAA8B,IAA9B,IAA8Ba,aAA9B,GAA8BA,EAA9B,GAAkCK,IAAI,CAACf,IAF7C;AAGLD,0BAAc,EAAE;AACdC,kBAAI,EAAEG,MAAM,CAACY,IAAI,CAACO,OAAN,CAAN,CAAqBvB,cAArB,CAAoCC,IAD5B;AAEdmB,oBAAM,QAFQ;AAGdC,sBAAQ;AAHM,aAHX;AAQLI,mBAAO,EAAE,CAACT,IAAI,CAACU,MAAN,CARJ;AASLC,6BAAiB,EAAE,CAACX,IAAI,CAACY,QAAN,CATd;AAULC,oBAAQ,EAAE,CAAC,gDAAyCT,MAAzC,EAA+C,MAA/C,CAAD,CAVL,CAU8D;;AAV9D,WAAP;;;GAPsB;AAmBvB,CArBM;;AAAMN,4BAAiBC,iBAAjB;;AAuBN,IAAMe,YAAY,GAAG,SAAfA,YAAe,CAC1BC,KAD0B,EACkB;AAAA;;;;;;AAEX;AAAA;AAAA,YAAMb,OAAO,CAACC,GAAR,CAAY,CACjDY,KAAK,CAACX,MAAN,EADiD,EAEjDW,KAAK,CAACV,QAAN,EAFiD,EAGjDU,KAAK,CAAC9B,IAAN,EAHiD,CAAZ,CAAN;;;AAA3BI,qCAA2BM,SAA3B,EAIJ,CAJI,IAACS,MAAM,QAAP,EAASC,QAAQ,QAAjB,EAAmBpB,IAAI,QAAvB;AAMN;AAAA;AAAA,YAAO;AACL+B,gBAAI,EAAE,OADD;AAELC,mBAAO,EAAE;AACPC,qBAAO,EAAEH,KAAK,CAACG,OADR;AAEPjC,kBAAI,MAFG;AAGPmB,oBAAM,QAHC;AAIPC,sBAAQ,UAJD;AAKPc,mBAAK,EAAE,gDAAyCf,MAAzC,EAA+C,MAA/C;AALA;AAFJ,WAAP;;;GAR4C;AAkB7C,CAnBM;;AAAMN,uBAAYgB,YAAZ;;AAqBN,IAAMM,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrCC,MADqC,EACjB;AAAA;AAAA;AAEpB;AAAA;AAAA,eAAO,CAAClB,GAAR,CAAYvB,MAAM,CAAC0C,MAAP,CAAcD,MAAd,EAAsBE,GAAtB,CAA0BzB,oBAA1B,CAAZ;KAFoB;GAAA;AAEgC,CAH/C;;AAAMA,kCAAuBsB,uBAAvB;;AAKN,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,QADiC,EAEjCJ,MAFiC,EAEb;AAAA;;;;;AAEA;AAAA;AAAA,YAAM,qCAAwBA,MAAxB,CAAN;;;AAAdK,qBAAW,GAAGrC,SAAd;AAEJ;AAAA;AAAA,YAAMa,OAAO,CAACC,GAAR,CACJuB,WAAW,CAACH,GAAZ,CAAgB,UAACnC,MAAD,EAAO;AACrB,2BAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEuC,OAAV,CAAkB;AAChBC,oBAAM,EAAE,mBADQ;AAEhBxC,oBAAM;AAFU,aAAlB;AAGE,WAJJ,CADI,CAAN;;;AADIyC,eAAK,GACTxC,SADY,CASZyC,KATY,CASNC,OATM,CAAR;AAWN;AAAA;AAAA,YAAOF,KAAP;;;GAdoB;AAerB,CAjBM;;AAAM/B,8BAAmB0B,mBAAnB;;AAmBN,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCP,QADkC,EAElCQ,aAFkC,EAEZ;AAAA;;;;;;;;AAEO;AAAA;AAAA,YAAM,0BACjCA,aAAa,CAACvB,MADmB,EAEjCwB,UAFiC,CAEtBC,WAFsB,EAAN;;;AAAvB9C,eAAuB+C,SAAvB,EAAEnC,IAAI,UAAN,EAAWoB,MAAM,cAAjB,QAAiB,CAAjB;;AAIN,cAAI,CAACpB,IAAL,EAAW;AACT,kBAAM,IAAIoC,KAAJ,CACJ,6CAAsCJ,aAAa,CAAChD,IAApD,EAAwD,qBAAxD,CADI,CAAN;AAGD;;;;;;;gBAGOwC,QAAQ,SAAR,YAAQ;AAAA;AAAA;;;;;;;eAAR,gBAAUE;;AACdC,kBAAM,EAAE;;AACC;AAAA;AAAA,YAAM,+BAAkBK,aAAlB,EAAiChC,IAAjC,CAAN;;;8BAATqC,YAAM,CAAGF,SAAH,CAAN;;;;AAFF;AAAA;AAAA,YAAMzC,EAAN;;;AAAAyC;;AAKA;AAAA;AAAA,YAAM,iCAAoBX,QAApB,EAA8BJ,MAA9B,CAAN;;;AAAAe;;;;;;;;AAEQG,cAAI,GAAKC,KAAuB,KAAhC;;AACR,cAAID,IAAI,KAAK1C,oBAAoB,CAAC4C,wBAAlC,EAA4D;AAC1D;AACA;AACA,kBAAM,IAAIJ,KAAJ,CACJ,mDAA4CJ,aAAa,CAAChD,IAA1D,EAA8D,cAA9D,CADI,CAAN;AAGD,WAND,MAMO;AACL,kBAAMuD,KAAN;AACD;;;;;;;;;;;;GA7BmB;AA+BvB,CAjCM;;AAAM1C,+BAAoBkC,oBAApB;;AAmCb,SAAsBU,qBAAtB,CAA4CjB,QAA5C,EAA8D;;;;;AAC5D;AAAA;AAAA,YAAMvB,OAAO,CAACC,GAAR,CACJvB,MAAM,CAAC0C,MAAP,CAAc5B,QAAd,EAAwB6B,GAAxB,CAA4B,UAACoB,OAAD,EAAQ;AAClC,qDAAqBlB,QAArB,EAA+BkB,OAA/B;AAAuC,WADzC,CADI,CAAN;;;AAAAtD;;;;;;;;AAKD;;AANDS;;AAQA,SAAsB8C,mBAAtB,CACEC,GADF,EAEEF,OAFF,EAGElB,QAHF,EAGoB;;;;;;AAEZqB,cAAI,GAAG,IAAIC,cAAJ,CAAStB,QAAT,CAAP;AACU;AAAA;AAAA,YAAMqB,IAAI,CAACE,GAAL,CAASC,UAAT,EAAN;;;AAAV1C,iBAAO,GAAGlB,SAAV;gBAEFsD,OAAO,CAACpC,OAAR,KAAoBA,UAApB;AAAA;AAAA;;;;;;AAEA;AAAA;AAAA,YAAMkB,QAAQ,CAACE,OAAT,CAAiB;AACrBC,kBAAM,EAAE,4BADa;AAErBxC,kBAAM,EAAE,CACN;AACEmB,qBAAO,EAAE,YAAKoC,OAAO,CAACpC,OAAR,CAAgBC,QAAhB,CAAyB,EAAzB,CAAL;AADX,aADM;AAFa,WAAjB,CAAN;;;AAAAnB;;;;;;;;AASQkD,cAAI,GAAKW,KAAuB,KAAhC;gBACJX,IAAI,KAAK1C,oBAAoB,CAACsD,iBAA9B;AAAA;AAAA,gBACF;;AACA;AAAA;AAAA,YAAM,kCAAqB1B,QAArB,EAA+BkB,OAA/B,CAAN;;;AADA;AACAtD;;AACA;AAAA;AAAA,YAAOuD,mBAAmB,CAACC,GAAD,EAAMF,OAAN,EAAelB,QAAf,CAA1B;;;AACK,cAAIc,IAAI,KAAK1C,oBAAoB,CAAC4C,wBAAlC,EAA4D;AACjE;AACA;AAAA;AAAA;AACD,WAHM,MAGA;AACL,kBAAMS,KAAN;AACD;;;;;;;;;;;;;;;;AAGN;;AAhCDpD","names":["CELO_PARAMS","Object","freeze","chainName","testnet","nativeCurrency","name","ALFAJORES_PARAMS","BAKLAVA_PARAMS","params","_a","types_1","Mainnet","Alfajores","Baklava","NETWORKS","_b","constants_1","MetamaskRPCErrorCode","exports","makeNetworkParams","info","CELO","Promise","all","symbol","decimals","_c","chainId","toString","rpcUrls","rpcUrl","blockExplorerUrls","explorer","iconUrls","tokenToParam","token","type","options","address","image","makeAddCeloTokensParams","tokens","values","map","addTokensToMetamask","ethereum","tokenParams","request","method","added","every","Boolean","addNetworkToMetamask","networkConfig","celoTokens","getWrappers","_f","Error","_e","code","err_1","AwaitingUserConfirmation","addNetworksToMetamask","network","switchToCeloNetwork","kit","web3","web3_1","eth","getChainId","err_2","UnknownNetwork"],"sourceRoot":"","sources":["../../src/utils/metamask.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}