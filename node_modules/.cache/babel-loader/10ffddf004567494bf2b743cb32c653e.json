{"ast":null,"code":"var _jsxFileName = \"/Users/crypto/GETSCHWIFTY/src/pages/create/Create.jsx\",\n    _s = $RefreshSig$();\n\nimport './create.css';\nimport Image from '../../assets/Image.png';\nimport { useEffect, useState } from \"react\";\nimport { create as ipfsHttpClient } from 'ipfs-http-client';\nimport { useMarketContract } from \"../../hooks/useMarketContract\";\nimport { BigNumber, ethers } from \"ethers\";\nimport CircleLoader from \"react-spinners/ClipLoader\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');\n\nconst Create = () => {\n  _s();\n\n  const {\n    address,\n    connect,\n    performActions\n  } = useContractKit();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!address) {\n      (async () => {\n        await connect();\n      })();\n    }\n  }, [address, connect]);\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState('');\n  const [price, setPrice] = useState(null);\n  const [category, setCategory] = useState('Art');\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const marketplace = useMarketContract();\n\n  const uploadToIPFS = async event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n\n    if (typeof file !== 'undefined') {\n      try {\n        const result = await client.add(file);\n        console.log(result);\n        setImage(`https://ipfs.infura.io/ipfs/${result.path}`);\n      } catch (error) {\n        console.log(\"ipfs image upload error: \", error);\n      }\n    }\n  };\n\n  const isFormFiled = () => {\n    if (image === '' || price === null || category === '' || name === '' || description === '') {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const createNFT = async e => {\n    e.preventDefault();\n\n    try {\n      await performActions(async kit => {\n        const {\n          defaultAccount\n        } = kit;\n        if (!image || !price || !name || !description || !category) return;\n        setLoading(true);\n        const result = await client.add(JSON.stringify({\n          image,\n          price,\n          name,\n          description,\n          category,\n          owner: address\n        }));\n        await mintThenList(result, defaultAccount);\n      });\n    } catch (error) {\n      console.log(\"ipfs uri upload error: \", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const mintThenList = async (result, defaultAccount) => {\n    const uri = `https://ipfs.infura.io/ipfs/${result.path}`;\n    const listingPrice = ethers.utils.parseEther(price.toString()); // mint nft\n\n    const tx = await marketplace.methods.createToken(uri, listingPrice).send({\n      from: defaultAccount\n    });\n    alert(\"Your nft was minted successfully!\");\n    navigate(`/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create section__padding\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Labs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"writeForm\",\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Art\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: uploadToIPFS,\n            type: \"file\",\n            className: \"custom-file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setName(e.target.value),\n            type: \"text\",\n            placeholder: \"Item Name\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"BIO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: e => setDescription(e.target.value),\n            type: \"text\",\n            rows: 4,\n            placeholder: \"Brief Info of your creation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twoForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setPrice(e.target.value),\n              type: \"text\",\n              placeholder: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CELO\",\n                children: \"CELO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => {\n              console.log(e.target.value);\n              setCategory(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Art\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Photography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Sports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Collectibles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Trading Cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Utility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tw-text-center\",\n          children: /*#__PURE__*/_jsxDEV(CircleLoader, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isFormFiled(),\n          className: \"writeButton\",\n          onClick: createNFT,\n          children: \"Create Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"5TravRUXG2+HCzoBp60rMwF6kbw=\", false, function () {\n  return [useContractKit, useNavigate, useMarketContract];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/crypto/GETSCHWIFTY/src/pages/create/Create.jsx"],"names":["Image","useEffect","useState","create","ipfsHttpClient","useMarketContract","BigNumber","ethers","CircleLoader","useContractKit","useNavigate","client","Create","address","connect","performActions","navigate","loading","setLoading","image","setImage","price","setPrice","category","setCategory","name","setName","description","setDescription","marketplace","uploadToIPFS","event","preventDefault","file","target","files","result","add","console","log","path","error","isFormFiled","createNFT","e","kit","defaultAccount","JSON","stringify","owner","mintThenList","uri","listingPrice","utils","parseEther","toString","tx","methods","createToken","send","from","alert","value"],"mappings":"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","sourcesContent":["import './create.css'\nimport Image from '../../assets/Image.png'\nimport {useEffect, useState} from \"react\";\nimport {create as ipfsHttpClient} from 'ipfs-http-client'\nimport {useMarketContract} from \"../../hooks/useMarketContract\";\nimport {BigNumber, ethers} from \"ethers\";\n\nimport CircleLoader from \"react-spinners/ClipLoader\";\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst client = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\nconst Create = () => {\n    const {address, connect, performActions} = useContractKit()\n    const navigate = useNavigate();\n    useEffect(() => {\n\n        if (!address) {\n\n            (async () => {\n                await connect()\n            })()\n\n        }\n\n    }, [address, connect])\n\n\n    const [loading, setLoading] = useState(false)\n    const [image, setImage] = useState('')\n    const [price, setPrice] = useState(null)\n    const [category, setCategory] = useState('Art')\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n\n    const marketplace = useMarketContract()\n\n\n    const uploadToIPFS = async (event) => {\n        event.preventDefault()\n        const file = event.target.files[0]\n        if (typeof file !== 'undefined') {\n            try {\n                const result = await client.add(file)\n                console.log(result)\n                setImage(`https://ipfs.infura.io/ipfs/${result.path}`)\n            } catch (error) {\n                console.log(\"ipfs image upload error: \", error)\n            }\n        }\n    }\n\n    const isFormFiled = () => {\n        if (image === '' || price === null || category === '' || name === '' || description === '') {\n            return false\n        } else {\n            return true\n        }\n    }\n    const createNFT = async (e) => {\n        e.preventDefault()\n        try {\n            await performActions(async (kit) => {\n                const {defaultAccount} = kit;\n\n                if (!image || !price || !name || !description || !category) return\n\n                setLoading(true)\n                const result = await client.add(JSON.stringify({image, price, name, description, category, owner : address}))\n                await mintThenList(result, defaultAccount)\n\n            })\n\n        } catch (error) {\n            console.log(\"ipfs uri upload error: \", error)\n        } finally {\n            setLoading(false)\n        }\n    }\n    const mintThenList = async (result, defaultAccount) => {\n        const uri = `https://ipfs.infura.io/ipfs/${result.path}`\n\n\n        const listingPrice = ethers.utils.parseEther(price.toString())\n\n\n        // mint nft\n       const tx =  await marketplace.methods.createToken(uri,listingPrice ).send({\n            from:defaultAccount\n        })\n\n\n        alert(\"Your nft was minted successfully!\")\n        navigate(`/`);\n\n    }\n\n    return (\n        <div className='create section__padding'>\n            <div className=\"create-container\">\n                <h1>Labs</h1>\n              \n              \n                <form className='writeForm' autoComplete='off'>\n\n                    <div className=\"formGroup\">\n                        <label>Select Art</label>\n                        <input onChange={uploadToIPFS} type=\"file\" className='custom-file-input'\n                        />\n                    </div>\n                    <div className=\"formGroup\">\n                        <label>NAME</label>\n                        <input onChange={(e) => setName(e.target.value)} type=\"text\" placeholder='Item Name'\n                               autoFocus={true}/>\n                    </div>\n                    <div className=\"formGroup\">\n                        <label>BIO</label>\n                        <textarea onChange={(e) => setDescription(e.target.value)} type=\"text\" rows={4}\n                                  placeholder='Brief Info of your creation'\n                        ></textarea>\n                    </div>\n                    <div className=\"formGroup\">\n                        <label>Price</label>\n                        <div className=\"twoForm\">\n                            <input onChange={(e) => setPrice(e.target.value)} type=\"text\" placeholder='Price'/>\n                            <select>\n                                <option value=\"CELO\">CELO</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"formGroup\">\n                        <label>Category</label>\n                        <select onChange={(e) => {\n                            console.log(e.target.value)\n                            setCategory(e.target.value)\n                        }}>\n                            <option>Art</option>\n                            <option>Photography</option>\n                            <option>Sports</option>\n                            <option>Collectibles</option>\n                            <option>Trading Cards</option>\n                            <option>Utility</option>\n                        </select>\n                    </div>\n                    {loading ?\n                        <div className={\"tw-text-center\"}>\n                            <CircleLoader color={\"white\"}/>\n                        </div>\n\n                        :\n                        <button disabled={!isFormFiled()} className='writeButton' onClick={createNFT}>Create\n                            Item</button>\n                    }\n\n\n                </form>\n            </div>\n        </div>\n\n    )\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}