{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useContractKitInternal = exports.useContractKit = void 0;\n\nvar contract_kit_provider_1 = require(\"./contract-kit-provider\");\n\nvar useContractKit = function useContractKit() {\n  var _a = __read((0, contract_kit_provider_1.useContractKitContext)(), 3),\n      _b = _a[0],\n      dapp = _b.dapp,\n      connector = _b.connector,\n      connectorInitError = _b.connectorInitError,\n      address = _b.address,\n      network = _b.network,\n      feeCurrency = _b.feeCurrency,\n      _dispatch = _a[1],\n      _c = _a[2],\n      destroy = _c.destroy,\n      updateNetwork = _c.updateNetwork,\n      connect = _c.connect,\n      getConnectedKit = _c.getConnectedKit,\n      performActions = _c.performActions,\n      updateFeeCurrency = _c.updateFeeCurrency;\n\n  return {\n    address: address,\n    dapp: dapp,\n    network: network,\n    updateFeeCurrency: updateFeeCurrency,\n    updateNetwork: updateNetwork,\n    kit: connector.kit,\n    walletType: connector.type,\n    account: connector.account,\n    initialised: connector.initialised,\n    feeCurrency: feeCurrency,\n    performActions: performActions,\n    getConnectedKit: getConnectedKit,\n    connect: connect,\n    destroy: destroy,\n    initError: connectorInitError\n  };\n};\n\nexports.useContractKit = useContractKit;\n/**\n * useContractKit with internal methods exposed. Package use only.\n */\n\nvar useContractKitInternal = function useContractKitInternal() {\n  var _a = __read((0, contract_kit_provider_1.useContractKitContext)(), 3),\n      _b = _a[0],\n      pendingActionCount = _b.pendingActionCount,\n      connectionCallback = _b.connectionCallback,\n      _dispatch = _a[1],\n      initConnector = _a[2].initConnector;\n\n  return __assign(__assign({}, (0, exports.useContractKit)()), {\n    connectionCallback: connectionCallback,\n    initConnector: initConnector,\n    pendingActionCount: pendingActionCount\n  });\n};\n\nexports.useContractKitInternal = useContractKitInternal;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AA8CO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;AACtB,kBAWF,oDAXE,EAWqB,CAXrB;AAAA,MACJC,UADI;AAAA,MACFC,IAAI,UADF;AAAA,MACIC,SAAS,eADb;AAAA,MACeC,kBAAkB,wBADjC;AAAA,MACmCC,OAAO,aAD1C;AAAA,MAC4CC,OAAO,aADnD;AAAA,MACqDC,WAAW,iBADhE;AAAA,MAEJC,SAAS,QAFL;AAAA,MAGJC,UAHI;AAAA,MAIFC,OAAO,aAJL;AAAA,MAKFC,aAAa,mBALX;AAAA,MAMFC,OAAO,aANL;AAAA,MAOFC,eAAe,qBAPb;AAAA,MAQFC,cAAc,oBARZ;AAAA,MASFC,iBAAiB,uBATf;;AAaN,SAAO;AACLV,WAAO,SADF;AAELH,QAAI,MAFC;AAGLI,WAAO,SAHF;AAILS,qBAAiB,mBAJZ;AAKLJ,iBAAa,eALR;AAMLK,OAAG,EAAEb,SAAS,CAACa,GANV;AAOLC,cAAU,EAAEd,SAAS,CAACe,IAPjB;AAQLC,WAAO,EAAEhB,SAAS,CAACgB,OARd;AASLC,eAAW,EAAEjB,SAAS,CAACiB,WATlB;AAULb,eAAW,aAVN;AAYLO,kBAAc,gBAZT;AAaLD,mBAAe,iBAbV;AAcLD,WAAO,SAdF;AAeLF,WAAO,SAfF;AAiBLW,aAAS,EAAEjB;AAjBN,GAAP;AAmBD,CAjCM;;AAAMkB,yBAActB,cAAd;AAyCb;;;;AAGO,IAAMuB,sBAAsB,GAAG,SAAzBA,sBAAyB;AAC9B,kBAIF,oDAJE,EAIqB,CAJrB;AAAA,MACJtB,UADI;AAAA,MACFuB,kBAAkB,wBADhB;AAAA,MACkBC,kBAAkB,wBADpC;AAAA,MAEJjB,SAAS,QAFL;AAAA,MAGFkB,aAAa,sBAHX;;AAMN,+BACK,6BADL,GACqB;AACnBD,sBAAkB,oBADC;AAEnBC,iBAAa,eAFM;AAGnBF,sBAAkB;AAHC,GADrB;AAMD,CAbM;;AAAMF,iCAAsBC,sBAAtB","names":["useContractKit","_b","dapp","connector","connectorInitError","address","network","feeCurrency","_dispatch","_c","destroy","updateNetwork","connect","getConnectedKit","performActions","updateFeeCurrency","kit","walletType","type","account","initialised","initError","exports","useContractKitInternal","pendingActionCount","connectionCallback","initConnector"],"sourceRoot":"","sources":["../src/use-contractkit.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}