{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SortedOraclesWrapper = exports.MedianRelation = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar address_2 = require(\"@celo/utils/lib/address\");\n\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\n\nvar base_1 = require(\"../base\");\n\nvar celo_tokens_1 = require(\"../celo-tokens\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar MedianRelation;\n\n(function (MedianRelation) {\n  MedianRelation[MedianRelation[\"Undefined\"] = 0] = \"Undefined\";\n  MedianRelation[MedianRelation[\"Lesser\"] = 1] = \"Lesser\";\n  MedianRelation[MedianRelation[\"Greater\"] = 2] = \"Greater\";\n  MedianRelation[MedianRelation[\"Equal\"] = 3] = \"Equal\";\n})(MedianRelation = exports.MedianRelation || (exports.MedianRelation = {}));\n/**\n * Currency price oracle contract.\n */\n\n\nvar SortedOraclesWrapper =\n/** @class */\nfunction (_super) {\n  __extends(SortedOraclesWrapper, _super);\n\n  function SortedOraclesWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Returns the report expiry parameter.\n     * @returns Current report expiry.\n     */\n\n\n    _this.reportExpirySeconds = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.reportExpirySeconds, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Helper function to get the rates for StableToken, by passing the address\n     * of StableToken to `getRates`.\n     */\n\n    _this.getStableTokenRates = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , this.getRates(base_1.CeloContract.StableToken)\n          /**\n           * Gets all elements from the doubly linked list.\n           * @param target The ReportTarget, either CeloToken or currency pair in question\n           * @return An unpacked list of elements from largest to smallest.\n           */\n          ];\n        });\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Gets the number of rates that have been reported for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The number of reported oracle rates for `token`.\n   */\n\n\n  SortedOraclesWrapper.prototype.numRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.numRates(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , (0, BaseWrapper_1.valueToInt)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the median rate for the given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The median exchange rate for `token`, expressed as:\n   *   amount of that token / equivalent amount in CELO\n   */\n\n\n  SortedOraclesWrapper.prototype.medianRate = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.medianRate(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , {\n              rate: (0, BaseWrapper_1.valueToFrac)(response[0], response[1])\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the given address is whitelisted as an oracle for the target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param oracle The address that we're checking the oracle status of\n   * @returns boolean describing whether this account is an oracle\n   */\n\n\n  SortedOraclesWrapper.prototype.isOracle = function (target, oracle) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [2\n            /*return*/\n            , this.contract.methods.isOracle(identifier, oracle).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the list of whitelisted oracles for a given target\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @returns The list of whitelisted oracles for a given token.\n   */\n\n\n  SortedOraclesWrapper.prototype.getOracles = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [2\n            /*return*/\n            , this.contract.methods.getOracles(identifier).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the expiry for the target if exists, if not the default.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @return The report expiry in seconds.\n   */\n\n\n  SortedOraclesWrapper.prototype.getTokenReportExpirySeconds = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getTokenReportExpirySeconds(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , (0, BaseWrapper_1.valueToBigNumber)(response)];\n        }\n      });\n    });\n  };\n  /**\n   * Checks if the oldest report for a given target is expired\n   * @param target The ReportTarget, either CeloToken or currency pair\n   */\n\n\n  SortedOraclesWrapper.prototype.isOldestReportExpired = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.isOldestReportExpired(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n  /**\n   * Removes expired reports, if any exist\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param numReports The upper-limit of reports to remove. For example, if there\n   * are 2 expired reports, and this param is 5, it will only remove the 2 that\n   * are expired.\n   */\n\n\n  SortedOraclesWrapper.prototype.removeExpiredReports = function (target, numReports) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            if (!!numReports) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.getReports(target)];\n\n          case 2:\n            numReports = _a.sent().length - 1;\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.removeExpiredReports(identifier, numReports))];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param target The ReportTarget, either CeloToken or currency pair\n   * @param value The amount of `token` equal to one CELO.\n   */\n\n\n  SortedOraclesWrapper.prototype.report = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, fixedValue, _a, lesserKey, greaterKey;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _b.sent();\n            fixedValue = (0, fixidity_1.toFixed)((0, BaseWrapper_1.valueToBigNumber)(value));\n            return [4\n            /*yield*/\n            , this.findLesserAndGreaterKeys(target, (0, BaseWrapper_1.valueToBigNumber)(value), oracleAddress)];\n\n          case 2:\n            _a = _b.sent(), lesserKey = _a.lesserKey, greaterKey = _a.greaterKey;\n            return [2\n            /*return*/\n            , (0, connect_1.toTransactionObject)(this.kit.connection, this.contract.methods.report(identifier, fixedValue.toFixed(), lesserKey, greaterKey), {\n              from: oracleAddress\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Updates an oracle value and the median.\n   * @param value The amount of US Dollars equal to one CELO.\n   * @param oracleAddress The address to report as\n   * @param token The token to report for\n   */\n\n\n  SortedOraclesWrapper.prototype.reportStableToken = function (value, oracleAddress, token) {\n    if (token === void 0) {\n      token = celo_tokens_1.StableToken.cUSD;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.report(this.kit.celoTokens.getContract(token), value, oracleAddress)];\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  SortedOraclesWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {};\n            return [4\n            /*yield*/\n            , this.reportExpirySeconds()];\n\n          case 1:\n            return [2\n            /*return*/\n            , (_a.reportExpirySeconds = _b.sent(), _a)];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the sortedoracles contract\n   * @return SortedOraclesConfig object\n   */\n\n\n  SortedOraclesWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _a.sent();\n            return [2\n            /*return*/\n            , {\n              reportExpiry: (0, BaseWrapper_1.secondsToDurationString)(config.reportExpirySeconds)\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n\n\n  SortedOraclesWrapper.prototype.getRates = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, rates, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getRates(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            rates = [];\n\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              rates.push({\n                address: response[0][i],\n                rate: (0, fixidity_1.fromFixed)((0, BaseWrapper_1.valueToBigNumber)(response[1][i])),\n                medianRelation: medRelIndex\n              });\n            }\n\n            return [2\n            /*return*/\n            , rates];\n        }\n      });\n    });\n  };\n  /**\n   * Gets all elements from the doubly linked list.\n   * @param target The ReportTarget, either CeloToken or currency pair in question\n   * @return An unpacked list of elements from largest to smallest.\n   */\n\n\n  SortedOraclesWrapper.prototype.getTimestamps = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identifier, response, timestamps, i, medRelIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.toCurrencyPairIdentifier(target)];\n\n          case 1:\n            identifier = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getTimestamps(identifier).call()];\n\n          case 2:\n            response = _a.sent();\n            timestamps = [];\n\n            for (i = 0; i < response[0].length; i++) {\n              medRelIndex = parseInt(response[2][i], 10);\n              timestamps.push({\n                address: response[0][i],\n                timestamp: (0, BaseWrapper_1.valueToBigNumber)(response[1][i]),\n                medianRelation: medRelIndex\n              });\n            }\n\n            return [2\n            /*return*/\n            , timestamps];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.getReports = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, rates, timestamps, reports, _loop_1, _i, rates_1, rate;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.getRates(target), this.getTimestamps(target)])];\n\n          case 1:\n            _a = _b.sent(), rates = _a[0], timestamps = _a[1];\n            reports = [];\n\n            _loop_1 = function _loop_1(rate) {\n              var match = timestamps.filter(function (t) {\n                return (0, address_1.eqAddress)(t.address, rate.address);\n              });\n              reports.push({\n                address: rate.address,\n                rate: rate.rate,\n                timestamp: match[0].timestamp\n              });\n            };\n\n            for (_i = 0, rates_1 = rates; _i < rates_1.length; _i++) {\n              rate = rates_1[_i];\n\n              _loop_1(rate);\n            }\n\n            return [2\n            /*return*/\n            , reports];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.findLesserAndGreaterKeys = function (target, value, oracleAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentRates, greaterKey, lesserKey, _i, currentRates_1, rate;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getRates(target)];\n\n          case 1:\n            currentRates = _a.sent();\n            greaterKey = address_1.NULL_ADDRESS;\n            lesserKey = address_1.NULL_ADDRESS; // This leverages the fact that the currentRates are already sorted from\n            // greatest to lowest value\n\n            for (_i = 0, currentRates_1 = currentRates; _i < currentRates_1.length; _i++) {\n              rate = currentRates_1[_i];\n\n              if (!(0, address_1.eqAddress)(rate.address, oracleAddress)) {\n                if (rate.rate.isLessThanOrEqualTo(value)) {\n                  lesserKey = rate.address;\n                  break;\n                }\n\n                greaterKey = rate.address;\n              }\n            }\n\n            return [2\n            /*return*/\n            , {\n              lesserKey: lesserKey,\n              greaterKey: greaterKey\n            }];\n        }\n      });\n    });\n  };\n\n  SortedOraclesWrapper.prototype.toCurrencyPairIdentifier = function (target) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.kit.celoTokens.isStableTokenContract(target)) {\n          return [2\n          /*return*/\n          , this.kit.registry.addressFor(target)];\n        } else if ((0, address_2.isValidAddress)(target)) {\n          return [2\n          /*return*/\n          , target];\n        } else {\n          throw new Error(target + \" is not StableTokenContract deployed or a valid Address\");\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return SortedOraclesWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.SortedOraclesWrapper = SortedOraclesWrapper;","map":{"version":3,"mappings":"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","names":["MedianRelation","exports","__extends","_this","contract","methods","reportExpirySeconds","undefined","BaseWrapper_1","getRates","base_1","StableToken","SortedOraclesWrapper","target","toCurrencyPairIdentifier","identifier","_a","numRates","call","response","medianRate","rate","oracle","isOracle","getOracles","getTokenReportExpirySeconds","isOldestReportExpired","numReports","getReports","length","kit","connection","removeExpiredReports","value","oracleAddress","_b","fixedValue","findLesserAndGreaterKeys","lesserKey","greaterKey","report","toFixed","from","token","celo_tokens_1","cUSD","celoTokens","getContract","getConfig","config","reportExpiry","rates","i","medRelIndex","parseInt","push","address","medianRelation","getTimestamps","timestamps","timestamp","Promise","all","reports","match","filter","t","rates_1","_i","currentRates","address_1","currentRates_1","isLessThanOrEqualTo","isStableTokenContract","registry","addressFor","Error"],"sourceRoot":"","sources":["../../src/wrappers/SortedOracles.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}