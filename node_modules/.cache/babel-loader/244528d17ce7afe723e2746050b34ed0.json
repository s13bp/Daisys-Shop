{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionResult = exports.toTxResult = void 0;\n\nvar future_1 = require(\"@celo/base/lib/future\");\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = (0, debug_1.default)('connection:tx:result');\n/**\n * Transforms a `PromiEvent` to a `TransactionResult`.\n */\n\nfunction toTxResult(pe) {\n  return new TransactionResult(pe);\n}\n\nexports.toTxResult = toTxResult;\n/**\n * Replacement interface for web3's `PromiEvent`. Instead of emiting events\n * to signal different stages, eveything is exposed as a promise. Which ends\n * up being nicer when doing promise/async based programming.\n */\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  function TransactionResult(pe) {\n    var _this = this;\n\n    this.hashFuture = new future_1.Future();\n    this.receiptFuture = new future_1.Future();\n    pe.on('transactionHash', function (hash) {\n      debug('hash: %s', hash);\n\n      _this.hashFuture.resolve(hash);\n    }).on('receipt', function (receipt) {\n      debug('receipt: %O', receipt);\n\n      _this.receiptFuture.resolve(receipt);\n    }).on('error', function (error, receipt) {\n      if (!receipt) {\n        debug('send-error: %o', error);\n\n        _this.hashFuture.reject(error);\n      } else {\n        debug('mining-error: %o, %O', error, receipt);\n      }\n\n      _this.receiptFuture.reject(error);\n    });\n  }\n  /** Get (& wait for) transaction hash */\n\n\n  TransactionResult.prototype.getHash = function () {\n    var _this = this;\n\n    return this.hashFuture.wait().catch(function (err) {\n      // if hashFuture fails => receiptFuture also fails\n      // we wait for it here; so not UnhandlePromise error occurrs\n      _this.receiptFuture.wait().catch(function () {// ignore\n      });\n\n      throw err;\n    });\n  };\n  /** Get (& wait for) transaction receipt */\n\n\n  TransactionResult.prototype.waitReceipt = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Make sure `getHash()` promise is consumed\n            return [4\n            /*yield*/\n            , this.getHash()];\n\n          case 1:\n            // Make sure `getHash()` promise is consumed\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this.receiptFuture.wait()];\n        }\n      });\n    });\n  };\n\n  return TransactionResult;\n}();\n\nexports.TransactionResult = TransactionResult;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA,IAAMA,KAAK,GAAG,qBAAa,sBAAb,CAAd;AAEA;;;;AAGA,SAAgBC,UAAhB,CAA2BC,EAA3B,EAA8C;AAC5C,SAAO,IAAIC,iBAAJ,CAAsBD,EAAtB,CAAP;AACD;;AAFDE;AAIA;;;;;;AAKA;AAAA;AAAA;AAIE,6BAAYF,EAAZ,EAA+B;AAA/B;;AAHQ,sBAAa,IAAIG,eAAJ,EAAb;AACA,yBAAgB,IAAIA,eAAJ,EAAhB;AAGNH,MAAE,CAACI,EAAH,CAAM,iBAAN,EAAyB,UAACC,IAAD,EAAa;AACpCP,WAAK,CAAC,UAAD,EAAaO,IAAb,CAAL;;AACAC,WAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwBH,IAAxB;AACD,KAHD,EAIGD,EAJH,CAIM,SAJN,EAIiB,UAACK,OAAD,EAAuB;AACpCX,WAAK,CAAC,aAAD,EAAgBW,OAAhB,CAAL;;AACAH,WAAI,CAACI,aAAL,CAAmBF,OAAnB,CAA2BC,OAA3B;AACD,KAPH,EASGL,EATH,CASM,OATN,EASgB,UAACO,KAAD,EAAaF,OAAb,EAA2C;AACvD,UAAI,CAACA,OAAL,EAAc;AACZX,aAAK,CAAC,gBAAD,EAAmBa,KAAnB,CAAL;;AACAL,aAAI,CAACC,UAAL,CAAgBK,MAAhB,CAAuBD,KAAvB;AACD,OAHD,MAGO;AACLb,aAAK,CAAC,sBAAD,EAAyBa,KAAzB,EAAgCF,OAAhC,CAAL;AACD;;AACDH,WAAI,CAACI,aAAL,CAAmBE,MAAnB,CAA0BD,KAA1B;AACD,KAjBH;AAkBD;AAED;;;AACAV;AAAA;;AACE,WAAO,KAAKM,UAAL,CAAgBM,IAAhB,GAAuBC,KAAvB,CAA6B,UAACC,GAAD,EAAI;AACtC;AACA;AACAT,WAAI,CAACI,aAAL,CAAmBG,IAAnB,GAA0BC,KAA1B,CAAgC,aAC9B;AACD,OAFD;;AAGA,YAAMC,GAAN;AACD,KAPM,CAAP;AAQD,GATD;AAWA;;;AACMd,4CAAN;;;;;AACE;AACA;AAAA;AAAA,cAAM,KAAKe,OAAL,EAAN;;;AADA;AACAC;;AAEA;AAAA;AAAA,cAAO,KAAKP,aAAL,CAAmBG,IAAnB,EAAP;;;;AACD,GALK;;AAMR;AAAC,CA5CD;;AAAaX","names":["debug","toTxResult","pe","TransactionResult","exports","future_1","on","hash","_this","hashFuture","resolve","receipt","receiptFuture","error","reject","wait","catch","err","getHash","_a"],"sourceRoot":"","sources":["../../src/utils/tx-result.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}