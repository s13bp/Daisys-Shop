{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CeloProvider = exports.assertIsCeloProvider = void 0;\n\nvar lock_1 = require(\"@celo/base/lib/lock\");\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar provider_utils_1 = require(\"./utils/provider-utils\");\n\nvar rpc_caller_1 = require(\"./utils/rpc-caller\");\n\nvar debug = (0, debug_1.default)('provider:connection');\nvar debugPayload = (0, debug_1.default)('provider:payload');\nvar debugTxToSend = (0, debug_1.default)('provider:tx-to-send');\nvar debugEncodedTx = (0, debug_1.default)('provider:encoded-tx');\nvar debugResponse = (0, debug_1.default)('provider:response');\nvar InterceptedMethods;\n\n(function (InterceptedMethods) {\n  InterceptedMethods[\"accounts\"] = \"eth_accounts\";\n  InterceptedMethods[\"sendTransaction\"] = \"eth_sendTransaction\";\n  InterceptedMethods[\"signTransaction\"] = \"eth_signTransaction\";\n  InterceptedMethods[\"sign\"] = \"eth_sign\";\n  InterceptedMethods[\"personalSign\"] = \"personal_sign\";\n  InterceptedMethods[\"signTypedData\"] = \"eth_signTypedData\";\n})(InterceptedMethods || (InterceptedMethods = {}));\n\nfunction assertIsCeloProvider(provider) {\n  if (!(provider instanceof CeloProvider)) {\n    throw new Error('A different Provider was manually added to the kit. The kit should have a CeloProvider');\n  }\n}\n\nexports.assertIsCeloProvider = assertIsCeloProvider;\n\nvar CeloProvider =\n/** @class */\nfunction () {\n  function CeloProvider(existingProvider, connection) {\n    this.existingProvider = existingProvider;\n    this.connection = connection;\n    this.alreadyStopped = false; // Transaction nonce is calculated as the max of an account's nonce on-chain, and any pending transactions in a node's\n    // transaction pool. As a result, once a nonce is used, the transaction must be sent to the node before the nonce can\n    // be calculated for another transaction. In particular the sign and send operation must be completed atomically with\n    // relation to other sign and send operations.\n\n    this.nonceLock = new lock_1.Lock();\n    this.addProviderDelegatedFunctions();\n  } // Used for backwards compatibility. Use the `addAccount` from the Connection\n\n\n  CeloProvider.prototype.addAccount = function (privateKey) {\n    this.connection.addAccount(privateKey);\n  }; // Used for backwards compatibility. Use the `removeAccount` from the Connection\n\n\n  CeloProvider.prototype.removeAccount = function (address) {\n    this.connection.removeAccount(address);\n  }; // Used for backwards compatibility. Use the `getAccounts` from the Connection\n\n\n  CeloProvider.prototype.getAccounts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.connection.getAccounts()];\n      });\n    });\n  };\n\n  CeloProvider.prototype.isLocalAccount = function (address) {\n    return this.connection.wallet != null && this.connection.wallet.hasAccount(address);\n  };\n  /**\n   * Send method as expected by web3.js\n   */\n\n\n  CeloProvider.prototype.send = function (payload, callback) {\n    var txParams;\n    var address;\n    debugPayload('%O', payload);\n\n    var decoratedCallback = function (error, result) {\n      debugResponse('%O', result);\n      callback(error, result);\n    };\n\n    if (this.alreadyStopped) {\n      throw Error('CeloProvider already stopped');\n    }\n\n    switch (payload.method) {\n      case InterceptedMethods.accounts:\n        {\n          (0, rpc_caller_1.rpcCallHandler)(payload, this.handleAccounts.bind(this), decoratedCallback);\n          return;\n        }\n\n      case InterceptedMethods.sendTransaction:\n        {\n          this.checkPayloadWithAtLeastNParams(payload, 1);\n          txParams = payload.params[0];\n\n          if (this.connection.isLocalAccount(txParams.from)) {\n            (0, rpc_caller_1.rpcCallHandler)(payload, this.handleSendTransaction.bind(this), decoratedCallback);\n          } else {\n            this.forwardSend(payload, callback);\n          }\n\n          return;\n        }\n\n      case InterceptedMethods.signTransaction:\n        {\n          this.checkPayloadWithAtLeastNParams(payload, 1);\n          txParams = payload.params[0];\n\n          if (this.connection.isLocalAccount(txParams.from)) {\n            (0, rpc_caller_1.rpcCallHandler)(payload, this.handleSignTransaction.bind(this), decoratedCallback);\n          } else {\n            this.forwardSend(payload, callback);\n          }\n\n          return;\n        }\n\n      case InterceptedMethods.sign:\n      case InterceptedMethods.personalSign:\n        {\n          this.checkPayloadWithAtLeastNParams(payload, 2);\n          address = payload.method === InterceptedMethods.sign ? payload.params[0] : payload.params[1];\n\n          if (this.connection.isLocalAccount(address)) {\n            (0, rpc_caller_1.rpcCallHandler)(payload, this.handleSignPersonalMessage.bind(this), decoratedCallback);\n          } else {\n            this.forwardSend(payload, callback);\n          }\n\n          return;\n        }\n\n      case InterceptedMethods.signTypedData:\n        {\n          this.checkPayloadWithAtLeastNParams(payload, 1);\n          address = payload.params[0];\n\n          if (this.connection.isLocalAccount(address)) {\n            (0, rpc_caller_1.rpcCallHandler)(payload, this.handleSignTypedData.bind(this), decoratedCallback);\n          } else {\n            this.forwardSend(payload, callback);\n          }\n\n          return;\n        }\n\n      default:\n        {\n          this.forwardSend(payload, callback);\n          return;\n        }\n    }\n  };\n\n  CeloProvider.prototype.stop = function () {\n    if (this.alreadyStopped) {\n      return;\n    }\n\n    try {\n      (0, provider_utils_1.stopProvider)(this.existingProvider);\n      this.alreadyStopped = true;\n    } catch (error) {\n      debug(\"Failed to close the connection: \" + error);\n    }\n  };\n\n  CeloProvider.prototype.handleAccounts = function (_payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.connection.getAccounts()];\n      });\n    });\n  };\n\n  CeloProvider.prototype.handleSignTypedData = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, address, typedData, signature;\n\n      return __generator(this, function (_b) {\n        _a = payload.params, address = _a[0], typedData = _a[1];\n        signature = this.connection.wallet.signTypedData(address, typedData);\n        return [2\n        /*return*/\n        , signature];\n      });\n    });\n  };\n\n  CeloProvider.prototype.handleSignPersonalMessage = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var address, data, ecSignatureHex;\n      return __generator(this, function (_a) {\n        address = payload.method === 'eth_sign' ? payload.params[0] : payload.params[1];\n        data = payload.method === 'eth_sign' ? payload.params[1] : payload.params[0];\n        ecSignatureHex = this.connection.wallet.signPersonalMessage(address, data);\n        return [2\n        /*return*/\n        , ecSignatureHex];\n      });\n    });\n  };\n\n  CeloProvider.prototype.handleSignTransaction = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var txParams, filledParams, signedTx;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            txParams = payload.params[0];\n            return [4\n            /*yield*/\n            , this.connection.paramsPopulator.populate(txParams)];\n\n          case 1:\n            filledParams = _a.sent();\n            debugTxToSend('%O', filledParams);\n            return [4\n            /*yield*/\n            , this.connection.wallet.signTransaction(filledParams)];\n\n          case 2:\n            signedTx = _a.sent();\n            debugEncodedTx('%O', signedTx);\n            return [2\n            /*return*/\n            , signedTx];\n        }\n      });\n    });\n  };\n\n  CeloProvider.prototype.handleSendTransaction = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signedTx, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.nonceLock.acquire()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2,, 5, 6]);\n\n            return [4\n            /*yield*/\n            , this.handleSignTransaction(payload)];\n\n          case 3:\n            signedTx = _a.sent();\n            return [4\n            /*yield*/\n            , this.connection.rpcCaller.call('eth_sendRawTransaction', [signedTx.raw])];\n\n          case 4:\n            response = _a.sent();\n            return [2\n            /*return*/\n            , response.result];\n\n          case 5:\n            this.nonceLock.release();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  CeloProvider.prototype.forwardSend = function (payload, callback) {\n    this.connection.rpcCaller.send(payload, callback);\n  };\n\n  CeloProvider.prototype.checkPayloadWithAtLeastNParams = function (payload, n) {\n    if (!payload.params || payload.params.length < n) {\n      throw Error('Invalid params');\n    }\n  }; // Functions required to act as a delefator for the existingProvider\n\n\n  CeloProvider.prototype.addProviderDelegatedFunctions = function () {\n    if ((0, provider_utils_1.hasProperty)(this.existingProvider, 'on')) {\n      // @ts-ignore\n      this.on = this.defaultOn;\n    }\n\n    if ((0, provider_utils_1.hasProperty)(this.existingProvider, 'once')) {\n      // @ts-ignore\n      this.once = this.defaultOnce;\n    }\n\n    if ((0, provider_utils_1.hasProperty)(this.existingProvider, 'removeListener')) {\n      // @ts-ignore\n      this.removeListener = this.defaultRemoveListener;\n    }\n\n    if ((0, provider_utils_1.hasProperty)(this.existingProvider, 'removeAllListener')) {\n      // @ts-ignore\n      this.removeAllListener = this.defaultRemoveAllListeners;\n    }\n\n    if ((0, provider_utils_1.hasProperty)(this.existingProvider, 'reset')) {\n      // @ts-ignore\n      this.reset = this.defaultReset;\n    }\n  };\n\n  Object.defineProperty(CeloProvider.prototype, \"connected\", {\n    get: function () {\n      return this.existingProvider.connected;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CeloProvider.prototype.supportsSubscriptions = function () {\n    return this.existingProvider.supportsSubscriptions();\n  };\n\n  CeloProvider.prototype.defaultOn = function (type, callback) {\n    ;\n    this.existingProvider.on(type, callback);\n  };\n\n  CeloProvider.prototype.defaultOnce = function (type, callback) {\n    ;\n    this.existingProvider.once(type, callback);\n  };\n\n  CeloProvider.prototype.defaultRemoveListener = function (type, callback) {\n    ;\n    this.existingProvider.removeListener(type, callback);\n  };\n\n  CeloProvider.prototype.defaultRemoveAllListeners = function (type) {\n    ;\n    this.existingProvider.removeAllListeners(type);\n  };\n\n  CeloProvider.prototype.defaultReset = function () {\n    ;\n    this.existingProvider.reset();\n  };\n\n  return CeloProvider;\n}();\n\nexports.CeloProvider = CeloProvider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AAEA,IAAMA,KAAK,GAAG,qBAAa,qBAAb,CAAd;AACA,IAAMC,YAAY,GAAG,qBAAa,kBAAb,CAArB;AACA,IAAMC,aAAa,GAAG,qBAAa,qBAAb,CAAtB;AACA,IAAMC,cAAc,GAAG,qBAAa,qBAAb,CAAvB;AACA,IAAMC,aAAa,GAAG,qBAAa,mBAAb,CAAtB;AAEA,IAAKC,kBAAL;;AAAA,WAAKA,kBAAL,EAAuB;AACrBA;AACAA;AACAA;AACAA;AACAA;AACAA;AACD,CAPD,EAAKA,kBAAkB,KAAlBA,kBAAkB,MAAvB;;AASA,SAAgBC,oBAAhB,CAAqCC,QAArC,EAAkD;AAChD,MAAI,EAAEA,QAAQ,YAAYC,YAAtB,CAAJ,EAAyC;AACvC,UAAM,IAAIC,KAAJ,CACJ,wFADI,CAAN;AAGD;AACF;;AANDC;;AAQA;AAAA;AAAA;AAQE,wBAAqBC,gBAArB,EAA0DC,UAA1D,EAAgF;AAA3D;AAAqC;AAPlD,0BAA0B,KAA1B,CAOwE,CANhF;AACA;AACA;AACA;;AACQ,qBAAkB,IAAIC,WAAJ,EAAlB;AAGN,SAAKC,6BAAL;AACD,GAVH,CAYE;;;AACAN,gDAAWO,UAAX,EAA6B;AAC3B,SAAKH,UAAL,CAAgBI,UAAhB,CAA2BD,UAA3B;AACD,GAFD,CAbF,CAiBE;;;AACAP,mDAAcS,OAAd,EAA6B;AAC3B,SAAKL,UAAL,CAAgBM,aAAhB,CAA8BD,OAA9B;AACD,GAFD,CAlBF,CAsBE;;;AACMT,uCAAN;;;AACE;AAAA;AAAA,UAAO,KAAKI,UAAL,CAAgBO,WAAhB,EAAP;;;AACD,GAFK;;AAINX,oDAAeS,OAAf,EAA+B;AAC7B,WAAO,KAAKL,UAAL,CAAgBQ,MAAhB,IAA0B,IAA1B,IAAkC,KAAKR,UAAL,CAAgBQ,MAAhB,CAAuBC,UAAvB,CAAkCJ,OAAlC,CAAzC;AACD,GAFD;AAIA;;;;;AAGAT,0CAAKc,OAAL,EAA8BC,QAA9B,EAAiE;AAC/D,QAAIC,QAAJ;AACA,QAAIP,OAAJ;AAEAhB,gBAAY,CAAC,IAAD,EAAOqB,OAAP,CAAZ;;AAEA,QAAMG,iBAAiB,GAAG,UAACC,KAAD,EAAsBC,MAAtB,EAA8C;AACtEvB,mBAAa,CAAC,IAAD,EAAOuB,MAAP,CAAb;AACAJ,cAAQ,CAACG,KAAD,EAAQC,MAAR,CAAR;AACD,KAHD;;AAKA,QAAI,KAAKC,cAAT,EAAyB;AACvB,YAAMnB,KAAK,CAAC,8BAAD,CAAX;AACD;;AAED,YAAQa,OAAO,CAACO,MAAhB;AACE,WAAKxB,kBAAkB,CAACyB,QAAxB;AAAkC;AAChC,2CAAeR,OAAf,EAAwB,KAAKS,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAxB,EAAwDP,iBAAxD;AACA;AACD;;AACD,WAAKpB,kBAAkB,CAAC4B,eAAxB;AAAyC;AACvC,eAAKC,8BAAL,CAAoCZ,OAApC,EAA6C,CAA7C;AACAE,kBAAQ,GAAGF,OAAO,CAACa,MAAR,CAAe,CAAf,CAAX;;AAEA,cAAI,KAAKvB,UAAL,CAAgBwB,cAAhB,CAA+BZ,QAAQ,CAACa,IAAxC,CAAJ,EAAmD;AACjD,6CAAef,OAAf,EAAwB,KAAKgB,qBAAL,CAA2BN,IAA3B,CAAgC,IAAhC,CAAxB,EAA+DP,iBAA/D;AACD,WAFD,MAEO;AACL,iBAAKc,WAAL,CAAiBjB,OAAjB,EAA0BC,QAA1B;AACD;;AACD;AACD;;AACD,WAAKlB,kBAAkB,CAACmC,eAAxB;AAAyC;AACvC,eAAKN,8BAAL,CAAoCZ,OAApC,EAA6C,CAA7C;AACAE,kBAAQ,GAAGF,OAAO,CAACa,MAAR,CAAe,CAAf,CAAX;;AAEA,cAAI,KAAKvB,UAAL,CAAgBwB,cAAhB,CAA+BZ,QAAQ,CAACa,IAAxC,CAAJ,EAAmD;AACjD,6CAAef,OAAf,EAAwB,KAAKmB,qBAAL,CAA2BT,IAA3B,CAAgC,IAAhC,CAAxB,EAA+DP,iBAA/D;AACD,WAFD,MAEO;AACL,iBAAKc,WAAL,CAAiBjB,OAAjB,EAA0BC,QAA1B;AACD;;AACD;AACD;;AACD,WAAKlB,kBAAkB,CAACqC,IAAxB;AACA,WAAKrC,kBAAkB,CAACsC,YAAxB;AAAsC;AACpC,eAAKT,8BAAL,CAAoCZ,OAApC,EAA6C,CAA7C;AAEAL,iBAAO,GAAGK,OAAO,CAACO,MAAR,KAAmBxB,kBAAkB,CAACqC,IAAtC,GAA6CpB,OAAO,CAACa,MAAR,CAAe,CAAf,CAA7C,GAAiEb,OAAO,CAACa,MAAR,CAAe,CAAf,CAA3E;;AAEA,cAAI,KAAKvB,UAAL,CAAgBwB,cAAhB,CAA+BnB,OAA/B,CAAJ,EAA6C;AAC3C,6CAAeK,OAAf,EAAwB,KAAKsB,yBAAL,CAA+BZ,IAA/B,CAAoC,IAApC,CAAxB,EAAmEP,iBAAnE;AACD,WAFD,MAEO;AACL,iBAAKc,WAAL,CAAiBjB,OAAjB,EAA0BC,QAA1B;AACD;;AAED;AACD;;AACD,WAAKlB,kBAAkB,CAACwC,aAAxB;AAAuC;AACrC,eAAKX,8BAAL,CAAoCZ,OAApC,EAA6C,CAA7C;AACAL,iBAAO,GAAGK,OAAO,CAACa,MAAR,CAAe,CAAf,CAAV;;AAEA,cAAI,KAAKvB,UAAL,CAAgBwB,cAAhB,CAA+BnB,OAA/B,CAAJ,EAA6C;AAC3C,6CAAeK,OAAf,EAAwB,KAAKwB,mBAAL,CAAyBd,IAAzB,CAA8B,IAA9B,CAAxB,EAA6DP,iBAA7D;AACD,WAFD,MAEO;AACL,iBAAKc,WAAL,CAAiBjB,OAAjB,EAA0BC,QAA1B;AACD;;AACD;AACD;;AAED;AAAS;AACP,eAAKgB,WAAL,CAAiBjB,OAAjB,EAA0BC,QAA1B;AACA;AACD;AAxDH;AA0DD,GAzED;;AA2EAf;AACE,QAAI,KAAKoB,cAAT,EAAyB;AACvB;AACD;;AACD,QAAI;AACF,yCAAa,KAAKjB,gBAAlB;AACA,WAAKiB,cAAL,GAAsB,IAAtB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACd1B,WAAK,CAAC,qCAAmC0B,KAApC,CAAL;AACD;AACF,GAVD;;AAYclB,0CAAd,UAA6BuC,QAA7B,EAAqD;;;AACnD;AAAA;AAAA,UAAO,KAAKnC,UAAL,CAAgBO,WAAhB,EAAP;;;AACD,GAFa;;AAIAX,+CAAd,UAAkCc,OAAlC,EAAyD;;;;;AACjD0B,aAAuB1B,OAAO,CAACa,MAA/B,EAAClB,OAAO,QAAR,EAAUgC,SAAS,QAAnB;AACAC,iBAAS,GAAG,KAAKtC,UAAL,CAAgBQ,MAAhB,CAAwByB,aAAxB,CAAsC5B,OAAtC,EAA+CgC,SAA/C,CAAZ;AACN;AAAA;AAAA,UAAOC,SAAP;;;AACD,GAJa;;AAMA1C,qDAAd,UAAwCc,OAAxC,EAA+D;;;;AACvDL,eAAO,GAAGK,OAAO,CAACO,MAAR,KAAmB,UAAnB,GAAgCP,OAAO,CAACa,MAAR,CAAe,CAAf,CAAhC,GAAoDb,OAAO,CAACa,MAAR,CAAe,CAAf,CAA9D;AACAgB,YAAI,GAAG7B,OAAO,CAACO,MAAR,KAAmB,UAAnB,GAAgCP,OAAO,CAACa,MAAR,CAAe,CAAf,CAAhC,GAAoDb,OAAO,CAACa,MAAR,CAAe,CAAf,CAA3D;AACAiB,sBAAc,GAAG,KAAKxC,UAAL,CAAgBQ,MAAhB,CAAwBiC,mBAAxB,CAA4CpC,OAA5C,EAAqDkC,IAArD,CAAjB;AACN;AAAA;AAAA,UAAOC,cAAP;;;AACD,GALa;;AAOA5C,iDAAd,UAAoCc,OAApC,EAA2D;;;;;;AACnDE,oBAAQ,GAAGF,OAAO,CAACa,MAAR,CAAe,CAAf,CAAX;AACe;AAAA;AAAA,cAAM,KAAKvB,UAAL,CAAgB0C,eAAhB,CAAgCC,QAAhC,CAAyC/B,QAAzC,CAAN;;;AAAfgC,wBAAY,GAAGR,SAAf;AACN9C,yBAAa,CAAC,IAAD,EAAOsD,YAAP,CAAb;AACiB;AAAA;AAAA,cAAM,KAAK5C,UAAL,CAAgBQ,MAAhB,CAAwBoB,eAAxB,CAAwCgB,YAAxC,CAAN;;;AAAXC,oBAAQ,GAAGT,SAAX;AACN7C,0BAAc,CAAC,IAAD,EAAOsD,QAAP,CAAd;AACA;AAAA;AAAA,cAAOA,QAAP;;;;AACD,GAPa;;AASAjD,iDAAd,UAAoCc,OAApC,EAA2D;;;;;;AACzD;AAAA;AAAA,cAAM,KAAKoC,SAAL,CAAeC,OAAf,EAAN;;;AAAAX;;;;;;;AAEmB;AAAA;AAAA,cAAM,KAAKP,qBAAL,CAA2BnB,OAA3B,CAAN;;;AAAXmC,oBAAQ,GAAGT,SAAX;AACW;AAAA;AAAA,cAAM,KAAKpC,UAAL,CAAgBgD,SAAhB,CAA0BC,IAA1B,CAA+B,wBAA/B,EAAyD,CAC9EJ,QAAQ,CAACK,GADqE,CAAzD,CAAN;;;AAAXC,oBAAQ,GAAGf,SAAX;AAGN;AAAA;AAAA,cAAOe,QAAQ,CAACpC,MAAhB;;;AAEA,iBAAK+B,SAAL,CAAeM,OAAf;;;;;;;;;;;;AAEH,GAXa;;AAaNxD,uCAAR,UAAoBc,OAApB,EAA6CC,QAA7C,EAAgF;AAC9E,SAAKX,UAAL,CAAgBgD,SAAhB,CAA0BK,IAA1B,CAA+B3C,OAA/B,EAAwCC,QAAxC;AACD,GAFO;;AAIAf,0DAAR,UAAuCc,OAAvC,EAAgE4C,CAAhE,EAAyE;AACvE,QAAI,CAAC5C,OAAO,CAACa,MAAT,IAAmBb,OAAO,CAACa,MAAR,CAAegC,MAAf,GAAwBD,CAA/C,EAAkD;AAChD,YAAMzD,KAAK,CAAC,gBAAD,CAAX;AACD;AACF,GAJO,CApKV,CA0KE;;;AACQD,yDAAR;AACE,QACE,kCAAkE,KAAKG,gBAAvE,EAAyF,IAAzF,CADF,EAEE;AACA;AACA,WAAKyD,EAAL,GAAU,KAAKC,SAAf;AACD;;AACD,QACE,kCACE,KAAK1D,gBADP,EAEE,MAFF,CADF,EAKE;AACA;AACA,WAAK2D,IAAL,GAAY,KAAKC,WAAjB;AACD;;AACD,QACE,kCACE,KAAK5D,gBADP,EAEE,gBAFF,CADF,EAKE;AACA;AACA,WAAK6D,cAAL,GAAsB,KAAKC,qBAA3B;AACD;;AACD,QACE,kCACE,KAAK9D,gBADP,EAEE,mBAFF,CADF,EAKE;AACA;AACA,WAAK+D,iBAAL,GAAyB,KAAKC,yBAA9B;AACD;;AACD,QAAI,kCAAmC,KAAKhE,gBAAxC,EAA0D,OAA1D,CAAJ,EAAwE;AACtE;AACA,WAAKiE,KAAL,GAAa,KAAKC,YAAlB;AACD;AACF,GAtCO;;AAwCRC,wBAAItE,sBAAJ,EAAI,WAAJ,EAAa;SAAb;AACE,aAAQ,KAAKG,gBAAL,CAA8BoE,SAAtC;AACD,KAFY;qBAAA;;AAAA,GAAb;;AAIAvE;AACE,WAAQ,KAAKG,gBAAL,CAA8BqE,qBAA9B,EAAR;AACD,GAFD;;AAIQxE,qCAAR,UAAkByE,IAAlB,EAAgC1D,QAAhC,EAAoD;AAClD;AAAE,SAAKZ,gBAAL,CAA8ByD,EAA9B,CAAiCa,IAAjC,EAAuC1D,QAAvC;AACH,GAFO;;AAIAf,uCAAR,UAAoByE,IAApB,EAAkC1D,QAAlC,EAAsD;AACpD;AAAE,SAAKZ,gBAAL,CAA8B2D,IAA9B,CAAmCW,IAAnC,EAAyC1D,QAAzC;AACH,GAFO;;AAIAf,iDAAR,UAA8ByE,IAA9B,EAA4C1D,QAA5C,EAAgE;AAC9D;AAAE,SAAKZ,gBAAL,CAA8B6D,cAA9B,CAA6CS,IAA7C,EAAmD1D,QAAnD;AACH,GAFO;;AAIAf,qDAAR,UAAkCyE,IAAlC,EAA8C;AAC5C;AAAE,SAAKtE,gBAAL,CAA8BuE,kBAA9B,CAAiDD,IAAjD;AACH,GAFO;;AAIAzE,wCAAR;AACE;AAAE,SAAKG,gBAAL,CAA8BiE,KAA9B;AACH,GAFO;;AAGV;AAAC,CA9OD;;AAAalE","names":["debug","debugPayload","debugTxToSend","debugEncodedTx","debugResponse","InterceptedMethods","assertIsCeloProvider","provider","CeloProvider","Error","exports","existingProvider","connection","lock_1","addProviderDelegatedFunctions","privateKey","addAccount","address","removeAccount","getAccounts","wallet","hasAccount","payload","callback","txParams","decoratedCallback","error","result","alreadyStopped","method","accounts","handleAccounts","bind","sendTransaction","checkPayloadWithAtLeastNParams","params","isLocalAccount","from","handleSendTransaction","forwardSend","signTransaction","handleSignTransaction","sign","personalSign","handleSignPersonalMessage","signTypedData","handleSignTypedData","_payload","_a","typedData","signature","data","ecSignatureHex","signPersonalMessage","paramsPopulator","populate","filledParams","signedTx","nonceLock","acquire","rpcCaller","call","raw","response","release","send","n","length","on","defaultOn","once","defaultOnce","removeListener","defaultRemoveListener","removeAllListener","defaultRemoveAllListeners","reset","defaultReset","Object","connected","supportsSubscriptions","type","removeAllListeners"],"sourceRoot":"","sources":["../src/celo-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}