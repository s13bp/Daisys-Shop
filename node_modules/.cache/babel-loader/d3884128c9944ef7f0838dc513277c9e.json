{"ast":null,"code":"import _asyncToGenerator from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/crypto/Daisys/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/crypto/Daisys/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{Nfts,Header}from'../../components';import{useContractKit}from\"@celo-tools/use-contractkit\";import{useMarketContract}from\"../../hooks/useMarketContract\";import axios from\"axios\";import{ethers}from\"ethers\";import{jsx as _jsx}from\"react/jsx-runtime\";var Home=function Home(){var _useContractKit=useContractKit(),address=_useContractKit.address,connect=_useContractKit.connect,performActions=_useContractKit.performActions;var marketplace=useMarketContract();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),nfts=_useState2[0],setNfts=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){if(marketplace)loadNFTs();},[marketplace]);var loadNFTs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,items;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return marketplace.methods.fetchMarketItems().call();case 3:data=_context2.sent;_context2.next=6;return Promise.all(data.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(i){var tokenUri,meta,price;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return marketplace.methods.tokenURI(i.tokenId).call();case 2:tokenUri=_context.sent;_context.next=5;return axios.get(tokenUri);case 5:meta=_context.sent;price=ethers.utils.formatUnits(i.price.toString(),'ether');return _context.abrupt(\"return\",{price:price,tokenId:Number(i.tokenId),seller:i.seller,owner:i.owner,image:meta.data.image,name:meta.data.name});case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()));case 6:items=_context2.sent;setNfts(items);setLoading(false);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log({e:_context2.t0});case 14:_context2.prev=14;setLoading(false);return _context2.finish(14);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11,14,17]]);}));return function loadNFTs(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Nfts,{nfts:nfts,title:\"For Sale\",loading:loading})});};export default Home;","map":{"version":3,"sources":["/Users/crypto/Daisys/src/pages/home/Home.jsx"],"names":["React","useEffect","useState","Nfts","Header","useContractKit","useMarketContract","axios","ethers","Home","address","connect","performActions","marketplace","nfts","setNfts","loading","setLoading","loadNFTs","methods","fetchMarketItems","call","data","Promise","all","map","i","tokenURI","tokenId","tokenUri","get","meta","price","utils","formatUnits","toString","Number","seller","owner","image","name","items","console","log","e"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,OAAQC,IAAR,CAAcC,MAAd,KAA6B,kBAA7B,CACA,OAAQC,cAAR,KAA6B,6BAA7B,CACA,OAAQC,iBAAR,KAAgC,+BAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,KAAqB,QAArB,C,2CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAEf,oBAA2CJ,cAAc,EAAzD,CAAOK,OAAP,iBAAOA,OAAP,CAAgBC,OAAhB,iBAAgBA,OAAhB,CAAyBC,cAAzB,iBAAyBA,cAAzB,CACA,GAAMC,CAAAA,WAAW,CAAGP,iBAAiB,EAArC,CAGA,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOY,IAAP,eAAaC,OAAb,eACA,eAA8Bb,QAAQ,CAAC,IAAD,CAAtC,yCAAOc,OAAP,eAAgBC,UAAhB,eAEAhB,SAAS,CAAC,UAAM,CACZ,GAAGY,WAAH,CAAgBK,QAAQ,GAC3B,CAFQ,CAEN,CAACL,WAAD,CAFM,CAAT,CAGA,GAAMK,CAAAA,QAAQ,0FAAG,+LAEUL,CAAAA,WAAW,CAACM,OAAZ,CAAoBC,gBAApB,GAAuCC,IAAvC,EAFV,QAEHC,IAFG,uCAGWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAL,2FAAS,iBAAMC,CAAN,gKACdb,CAAAA,WAAW,CAACM,OAAZ,CAAoBQ,QAApB,CAA6BD,CAAC,CAACE,OAA/B,EAAwCP,IAAxC,EADc,QAC/BQ,QAD+B,qCAElBtB,CAAAA,KAAK,CAACuB,GAAN,CAAUD,QAAV,CAFkB,QAE/BE,IAF+B,eAGjCC,KAHiC,CAGzBxB,MAAM,CAACyB,KAAP,CAAaC,WAAb,CAAyBR,CAAC,CAACM,KAAF,CAAQG,QAAR,EAAzB,CAA6C,OAA7C,CAHyB,iCAI9B,CACHH,KAAK,CAALA,KADG,CAEHJ,OAAO,CAAEQ,MAAM,CAACV,CAAC,CAACE,OAAH,CAFZ,CAGHS,MAAM,CAAEX,CAAC,CAACW,MAHP,CAIHC,KAAK,CAAEZ,CAAC,CAACY,KAJN,CAKHC,KAAK,CAAER,IAAI,CAACT,IAAL,CAAUiB,KALd,CAMHC,IAAI,CAAET,IAAI,CAACT,IAAL,CAAUkB,IANb,CAJ8B,wDAAT,gEAAZ,CAHX,QAGHC,KAHG,gBAiBT1B,OAAO,CAAC0B,KAAD,CAAP,CACAxB,UAAU,CAAC,KAAD,CAAV,CAlBS,qFAoBTyB,OAAO,CAACC,GAAR,CAAY,CAACC,CAAC,aAAF,CAAZ,EApBS,0BAsBT3B,UAAU,CAAC,KAAD,CAAV,CAtBS,yGAAH,kBAARC,CAAAA,QAAQ,0CAAd,CA2BF,mBAAQ,kCAGP,KAAC,IAAD,EAAM,IAAI,CAAEJ,IAAZ,CAAkB,KAAK,CAAC,UAAxB,CAAmC,OAAO,CAAEE,OAA5C,EAHO,EAAR,CAKD,CA5CD,CA8CA,cAAeP,CAAAA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Nfts, Header, } from '../../components'\nimport {useContractKit} from \"@celo-tools/use-contractkit\";\nimport {useMarketContract} from \"../../hooks/useMarketContract\";\nimport axios from \"axios\";\nimport {ethers} from \"ethers\";\n\nconst Home = () => {\n\n    const {address, connect, performActions} = useContractKit()\n    const marketplace = useMarketContract()\n\n\n    const [nfts, setNfts] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if(marketplace) loadNFTs()\n    }, [marketplace])\n    const loadNFTs = async ()  =>{\n        try {\n            const data = await marketplace.methods.fetchMarketItems().call()\n            const items = await Promise.all(data.map(async i => {\n                const tokenUri = await marketplace.methods.tokenURI(i.tokenId).call()\n                const meta = await axios.get(tokenUri)\n                let price = ethers.utils.formatUnits(i.price.toString(), 'ether')\n                return {\n                    price,\n                    tokenId: Number(i.tokenId),\n                    seller: i.seller,\n                    owner: i.owner,\n                    image: meta.data.image,\n                    name: meta.data.name\n                }\n            }))\n\n            setNfts(items)\n            setLoading(false)\n        }catch (e) {\n            console.log({e})\n        }finally {\n            setLoading(false)\n        }\n\n    }\n\n  return  <div>\n    \n   \n   <Nfts nfts={nfts} title=\"For Sale\" loading={loading}  />\n  </div>;\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}