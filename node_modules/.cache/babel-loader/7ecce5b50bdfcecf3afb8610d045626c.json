{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linkedListChanges = exports.linkedListChange = exports.intersection = exports.notEmpty = exports.zeroRange = exports.zip3 = exports.zip = void 0;\n\nvar address_1 = require(\"./address\");\n\nfunction zip(fn, as, bs) {\n  var len = Math.min(as.length, bs.length);\n  var res = [];\n\n  for (var i = 0; i < len; i++) {\n    res.push(fn(as[i], bs[i]));\n  }\n\n  return res;\n}\n\nexports.zip = zip;\n\nfunction zip3(as, bs, cs) {\n  var len = Math.min(as.length, bs.length, cs.length);\n  var res = [];\n\n  for (var i = 0; i < len; i++) {\n    res.push([as[i], bs[i], cs[i]]);\n  }\n\n  return res;\n}\n\nexports.zip3 = zip3;\n\nfunction zeroRange(to) {\n  return Array.from(Array(to).keys());\n}\n\nexports.zeroRange = zeroRange; // https://stackoverflow.com/questions/43118692/typescript-filter-out-nulls-from-an-array\n\nfunction notEmpty(value) {\n  return value !== null && value !== undefined;\n}\n\nexports.notEmpty = notEmpty;\n\nfunction intersection(arrays) {\n  if (arrays.length === 0) {\n    return [];\n  }\n\n  var sets = arrays.map(function (array) {\n    return new Set(array);\n  });\n  var res = [];\n\n  var _loop_1 = function _loop_1(elem) {\n    if (sets.every(function (set) {\n      return set.has(elem);\n    })) {\n      res.push(elem);\n    }\n  };\n\n  for (var _i = 0, _a = arrays[0]; _i < _a.length; _i++) {\n    var elem = _a[_i];\n\n    _loop_1(elem);\n  }\n\n  return res;\n}\n\nexports.intersection = intersection;\n\nfunction upsert(sortedList, change, comparator) {\n  var oldIdx = sortedList.findIndex(function (a) {\n    return (0, address_1.eqAddress)(a.address, change.address);\n  });\n\n  if (oldIdx === -1) {\n    throw new Error('');\n  }\n\n  sortedList.splice(oldIdx, 1);\n  var newIdx = sortedList.findIndex(function (a) {\n    return comparator(a.value, change.value);\n  });\n\n  if (newIdx === -1) {\n    sortedList.push(change);\n    return sortedList.length - 1;\n  } else {\n    sortedList.splice(newIdx, 0, change);\n    return newIdx;\n  }\n} // Warning: sortedList is modified\n\n\nfunction _linkedListChange(sortedList, change, comparator) {\n  var idx = upsert(sortedList, change, comparator);\n  var greater = idx === 0 ? address_1.NULL_ADDRESS : sortedList[idx - 1].address;\n  var lesser = idx === sortedList.length - 1 ? address_1.NULL_ADDRESS : sortedList[idx + 1].address;\n  return {\n    lesser: lesser,\n    greater: greater\n  };\n}\n\nfunction linkedListChange(sortedList, change, comparator) {\n  var list = sortedList.concat();\n\n  var _a = _linkedListChange(list, change, comparator),\n      lesser = _a.lesser,\n      greater = _a.greater;\n\n  return {\n    lesser: lesser,\n    greater: greater,\n    list: list\n  };\n}\n\nexports.linkedListChange = linkedListChange;\n\nfunction linkedListChanges(sortedList, changeList, comparator) {\n  var listClone = __spreadArray([], sortedList, true);\n\n  var lessers = [];\n  var greaters = [];\n\n  for (var _i = 0, changeList_1 = changeList; _i < changeList_1.length; _i++) {\n    var it_1 = changeList_1[_i];\n\n    var _a = _linkedListChange(listClone, it_1, comparator),\n        lesser = _a.lesser,\n        greater = _a.greater;\n\n    lessers.push(lesser);\n    greaters.push(greater);\n  }\n\n  return {\n    lessers: lessers,\n    greaters: greaters,\n    list: listClone\n  };\n}\n\nexports.linkedListChanges = linkedListChanges;","map":{"version":3,"mappings":"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","names":["zip","fn","as","bs","len","Math","min","length","res","i","push","exports","zip3","cs","zeroRange","to","Array","from","keys","notEmpty","value","undefined","intersection","arrays","sets","map","array","Set","elem","every","set","has","_i","upsert","sortedList","change","comparator","oldIdx","findIndex","a","address","Error","splice","newIdx","_linkedListChange","idx","greater","address_1","lesser","linkedListChange","list","concat","linkedListChanges","changeList","listClone","lessers","greaters","it_1"],"sourceRoot":"","sources":["../src/collections.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}