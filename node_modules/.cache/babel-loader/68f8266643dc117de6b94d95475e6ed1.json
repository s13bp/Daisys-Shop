{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdentityMetadataWrapper = exports.IdentityMetadataType = exports.ClaimTypes = void 0;\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar async_1 = require(\"@celo/base/lib/async\");\n\nvar io_1 = require(\"@celo/utils/lib/io\");\n\nvar signatureUtils_1 = require(\"@celo/utils/lib/signatureUtils\");\n\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nvar Either_1 = require(\"fp-ts/lib/Either\");\n\nvar fs_1 = require(\"fs\");\n\nvar t = __importStar(require(\"io-ts\"));\n\nvar PathReporter_1 = require(\"io-ts/lib/PathReporter\");\n\nvar claim_1 = require(\"./claims/claim\");\n\nvar types_1 = require(\"./claims/types\");\n\nvar types_2 = require(\"./claims/types\");\n\nObject.defineProperty(exports, \"ClaimTypes\", {\n  enumerable: true,\n  get: function () {\n    return types_2.ClaimTypes;\n  }\n});\nvar MetaType = t.type({\n  address: io_1.AddressType,\n  signature: io_1.SignatureType\n});\nexports.IdentityMetadataType = t.type({\n  claims: t.array(claim_1.ClaimType),\n  meta: MetaType\n});\n\nvar IdentityMetadataWrapper =\n/** @class */\nfunction () {\n  function IdentityMetadataWrapper(data) {\n    this.data = data;\n  }\n\n  IdentityMetadataWrapper.fromEmpty = function (address) {\n    return new IdentityMetadataWrapper({\n      claims: [],\n      meta: {\n        address: address,\n        signature: ''\n      }\n    });\n  };\n\n  IdentityMetadataWrapper.fetchFromURL = function (kit, url, tries) {\n    if (tries === void 0) {\n      tries = 3;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , (0, async_1.selectiveRetryAsyncWithBackOff)(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var resp, _a, _b;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , (0, cross_fetch_1.default)(url)];\n\n                case 1:\n                  resp = _c.sent();\n\n                  if (!resp.ok) {\n                    throw new Error(\"Request failed with status \" + resp.status);\n                  }\n\n                  _a = this.fromRawString;\n                  _b = [kit];\n                  return [4\n                  /*yield*/\n                  , resp.text()];\n\n                case 2:\n                  return [2\n                  /*return*/\n                  , _a.apply(this, _b.concat([_c.sent()]))];\n              }\n            });\n          });\n        }, tries, ['Request failed with status 404'], [])];\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.fromFile = function (kit, path) {\n    return this.fromRawString(kit, (0, fs_1.readFileSync)(path, 'utf-8'));\n  };\n\n  IdentityMetadataWrapper.verifySigner = function (kit, hash, signature, metadata) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.verifySignerForAddress(kit, hash, signature, metadata.address)];\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.verifySignerForAddress = function (kit, hash, signature, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var accounts, signers;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!(0, signatureUtils_1.verifySignature)(hash, signature, address)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , kit.contracts.getAccounts()];\n\n          case 1:\n            accounts = _a.sent();\n            return [4\n            /*yield*/\n            , accounts.isAccount(address)];\n\n          case 2:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , Promise.all([accounts.getVoteSigner(address), accounts.getValidatorSigner(address), accounts.getAttestationSigner(address)])];\n\n          case 3:\n            signers = _a.sent();\n            return [2\n            /*return*/\n            , signers.some(function (signer) {\n              return (0, signatureUtils_1.verifySignature)(hash, signature, signer);\n            })];\n\n          case 4:\n            return [2\n            /*return*/\n            , false];\n\n          case 5:\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.fromRawString = function (kit, rawData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, validatedData, claims, hash, _a, res;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            data = JSON.parse(rawData);\n            validatedData = exports.IdentityMetadataType.decode(data);\n\n            if ((0, Either_1.isLeft)(validatedData)) {\n              // TODO: We could probably return a more useful error in the future\n              throw new Error(PathReporter_1.PathReporter.report(validatedData).join(', '));\n            }\n\n            claims = validatedData.right.claims;\n            hash = (0, claim_1.hashOfClaims)(claims);\n            _a = claims.length > 0;\n            if (!_a) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.verifySigner(kit, hash, validatedData.right.meta.signature, validatedData.right.meta)];\n\n          case 1:\n            _a = !_b.sent();\n            _b.label = 2;\n\n          case 2:\n            if (_a) {\n              throw new Error(\"Signature could not be validated. Guessing signer: \" + (0, signatureUtils_1.guessSigner)(hash, validatedData.right.meta.signature));\n            }\n\n            res = new IdentityMetadataWrapper(validatedData.right); // Verify that singular claim types appear at most once\n\n            types_1.SINGULAR_CLAIM_TYPES.forEach(function (claimType) {\n              var results = res.filterClaims(claimType);\n\n              if (results.length > 1) {\n                throw new Error(\"Found \" + results.length + \" claims of type \" + claimType + \", should be at most 1\");\n              }\n            });\n            return [2\n            /*return*/\n            , res];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(IdentityMetadataWrapper.prototype, \"claims\", {\n    get: function () {\n      return this.data.claims;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IdentityMetadataWrapper.prototype.hashOfClaims = function () {\n    return (0, claim_1.hashOfClaims)(this.data.claims);\n  };\n\n  IdentityMetadataWrapper.prototype.toString = function () {\n    return JSON.stringify({\n      claims: this.data.claims,\n      meta: this.data.meta\n    });\n  };\n\n  IdentityMetadataWrapper.prototype.addClaim = function (claim, signer) {\n    return __awaiter(this, void 0, void 0, function () {\n      var existingClaims, existingClaims, index, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            switch (claim.type) {\n              case types_1.ClaimTypes.ACCOUNT:\n                if ((0, address_1.eqAddress)(claim.address, this.data.meta.address)) {\n                  throw new Error(\"Can't claim self\");\n                }\n\n                break;\n\n              case types_1.ClaimTypes.DOMAIN:\n                {\n                  existingClaims = this.data.claims.filter(function (el) {\n                    return el.domain === claim.domain;\n                  });\n\n                  if (existingClaims.length > 0) {\n                    return [2\n                    /*return*/\n                    , existingClaims[0]];\n                  }\n\n                  break;\n                }\n\n              case types_1.ClaimTypes.KEYBASE:\n                {\n                  existingClaims = this.data.claims.filter(function (el) {\n                    return el.username === claim.username;\n                  });\n\n                  if (existingClaims.length > 0) {\n                    return [2\n                    /*return*/\n                    , existingClaims[0]];\n                  }\n                }\n\n              default:\n                break;\n            }\n\n            if (types_1.SINGULAR_CLAIM_TYPES.includes(claim.type)) {\n              index = this.data.claims.findIndex((0, claim_1.isOfType)(claim.type));\n\n              if (index !== -1) {\n                this.data.claims.splice(index, 1);\n              }\n            }\n\n            this.data.claims.push(claim);\n            _a = this.data.meta;\n            return [4\n            /*yield*/\n            , signer.sign(this.hashOfClaims())];\n\n          case 1:\n            _a.signature = _b.sent();\n            return [2\n            /*return*/\n            , claim];\n        }\n      });\n    });\n  };\n\n  IdentityMetadataWrapper.prototype.findClaim = function (type) {\n    return this.data.claims.find((0, claim_1.isOfType)(type));\n  };\n\n  IdentityMetadataWrapper.prototype.filterClaims = function (type) {\n    return this.data.claims.filter((0, claim_1.isOfType)(type));\n  };\n\n  return IdentityMetadataWrapper;\n}();\n\nexports.IdentityMetadataWrapper = IdentityMetadataWrapper;","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","MetaType","t","type","address","io_1","signature","exports","claims","array","claim_1","meta","data","IdentityMetadataWrapper","kit","url","tries","resp","_c","ok","Error","status","_a","fromRawString","text","_b","path","hash","metadata","verifySignerForAddress","contracts","getAccounts","accounts","isAccount","Promise","all","getVoteSigner","getValidatorSigner","getAttestationSigner","signers","some","signer","rawData","JSON","parse","validatedData","decode","PathReporter_1","report","join","right","length","verifySigner","res","types_1","forEach","claimType","results","filterClaims","stringify","claim","ACCOUNT","DOMAIN","existingClaims","filter","el","domain","KEYBASE","username","includes","index","findIndex","splice","push","sign","hashOfClaims","find"],"sourceRoot":"","sources":["../../src/identity/metadata.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}