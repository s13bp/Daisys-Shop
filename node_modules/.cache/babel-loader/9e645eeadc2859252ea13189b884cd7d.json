{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DowntimeSlasherWrapper = void 0;\n\nvar BaseSlasher_1 = require(\"./BaseSlasher\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar unpackInterval = function (interval) {\n  return [interval.start, interval.end];\n};\n/**\n * Contract handling slashing for Validator downtime using intervals.\n */\n\n\nvar DowntimeSlasherWrapper =\n/** @class */\nfunction (_super) {\n  __extends(DowntimeSlasherWrapper, _super);\n\n  function DowntimeSlasherWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Returns slashable downtime in blocks.\n     * @return The number of consecutive blocks before a Validator missing from IBFT consensus\n     * can be slashed.\n     */\n\n\n    _this.slashableDowntime = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.slashableDowntime, undefined, BaseWrapper_1.valueToInt);\n    /**\n     * Calculates and returns the signature bitmap for the specified interval.\n     * Similar to the parentSealBitmap of every block (where you have which validators were\n     * able to sign the previous block), this bitmap shows for that specific interval which\n     * validators signed at least one block\n     * @param interval First and last block of the interval.\n     * @return (string) The signature uptime bitmap for the specified interval.\n     * @dev startBlock and endBlock must be in the same epoch.\n     * @dev The getParentSealBitmap precompile requires that startBlock must be within 4 epochs of\n     * the current block.\n     */\n\n    _this.getBitmapForInterval = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.getBitmapForInterval, unpackInterval, BaseWrapper_1.solidityBytesToString);\n    /**\n     * Calculates and sets the signature bitmap for the specified interval.\n     * @param interval First and last block of the interval.\n     * @dev interval.start and interval.end must be in the same epoch.\n     * @return The signature bitmap for the specified interval.\n     */\n\n    _this.setBitmapForInterval = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setBitmapForInterval, unpackInterval);\n    /**\n     * Shows if the user already called the `setBitmapForInterval` for\n     * the specific interval.\n     * @param interval First and last block of the interval.\n     * @return True if the user already called the `setBitmapForInterval` for\n     * the specific interval.\n     */\n\n    _this.isBitmapSetForInterval = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.isBitmapSetForInterval, unpackInterval);\n    _this.lastSlashedBlock = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.lastSlashedBlock, undefined, BaseWrapper_1.valueToInt);\n    return _this;\n  }\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.slashableDowntime(), this.slashingIncentives()])];\n\n          case 1:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              slashableDowntime: res[0],\n              slashingIncentives: res[1]\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the downtime slasher contract\n   * @return DowntimeSlasherConfig object\n   */\n\n\n  DowntimeSlasherWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _a.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, config), {\n              slashableDowntime: (0, BaseWrapper_1.blocksToDurationString)(config.slashableDowntime)\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Calculates intervals which span `slashableDowntime` before provided block.\n   * @param block Block number to build intervals before.\n   * @param maximumLength Maximum length for any interval (limited by gas limit).\n   * @dev if block is undefined, latest will be used\n   * @return The signature bitmap for the specified interval.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.slashableDowntimeIntervalsBefore = function (block, maximumLength) {\n    if (maximumLength === void 0) {\n      maximumLength = 4000;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var window, end, intervals, epochNumber, firstBlock, start;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getSlashableDowntimeWindow(undefined, block)];\n\n          case 1:\n            window = _a.sent();\n            end = window.end;\n            intervals = [];\n            _a.label = 2;\n\n          case 2:\n            if (!(end > window.start)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.kit.getEpochNumberOfBlock(end)];\n\n          case 3:\n            epochNumber = _a.sent();\n            return [4\n            /*yield*/\n            , this.kit.getFirstBlockNumberForEpoch(epochNumber)];\n\n          case 4:\n            firstBlock = _a.sent();\n            start = Math.max(window.start, end - maximumLength, firstBlock);\n            intervals.push({\n              start: start,\n              end: end\n            });\n            end = start - 1;\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            return [2\n            /*return*/\n            , intervals.reverse()];\n        }\n      });\n    });\n  };\n  /**\n   * Shows if the user already called the `setBitmapForInterval` for intervals.\n   * @param intervals First and last block of the interval.\n   * @return True if the user already called the `setBitmapForInterval` for intervals.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.isBitmapSetForIntervals = function (intervals) {\n    return __awaiter(this, void 0, void 0, function () {\n      var setArray;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(intervals.map(function (interval) {\n              return _this.isBitmapSetForInterval(interval);\n            }))];\n\n          case 1:\n            setArray = _a.sent();\n            return [2\n            /*return*/\n            , !setArray.some(function (set) {\n              return !set;\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Tests if the given validator or signer did not sign any blocks in the interval.\n   * @param address Address of the validator account or signer.\n   * @param interval First and last block of the interval.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.wasValidatorDownForInterval = function (address, interval) {\n    return __awaiter(this, void 0, void 0, function () {\n      var startSignerIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.signerIndexAtBlock(address, interval.start)];\n\n          case 1:\n            startSignerIndex = _a.sent();\n            return [2\n            /*return*/\n            , this.contract.methods.wasDownForInterval(interval.start, interval.end, startSignerIndex).call()];\n        }\n      });\n    });\n  };\n  /**\n   * Returns true if the validator did not sign any blocks for the specified overlapping or adjacent\n   * intervals.\n   * @param address Address of the validator account or signer.\n   * @param intervals\n   * @return True if the validator signature does not appear in any block within the window.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.wasValidatorDownForIntervals = function (address, intervals) {\n    return __awaiter(this, void 0, void 0, function () {\n      var downArray;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all(intervals.map(function (interval) {\n              return _this.wasValidatorDownForInterval(address, interval);\n            }))];\n\n          case 1:\n            downArray = _a.sent();\n            return [2\n            /*return*/\n            , downArray.every(function (down) {\n              return down;\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Returns true if the validator did not sign any blocks for the specified overlapping or adjacent\n   * intervals.\n   * @param address Address of the validator account or signer.\n   * @param intervals A list of ordered intervals for which signature bitmaps have already been set.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.slashValidator = function (address, intervals) {\n    return __awaiter(this, void 0, void 0, function () {\n      var signerIndices, prevEpochNumber, _i, intervals_1, interval, epochNumber, signerIndex, _a, _b, _c, _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            if (intervals.length === 0) {\n              throw new Error('intervals array should have at least one element');\n            }\n\n            signerIndices = [];\n            prevEpochNumber = -1;\n            _i = 0, intervals_1 = intervals;\n            _e.label = 1;\n\n          case 1:\n            if (!(_i < intervals_1.length)) return [3\n            /*break*/\n            , 5];\n            interval = intervals_1[_i];\n            return [4\n            /*yield*/\n            , this.kit.getFirstBlockNumberForEpoch(interval.start)];\n\n          case 2:\n            epochNumber = _e.sent();\n            if (!(epochNumber !== prevEpochNumber)) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.signerIndexAtBlock(address, interval.start)];\n\n          case 3:\n            signerIndex = _e.sent();\n            signerIndices.push(signerIndex);\n            prevEpochNumber = epochNumber;\n            _e.label = 4;\n\n          case 4:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 5:\n            _b = (_a = this.slash).apply;\n            _c = [this];\n            _d = [[intervals.map(function (interval) {\n              return interval.start;\n            }), intervals.map(function (interval) {\n              return interval.end;\n            }), signerIndices]];\n            return [4\n            /*yield*/\n            , this.trailingSlashArgs(address, intervals[0].start)];\n\n          case 6:\n            return [2\n            /*return*/\n            , _b.apply(_a, _c.concat([__spreadArray.apply(void 0, _d.concat([_e.sent(), false]))]))];\n        }\n      });\n    });\n  };\n  /**\n   * Calculate the slashable downtime window with respect to a provided start/end block numbers and length.\n   * @param startBlock First block of the downtime. Determined from endBlock if not provided.\n   * @param endBlock Last block of the downtime. Determined from startBlock or grandparent of latest block if not provided.\n   * @param length Length of downtime. Determined from minimum slashable downtime if not provided.\n   */\n\n\n  DowntimeSlasherWrapper.prototype.getSlashableDowntimeWindow = function (startBlock, endBlock, length) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!length) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.slashableDowntime()];\n\n          case 1:\n            length = _b.sent();\n            _b.label = 2;\n\n          case 2:\n            if (!!endBlock) return [3\n            /*break*/\n            , 6];\n            if (!startBlock) return [3\n            /*break*/\n            , 3];\n            _a = startBlock + length - 1;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.kit.connection.getBlockNumber()];\n\n          case 4:\n            _a = _b.sent() - 2; // latest grandparent\n\n            _b.label = 5;\n\n          case 5:\n            endBlock = _a; // latest grandparent\n\n            _b.label = 6;\n\n          case 6:\n            return [2\n            /*return*/\n            , {\n              start: startBlock !== null && startBlock !== void 0 ? startBlock : endBlock - length + 1,\n              end: endBlock\n            }];\n        }\n      });\n    });\n  };\n\n  return DowntimeSlasherWrapper;\n}(BaseSlasher_1.BaseSlasher);\n\nexports.DowntimeSlasherWrapper = DowntimeSlasherWrapper;","map":{"version":3,"mappings":"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","names":["unpackInterval","interval","start","end","__extends","_this","contract","methods","slashableDowntime","undefined","BaseWrapper_1","getBitmapForInterval","kit","setBitmapForInterval","isBitmapSetForInterval","lastSlashedBlock","DowntimeSlasherWrapper","Promise","all","slashingIncentives","res","_a","getConfig","config","block","maximumLength","getSlashableDowntimeWindow","window","intervals","getEpochNumberOfBlock","epochNumber","getFirstBlockNumberForEpoch","firstBlock","Math","max","push","reverse","map","setArray","some","set","address","signerIndexAtBlock","startSignerIndex","wasDownForInterval","call","wasValidatorDownForInterval","downArray","every","down","length","Error","signerIndices","prevEpochNumber","intervals_1","_i","_e","signerIndex","slash","apply","trailingSlashArgs","startBlock","endBlock","_b","connection","getBlockNumber","BaseSlasher_1","exports"],"sourceRoot":"","sources":["../../src/wrappers/DowntimeSlasher.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}